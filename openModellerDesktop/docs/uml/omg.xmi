<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-06-08T17:21:02" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.2</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="162" isRoot="false" isAbstract="false" name="const" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13772" isRoot="false" isAbstract="false" name="typedef" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14813" isRoot="false" isAbstract="false" name="enum" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15721" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15722" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15723" isRoot="false" isAbstract="false" name="virtual" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="105" isRoot="false" isAbstract="false" name="void" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="117" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8764" isRoot="false" isAbstract="false" name="QVBoxLayout" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8804" isRoot="false" isAbstract="false" name="QScrollArea" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8844" isRoot="false" isAbstract="false" name="QFrame" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8884" isRoot="false" isAbstract="false" name="QGridLayout" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9960" isRoot="false" isAbstract="false" name="QResizeEvent" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="10342" isRoot="false" isAbstract="false" name="QTreeWidgetItem" />
    <UML:DataType stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13111" isRoot="false" isAbstract="false" name="LocalityVector" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14227" isRoot="false" isAbstract="false" name="QWidget*" elementReference="14226" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14245" isRoot="false" isAbstract="false" name="OmgExperiment*" elementReference="20" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14254" isRoot="false" isAbstract="false" name="const QListWidget*" elementReference="14253" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14819" isRoot="false" isAbstract="false" name="const QString" elementReference="126" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14826" isRoot="false" isAbstract="false" name="const FileType" elementReference="14812" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14829" isRoot="false" isAbstract="false" name="QString&amp;" elementReference="126" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16167" isRoot="false" isAbstract="false" name="QVector&lt; OmgAlgorithmParameter >" elementReference="125" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16282" isRoot="false" isAbstract="false" name="QVector&lt; float >" elementReference="125" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16306" isRoot="false" isAbstract="false" name="QVector&lt; float >&amp;" elementReference="125" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16357" isRoot="false" isAbstract="false" name="const long" elementReference="8" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16361" isRoot="false" isAbstract="false" name="const int" elementReference="2" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16364" isRoot="false" isAbstract="false" name="const unsigned int" elementReference="16363" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16368" isRoot="false" isAbstract="false" name="const bool" elementReference="5" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16371" isRoot="false" isAbstract="false" name="const OmgClimateFileReader::FileType" elementReference="16333" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16393" isRoot="false" isAbstract="false" name="QVector&lt; int >" elementReference="125" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16395" isRoot="false" isAbstract="false" name="void*" elementReference="105" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16416" isRoot="false" isAbstract="false" name="GDALDataset*" elementReference="16415" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16429" isRoot="false" isAbstract="false" name="OmgClimateFileReader*" elementReference="16329" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16485" isRoot="false" isAbstract="false" name="OmgFileWriter*" elementReference="16449" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16536" isRoot="false" isAbstract="false" name="const OmgFileWriter::FileType" elementReference="16450" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16545" isRoot="false" isAbstract="false" name="QMap&lt; QString, bool >" elementReference="16544" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16554" isRoot="false" isAbstract="false" name="const QString&amp;" elementReference="126" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16573" isRoot="false" isAbstract="false" name="OmgClimateFileGroup*" elementReference="16421" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16581" isRoot="false" isAbstract="false" name="QMap&lt; QString, OmgClimateFileReader :: FileType >" elementReference="16544" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16583" isRoot="false" isAbstract="false" name="QMap&lt; QString, OmgFileWriter :: FileType >" elementReference="16544" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16632" isRoot="false" isAbstract="false" name="const OmgLayer&amp;" elementReference="16625" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16636" isRoot="false" isAbstract="false" name="OmgLayer&amp;" elementReference="16625" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16690" isRoot="false" isAbstract="false" name="OmgSampleVector" elementReference="16282" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16767" isRoot="false" isAbstract="false" name="const QStringList" elementReference="275" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16770" isRoot="false" isAbstract="false" name="const OmgAlgorithm" elementReference="18" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16773" isRoot="false" isAbstract="false" name="const QDateTime" elementReference="16750" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16883" isRoot="false" isAbstract="false" name="QObject*" elementReference="14808" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16887" isRoot="false" isAbstract="false" name="OmgModel&amp;" elementReference="17" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16893" isRoot="false" isAbstract="false" name="const OmgAlgorithmSet" elementReference="16246" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16928" isRoot="false" isAbstract="false" name="OmgModellerPluginInterface*" elementReference="16872" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17006" isRoot="false" isAbstract="false" name="const OmgModel&amp;" elementReference="17" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17023" isRoot="false" isAbstract="false" name="OmgOmLogCallback*" elementReference="16990" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17058" isRoot="false" isAbstract="false" name="QTextStream&amp;" elementReference="16477" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17064" isRoot="false" isAbstract="false" name="const std::string&amp;" elementReference="17063" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17125" isRoot="false" isAbstract="false" name="const QHttpResponseHeader&amp;" elementReference="17124" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17150" isRoot="false" isAbstract="false" name="SHPHandle" elementReference="17149" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17155" isRoot="false" isAbstract="false" name="DBFHandle" elementReference="17154" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17186" isRoot="false" isAbstract="false" name="double*" elementReference="7" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29513" isRoot="false" isAbstract="false" name="OpenModeller*" elementReference="29482" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29559" isRoot="false" isAbstract="false" name="struct soap*" elementReference="29557" />
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17" isRoot="false" isAbstract="false" name="OmgModel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16714" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="536" type="126" name="mCoordinateSystem" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="551" type="126" name="mCoordinateSystemName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="566" type="126" name="mSpeciesFile" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="581" type="126" name="mTaxonName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="596" type="126" name="mBuildMaskLayerName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="611" type="126" name="mProjectionMaskLayerName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="626" type="126" name="mOutputFormatLayerName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16781" type="2" name="mModelId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16782" type="16625" name="mOutputFormatLayer" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16783" type="16656" name="mProjectionLayers" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16784" type="16656" name="mCreationLayers" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16785" type="18" name="mAlgorithm" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16796" type="5" name="mCompletedFlag" />
      <UML:Attribute comment="//this type is defined at the bottom of omglocality.h" isSpecification="false" visibility="private" xmi.id="16807" type="16713" name="mLocalities" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16828" type="16750" name="mStartDateTimeStamp" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16839" type="16750" name="mEndDateTimeStamp" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16850" type="126" name="mThumbnailFileName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16861" type="126" name="mModelDefinition" />
      <UML:Operation stereotype="162" isSpecification="false" isLeaf="false" visibility="public" xmi.id="161" isRoot="false" isAbstract="false" isQuery="false" name="isValid" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67742" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return a string representation of the model. Currently only intended for debuggin purposes.
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="198" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67743" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="202" isRoot="false" isAbstract="false" isQuery="false" name="setCoordinateSystem" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="203" value="" type="126" name="theCoordinateSystem" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="210" isRoot="false" isAbstract="false" isQuery="false" name="setCoordinateSystemName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="211" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="218" isRoot="false" isAbstract="false" isQuery="false" name="setOccurrencesFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="219" value="" type="126" name="theSpeciesFile" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="226" isRoot="false" isAbstract="false" isQuery="false" name="setSpeciesFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="227" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="234" isRoot="false" isAbstract="false" isQuery="false" name="setTaxonName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="235" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="242" isRoot="false" isAbstract="false" isQuery="false" name="setBuildMaskLayerName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="246" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="253" isRoot="false" isAbstract="false" isQuery="false" name="setProjectionMaskLayerName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="254" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="261" isRoot="false" isAbstract="false" isQuery="false" name="setOutputFormatLayerName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="262" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="293" isRoot="false" isAbstract="false" isQuery="false" name="setCreationLayerNames" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="294" value="" type="275" name="theNames" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="316" isRoot="false" isAbstract="false" isQuery="false" name="setProjectionLayerNames" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="317" value="" type="275" name="theNames" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="324" isRoot="false" isAbstract="false" isQuery="false" name="setAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="325" value="" type="18" name="theAlgorithm" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="335" isRoot="false" isAbstract="false" isQuery="false" name="setCompleted" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="336" value="" type="5" name="theFlag" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="346" isRoot="false" isAbstract="false" isQuery="false" name="coordinateSystem" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67744" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="431" isRoot="false" isAbstract="false" isQuery="false" name="coordinateSystemName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67745" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="437" isRoot="false" isAbstract="false" isQuery="false" name="speciesFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67746" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="444" isRoot="false" isAbstract="false" isQuery="false" name="taxonName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67747" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="452" isRoot="false" isAbstract="false" isQuery="false" name="buildMaskLayerName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67748" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="461" isRoot="false" isAbstract="false" isQuery="false" name="projectionMaskLayerName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67749" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="471" isRoot="false" isAbstract="false" isQuery="false" name="outputFormatLayerName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67750" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="482" isRoot="false" isAbstract="false" isQuery="false" name="creationLayerNames" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67751" type="275" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="494" isRoot="false" isAbstract="false" isQuery="false" name="projectionLayerNames" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67752" type="275" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="507" isRoot="false" isAbstract="false" isQuery="false" name="algorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67753" type="18" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="521" isRoot="false" isAbstract="false" isQuery="false" name="isCompleted" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67754" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16717" isRoot="false" isAbstract="false" isQuery="false" name="OmgModel" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16718" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgModel" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16721" isRoot="false" isAbstract="false" isQuery="false" name="toHtml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67755" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16722" isRoot="false" isAbstract="false" isQuery="false" name="projectionLayersXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67756" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//mutators" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16723" isRoot="false" isAbstract="false" isQuery="false" name="setId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16724" value="" type="2" name="theId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16749" isRoot="false" isAbstract="false" isQuery="false" name="setStartDateTimeStamp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16751" value="" type="16750" name="theDateTimeStamp" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16752" isRoot="false" isAbstract="false" isQuery="false" name="setEndDateTimeStamp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16753" value="" type="16750" name="theDateTimeStamp" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16754" isRoot="false" isAbstract="false" isQuery="false" name="setThumnailFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16755" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="this is what is returned from om_create process. 
at the moment we just store this in a string member, but in the future
we ill parse it out and store the individual constituents 
as properties of the model object" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16756" isRoot="false" isAbstract="false" isQuery="false" name="setModelDefinition" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16757" value="" type="126" name="theDefinition" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//accessors" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16758" isRoot="false" isAbstract="false" isQuery="false" name="id" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67757" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16772" isRoot="false" isAbstract="false" isQuery="false" name="startDateTimeStamp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67758" type="16773" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16774" isRoot="false" isAbstract="false" isQuery="false" name="endDateTimeStamp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67759" type="16773" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16775" isRoot="false" isAbstract="false" isQuery="false" name="thumbnailFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67760" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16776" isRoot="false" isAbstract="false" isQuery="false" name="modelDefinition" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67761" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// General helper functions///** Once the taxon name and species file properties have
been set, you can call this method to populate the localities
collection." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16777" isRoot="false" isAbstract="false" isQuery="false" name="loadLocalities" />
      <UML:Operation comment="//// implement the serialisable interface:///** Return an xml representation of this model as a simple qstring constant" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16778" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67762" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16779" isRoot="false" isAbstract="false" isQuery="false" name="fromXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67763" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16780" value="" type="14819" name="theXml" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="18" isRoot="false" isAbstract="false" name="OmgAlgorithm" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1493" type="126" name="mId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1516" type="126" name="mName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1539" type="126" name="mAuthor" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1562" type="126" name="mCodeAuthor" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1585" type="126" name="mVersion" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1608" type="126" name="mDescription" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1631" type="126" name="mBibliography" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="1654" type="125" name="mParameters" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16200" type="126" name="mContact" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="897" isRoot="false" isAbstract="false" isQuery="false" name="setId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="898" value="" type="126" name="theId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="927" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="928" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="957" isRoot="false" isAbstract="false" isQuery="false" name="setAuthor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="958" value="" type="126" name="theAuthor" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="987" isRoot="false" isAbstract="false" isQuery="false" name="setCodeAuthor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="988" value="" type="126" name="theCodeAuthor" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1017" isRoot="false" isAbstract="false" isQuery="false" name="setVersion" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1018" value="" type="126" name="theVersion" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1047" isRoot="false" isAbstract="false" isQuery="false" name="setDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1048" value="" type="126" name="theDescription" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1077" isRoot="false" isAbstract="false" isQuery="false" name="setBibliography" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1078" value="" type="126" name="theBibliography" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1107" isRoot="false" isAbstract="false" isQuery="false" name="setParameters" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1108" value="" type="125" name="theParameters" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1137" isRoot="false" isAbstract="false" isQuery="false" name="addParameter" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1138" value="" type="19" name="theParameter" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1293" isRoot="false" isAbstract="false" isQuery="false" name="id" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67764" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1309" isRoot="false" isAbstract="false" isQuery="false" name="name" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67765" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1326" isRoot="false" isAbstract="false" isQuery="false" name="author" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67766" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1344" isRoot="false" isAbstract="false" isQuery="false" name="codeAuthor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67767" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1363" isRoot="false" isAbstract="false" isQuery="false" name="version" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67768" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1383" isRoot="false" isAbstract="false" isQuery="false" name="description" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67769" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1404" isRoot="false" isAbstract="false" isQuery="false" name="bibliography" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67770" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1426" isRoot="false" isAbstract="false" isQuery="false" name="parameters" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67771" type="125" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16157" isRoot="false" isAbstract="false" isQuery="false" name="OmgAlgorithm" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16158" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgAlgorithm" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16159" isRoot="false" isAbstract="false" isQuery="false" name="OmgAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16160" value="" type="126" name="theId" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16161" value="" type="126" name="theName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16162" value="" type="126" name="theAuthor" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16163" value="" type="126" name="theCodeAuthor" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16164" value="" type="126" name="theVersion" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16165" value="" type="126" name="theDescription" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16166" value="" type="126" name="theBibliography" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16168" value="" type="16167" name="theParameters" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16169" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67772" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16170" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67773" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16179" isRoot="false" isAbstract="false" isQuery="false" name="setContact" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16180" value="" type="126" name="theContact" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16187" isRoot="false" isAbstract="false" isQuery="false" name="setParameters" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16188" value="" type="16167" name="theParameters" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16194" isRoot="false" isAbstract="false" isQuery="false" name="contact" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67774" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="19" isRoot="false" isAbstract="false" name="OmgAlgorithmParameter" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2224" type="126" name="mId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2253" type="126" name="mName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2282" type="126" name="mType" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2311" type="126" name="mDefault" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2368" type="126" name="mDescription" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2397" type="126" name="mMinimum" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2426" type="126" name="mMaximum" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16235" type="126" name="mValue" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1743" isRoot="false" isAbstract="false" isQuery="false" name="setId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1744" value="" type="126" name="theId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1789" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1790" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1835" isRoot="false" isAbstract="false" isQuery="false" name="setType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1836" value="" type="126" name="theType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1881" isRoot="false" isAbstract="false" isQuery="false" name="setDefault" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1882" value="" type="126" name="theDefault" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1927" isRoot="false" isAbstract="false" isQuery="false" name="setDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1928" value="" type="126" name="theDescription" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1973" isRoot="false" isAbstract="false" isQuery="false" name="setMinimum" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1974" value="" type="126" name="theMinimum" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2019" isRoot="false" isAbstract="false" isQuery="false" name="setMaximum" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2020" value="" type="126" name="theMaximum" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2065" isRoot="false" isAbstract="false" isQuery="false" name="id" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67775" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2089" isRoot="false" isAbstract="false" isQuery="false" name="name" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67776" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2114" isRoot="false" isAbstract="false" isQuery="false" name="type" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67777" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2140" isRoot="false" isAbstract="false" isQuery="false" name="defaultValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67778" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2167" isRoot="false" isAbstract="false" isQuery="false" name="minimum" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67779" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2195" isRoot="false" isAbstract="false" isQuery="false" name="maximum" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67780" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16201" isRoot="false" isAbstract="false" isQuery="false" name="OmgAlgorithmParameter" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16202" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgAlgorithmParameter" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16203" isRoot="false" isAbstract="false" isQuery="false" name="OmgAlgorithmParameter" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16204" value="" type="126" name="theId" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16205" value="" type="126" name="theName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16206" value="" type="126" name="theDefault" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16207" value="" type="126" name="theDescription" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16208" value="" type="126" name="theMinimum" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16209" value="" type="126" name="theMaximum" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16210" value="" type="126" name="theValue" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="The user defined value for this parameter" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16225" isRoot="false" isAbstract="false" isQuery="false" name="setValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16226" value="" type="126" name="theValue" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Provide a string representation of this param" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16227" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67781" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16234" isRoot="false" isAbstract="false" isQuery="false" name="value" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67782" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
///qt includes/**
An experiment represents a collection of models that need to be processed.
Rather than setting up models and running them individually, you can add them
to the experiment, which (where possible) will parelelise the process, keep 
track of overall experiment progress and perform other house keeping jobs for you.
@author Tim Sutton, 2005" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="20" isRoot="false" isAbstract="false" name="OmgExperiment" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16913" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="The container for all the models in the queue" isSpecification="false" visibility="private" xmi.id="144" type="125" name="mModelVector" />
      <UML:Attribute comment="The position in the queue of the last model that was executed" isSpecification="false" visibility="private" xmi.id="146" type="2" name="mLastPos" />
      <UML:Attribute comment="The adapter that will be used to run the models" isSpecification="false" visibility="private" xmi.id="16941" type="16928" name="mpModellerPlugin" />
      <UML:Operation comment="Add a new model to the experiment queue" isSpecification="false" isLeaf="false" visibility="public" xmi.id="104" isRoot="false" isAbstract="false" isQuery="false" name="addModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="106" value="" type="17" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Start running the experiment " isSpecification="false" isLeaf="false" visibility="public" xmi.id="107" isRoot="false" isAbstract="false" isQuery="false" name="run" />
      <UML:Operation comment="Stop running anymore models" isSpecification="false" isLeaf="false" visibility="public" xmi.id="108" isRoot="false" isAbstract="false" isQuery="false" name="stop" />
      <UML:Operation comment="The number of models to be run in the experiment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="109" isRoot="false" isAbstract="false" isQuery="false" name="count" />
      <UML:Operation comment="Clear the model queue for the experiment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="110" isRoot="false" isAbstract="false" isQuery="false" name="clear" />
      <UML:Operation comment="Remove all completed models from the queue" isSpecification="false" isLeaf="false" visibility="public" xmi.id="111" isRoot="false" isAbstract="false" isQuery="false" name="removeCompleted" />
      <UML:Operation comment="Return a string representation of the whole experiment. Mainly intended for debugging purposes" isSpecification="false" isLeaf="false" visibility="public" xmi.id="127" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67783" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notify all observers how far the total experiment has progressed" isSpecification="false" isLeaf="false" visibility="public" xmi.id="130" isRoot="false" isAbstract="false" isQuery="false" name="experimentProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="131" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notify all listeners how far the creation of the current model has progressed" isSpecification="false" isLeaf="false" visibility="public" xmi.id="134" isRoot="false" isAbstract="false" isQuery="false" name="modelCreationProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="135" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notify all listeners how far the projection of the current model has progressed " isSpecification="false" isLeaf="false" visibility="public" xmi.id="138" isRoot="false" isAbstract="false" isQuery="false" name="modelProjectionProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="139" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16916" isRoot="false" isAbstract="false" isQuery="false" name="OmgExperiment" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16917" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgExperiment" />
      <UML:Operation comment="Get a model from experiment given its number" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16920" isRoot="false" isAbstract="false" isQuery="false" name="getModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67784" type="17" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16921" value="" type="2" name="theModelId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Tell the experiment which modeller adapter instance to use" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16927" isRoot="false" isAbstract="false" isQuery="false" name="setModellerPlugin" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16929" value="" type="16928" name="theAdapter" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notify all observers of the experiment size" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16931" isRoot="false" isAbstract="false" isQuery="false" name="experimentMaximum" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16932" value="" type="2" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notify listeners of a new log message" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16939" isRoot="false" isAbstract="false" isQuery="false" name="logMessage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16940" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="54" isRoot="false" isAbstract="false" name="OmgMainWindow" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="6453" type="6376" name="mPictureWidget" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7256" type="6568" name="*fileMenu" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7295" type="6568" name="*toolsMenu" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7334" type="6568" name="*settingsMenu" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7373" type="6568" name="*helpMenu" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7412" type="6607" name="*fileToolBar" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7451" type="6607" name="*toolsToolBar" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7490" type="6684" name="*newAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7529" type="6684" name="*fetchAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7568" type="6684" name="*exitAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="7987" type="6607" name="*optionsAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8026" type="6684" name="*toolsConvertAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8065" type="6684" name="*toolsClimateConvertAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8104" type="6684" name="*toolsContourAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8143" type="6684" name="*toolsRasterThresholdAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8182" type="6684" name="*toolsWarpAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8221" type="6684" name="*toolsFileSplitterAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8260" type="6607" name="*aboutOmgAct" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8299" type="6684" name="*licenseAct" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4799" isRoot="false" isAbstract="false" isQuery="false" name="saveMapAsImage" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4831" isRoot="false" isAbstract="false" isQuery="false" name="drawModelImage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4832" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Log emitted from wizard when model is done
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4895" isRoot="false" isAbstract="false" isQuery="false" name="modelDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4896" value="" type="126" name="theLog" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5021" isRoot="false" isAbstract="false" isQuery="false" name="closeEvent" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="5022" value="" type="5147" name="*event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5241" isRoot="false" isAbstract="false" isQuery="false" name="fileNew" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5273" isRoot="false" isAbstract="false" isQuery="false" name="fileFetch" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5305" isRoot="false" isAbstract="false" isQuery="false" name="fileExit" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5337" isRoot="false" isAbstract="false" isQuery="false" name="settingsOption" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5369" isRoot="false" isAbstract="false" isQuery="false" name="about" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5401" isRoot="false" isAbstract="false" isQuery="false" name="showLicence" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5433" isRoot="false" isAbstract="false" isQuery="false" name="checkLicenceIsAgreed" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67785" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5466" isRoot="false" isAbstract="false" isQuery="false" name="toolsConvert" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67786" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5500" isRoot="false" isAbstract="false" isQuery="false" name="toolsContour" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67787" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5535" isRoot="false" isAbstract="false" isQuery="false" name="toolsRasterThreshold" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67788" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5571" isRoot="false" isAbstract="false" isQuery="false" name="toolsClimateConvert" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67789" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5608" isRoot="false" isAbstract="false" isQuery="false" name="toolsWarp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67790" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5646" isRoot="false" isAbstract="false" isQuery="false" name="toolsFileSplitter" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67791" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="6065" isRoot="false" isAbstract="false" isQuery="false" name="readSettings" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="6104" isRoot="false" isAbstract="false" isQuery="false" name="writeSettings" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="6143" isRoot="false" isAbstract="false" isQuery="false" name="createActions" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="6182" isRoot="false" isAbstract="false" isQuery="false" name="createMenus" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="6221" isRoot="false" isAbstract="false" isQuery="false" name="createToolbars" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="6260" isRoot="false" isAbstract="false" isQuery="false" name="createStatusBar" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
///// QT includes///**
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="55" isRoot="false" isAbstract="false" name="OmgModelDesigner" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="14217" />
      <UML:Generalization xmi.idref="14222" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13241" type="13111" name="mLocalityVector" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13286" type="57" name="mOmgExperimentProgress" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13330" name="mOmgModellerLocalAdapter" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13374" type="18" name="mAlgorithm" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14246" type="13771" name="mWktMap" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12379" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnCancel_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12422" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnOk_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12465" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnCopyLayers_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12508" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnRemoveProjectionLayer_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12551" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnRemoveModelLayer_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12594" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnSelectLocalitiesFile_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12637" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnAddModelLayers_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12680" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnAddProjectionLayers_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12723" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnAlgorithmProperties_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12766" isRoot="false" isAbstract="false" isQuery="false" name="setStatus" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12767" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return an experiment object that represents all the emodels to be processed" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12852" isRoot="false" isAbstract="false" isQuery="false" name="getExperiment" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67792" type="20" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14225" isRoot="false" isAbstract="false" isQuery="false" name="OmgModelDesigner" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14228" value="" type="14227" name="parent" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14231" value="" type="14230" name="fl" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14232" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgModelDesigner" />
      <UML:Operation comment="Checks to see if the input and output layers match.
@return bool True if layers are semantically equivalent." isSpecification="false" isLeaf="false" visibility="private" xmi.id="14247" isRoot="false" isAbstract="false" isQuery="false" name="checkLayersMatch" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67793" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14248" isRoot="false" isAbstract="false" isQuery="false" name="setSpeciesList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14249" value="" type="126" name="theFileNameQString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14250" isRoot="false" isAbstract="false" isQuery="false" name="readSettings" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14251" isRoot="false" isAbstract="false" isQuery="false" name="writeSettings" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14252" isRoot="false" isAbstract="false" isQuery="false" name="getListWidgetEntries" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67794" type="275" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14255" value="" type="14254" name="theListWidget" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="56" isRoot="false" isAbstract="false" name="OmgAlgorithmProperties" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="8646" type="18" name="mAlgorithm" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="9275" type="8764" name="mpLayout2" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="9315" type="8804" name="mpScrollArea3" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="9355" type="8844" name="mpQFrame4" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="9395" type="8884" name="mpLayout5" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="8414" isRoot="false" isAbstract="false" isQuery="false" name="setAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="8415" value="" type="18" name="theAlgorithm" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="8606" isRoot="false" isAbstract="false" isQuery="false" name="algorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67795" type="18" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57" isRoot="false" isAbstract="false" name="OmgExperimentProgress" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="11909" isRoot="false" isAbstract="false" isQuery="false" name="setModelProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="11910" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="11995" isRoot="false" isAbstract="false" isQuery="false" name="setMapProgres" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="11996" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="12081" isRoot="false" isAbstract="false" isQuery="false" name="setTotalProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12082" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="12167" isRoot="false" isAbstract="false" isQuery="false" name="logMessage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12168" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="58" isRoot="false" isAbstract="false" name="OmgLayerSelector" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11149" type="10342" name="mpListParent" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11234" type="126" name="mBaseDirString" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11277" type="275" name="mSelectedLayersList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11320" type="10763" name="mOmgGdal" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9630" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnDirectorySelector_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9670" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnOK_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9710" isRoot="false" isAbstract="false" isQuery="false" name="on_pbnCancel_clicked" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9750" isRoot="false" isAbstract="false" isQuery="false" name="getSelectedLayers" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67796" type="275" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9791" isRoot="false" isAbstract="false" isQuery="false" name="getBaseDir" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67797" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9833" isRoot="false" isAbstract="false" isQuery="false" name="itemCount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67798" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="10129" isRoot="false" isAbstract="false" isQuery="false" name="resizeEvent" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="10130" value="" type="9960" name="*event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="10215" isRoot="false" isAbstract="false" isQuery="false" name="traverseDirectories" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="10848" value="" type="126" name="dirname" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="10891" value="" type="10342" name="theListViewItem" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="10934" isRoot="false" isAbstract="false" isQuery="false" name="iterateTreeWidget" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="10977" value="0" type="10342" name="thepParent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="11062" isRoot="false" isAbstract="false" isQuery="false" name="addNodeToFileList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="11063" value="0" type="10342" name="thepItem" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="125" isRoot="false" isAbstract="false" name="QVector" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="126" isRoot="false" isAbstract="false" name="QString" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="275" isRoot="false" isAbstract="false" name="QStringList" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5147" isRoot="false" isAbstract="false" name="QCloseEvent" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6376" isRoot="false" isAbstract="false" name="QLabel" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6568" isRoot="false" isAbstract="false" name="QMenu" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6607" isRoot="false" isAbstract="false" name="QToolBar" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6684" isRoot="false" isAbstract="false" name="QAction" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="10763" isRoot="false" isAbstract="false" name="OmgGdal" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="14809" />
      <UML:Generalization xmi.idref="16942" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14816" isRoot="false" isAbstract="false" isQuery="false" name="OmgGdal" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14817" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgGdal" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14818" isRoot="false" isAbstract="false" isQuery="false" name="getWorldFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67799" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14820" value="" type="14819" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14821" isRoot="false" isAbstract="false" isQuery="false" name="getAsciiHeader" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67800" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14822" value="" type="14819" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A Qt style wrapper for gdal to convert from one file format to another.
@NOTE the output file name will be automatically determined by using the input file
name, and writing out a similarly named file with an appropriate extension.
@see FileType enum for the currently supported output file types
@param const QString theInputFile the name of the input file
@param const QString theOutputPath the name of the output folder
@param const FileType theFileType the type of the output file
@return const QString the name of the output file" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14823" isRoot="false" isAbstract="false" isQuery="false" name="convert" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67801" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14824" value="" type="14819" name="theInputFile" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14825" value="" type="14819" name="theOutputPath" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14827" value="" type="14826" name="theOutputFileType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A Qt style wrapper for gdal to resize a file.
@see FileType enum for the currently supported input file types
@param const QString theInputFile the name of the input file
@param const QString theOutputPath the name of the output folder
@param const int theWidth the width of output image
@param const int theHeight the height of output image
@return const QString the name of the output file
///  const QString gdalResize(const QString theFileName, const QString theOutputPath, const int theWidth, const int theHeight){};/** Get a list of supported GDAL datatype file filters.
  @NOTE THis method was copied over from QGIS QgsRasterLayer
  @param A reference to a string. This will be populated with the results.
  @return void" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14828" isRoot="false" isAbstract="false" isQuery="false" name="buildSupportedRasterFileFilter" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14830" value="" type="14829" name="theFileFiltersString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Create contour lines from probability surface
Only the first raster band will be contoured.Contours are fixed at 10 unit increments.
@NOTE This method is based on the GDAL apps/gdal_contour.cpp sources
@param const QString theInputFile Gdal dataset to be contoured
@param const QString the name of the generated shapefile" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14831" isRoot="false" isAbstract="false" isQuery="false" name="contour" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67802" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14832" value="" type="14819" name="theInputFile" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Call the emitter a progress signal.
@NOTE We need this level of indirection to support gdal style call backs.
@see updateProgress" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14833" isRoot="false" isAbstract="false" isQuery="false" name="showProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14834" value="" type="2" name="theProgress" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14835" value="" type="2" name="theMaximum" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A simple test to see if a file is a valid gdal raster.
@param QString the name of the file to test
@return bool True if file is valid" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14836" isRoot="false" isAbstract="false" isQuery="false" name="isValidGdalFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67803" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14837" value="" type="14819" name="theFilename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A simple test to see if a gdal raster has a valid projection
@param QString the name of the file to test
@return bool True if file is valid" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14838" isRoot="false" isAbstract="false" isQuery="false" name="isValidGdalProj" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67804" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14839" value="" type="14819" name="theFilename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="14840" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14841" value="" type="126" name="theError" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Emit a progress signal.
@NOTE should only ever be called using the showProgress method so we can properly 
support gdal style callbacks
@see showProgress" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="14842" isRoot="false" isAbstract="false" isQuery="false" name="updateProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14843" value="" type="2" name="theProgress" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14844" value="" type="2" name="theMaximum" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14845" isRoot="false" isAbstract="false" isQuery="false" name="gdal2Tiff" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67805" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14846" value="" type="14819" name="theFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14847" value="" type="14819" name="theOutputPath" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14848" isRoot="false" isAbstract="false" isQuery="false" name="gdal2Ascii" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67806" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14849" value="" type="14819" name="theFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14850" value="" type="14819" name="theOutputPath" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Enumeration stereotype="14813" comment="//declare eums first!" isSpecification="false" isLeaf="false" visibility="public" namespace="10763" xmi.id="14812" isRoot="false" isAbstract="false" name="FileType" >
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="14812" xmi.id="14814" isRoot="false" isAbstract="false" name="GeoTiff" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="14812" xmi.id="14815" isRoot="false" isAbstract="false" name="ArcInfoAscii" />
      </UML:Enumeration>
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton                                      *
  tim@linfiniti.com                                                     * 
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13548" isRoot="false" isAbstract="false" name="OmgSpatialReferenceSystem" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="13769" isRoot="false" isAbstract="false" isQuery="false" name="OmgSpatialReferenceSystem" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="13770" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgSpatialReferenceSystem" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="13773" isRoot="false" isAbstract="false" isQuery="false" name="getWktMap" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67807" type="13771" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="13548" xmi.id="13771" isRoot="false" isAbstract="false" name="WktMap" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14216" isRoot="false" isAbstract="false" name="QDialog" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14220" isRoot="false" isAbstract="false" name="Ui" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="14220" xmi.id="14221" isRoot="false" isAbstract="false" name="OmgModelDesignerBase" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14226" isRoot="false" isAbstract="false" name="QWidget" />
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14229" isRoot="false" isAbstract="false" name="Qt" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="14229" xmi.id="14230" isRoot="false" isAbstract="false" name="WFlags" />
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14253" isRoot="false" isAbstract="false" name="QListWidget" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14808" isRoot="false" isAbstract="false" name="QObject" />
    <UML:Class comment="An abstract base class for any class that is serialiseable to xml
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16236" isRoot="false" isAbstract="false" name="OmgSerialisable" >
     <UML:Classifier.feature>
      <UML:Operation stereotype="15721" comment="Constructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16237" isRoot="false" isAbstract="false" isQuery="false" name="OmgSerialisable" />
      <UML:Operation comment="Desctructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16238" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgSerialisable" />
      <UML:Operation comment="Write this object to xml and return result as qstring (virtual) ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16239" isRoot="false" isAbstract="true" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67808" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Write this object to xml and return result as qstring (virtual).
 We provide a basic default implementation where given a file name,
 we will write the serialised xml to that file.
Internally it uses toXml() method above so that must be properly implemented." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16240" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67809" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16241" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read this object from xml and return result as true for success, false for failure (virtual)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16242" isRoot="false" isAbstract="true" isQuery="false" name="fromXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67810" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16243" value="" type="14819" name="theXml" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read this object from xml in a file and return result as true for success, false for failure.
Internally it uses fromXml(QString) method above so that must be properly implemented." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16244" isRoot="false" isAbstract="false" isQuery="false" name="fromXmlFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67811" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16245" value="" type="14819" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="An abstract base class for any class that is serialiseable to xml
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16246" isRoot="false" isAbstract="false" name="OmgAlgorithmSet" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16247" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16273" type="126" name="mame" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16274" type="126" name="mDescription" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16276" type="16275" name="mAlgorithmsHash" />
      <UML:Operation stereotype="15721" comment="Constructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16250" isRoot="false" isAbstract="false" isQuery="false" name="OmgAlgorithmSet" />
      <UML:Operation comment="Desctructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16251" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgAlgorithmSet" />
      <UML:Operation comment="Add a algorithm to the algorithmset
@see OmgAlgorithm " isSpecification="false" isLeaf="false" visibility="public" xmi.id="16252" isRoot="false" isAbstract="false" isQuery="false" name="addAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67812" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16253" value="" type="18" name="theAlgorithm" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Remove a algorithm from the algorithmset
@see OmgAlgorithm" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16254" isRoot="false" isAbstract="false" isQuery="false" name="removeAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67813" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16255" value="" type="18" name="theAlgorithm" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Overloaded method to remove a algorithm from 
the algorithmset given only its algorithmame." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16256" isRoot="false" isAbstract="false" isQuery="false" name="removeAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67814" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16257" value="" type="126" name="theAlgorithm" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Accessors///** The name of this algorithmset - in plain english" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16258" isRoot="false" isAbstract="false" isQuery="false" name="name" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67815" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A description for the layerset e.g. including details like 
hostname etc for remote services" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16259" isRoot="false" isAbstract="false" isQuery="false" name="description" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67816" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Helper method to return a list of all the algorithm names." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16260" isRoot="false" isAbstract="false" isQuery="false" name="nameList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67817" type="275" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Mutators///** Set the algorithmSet Name
@see name()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16261" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16262" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set a description for the algorithmset
@see description()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16263" isRoot="false" isAbstract="false" isQuery="false" name="setDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16264" value="" type="126" name="theDescription" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Ancilliary helper methods///**
Retrun the count of algorithms in the algorithmset - excluding the mask" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16265" isRoot="false" isAbstract="false" isQuery="false" name="count" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67818" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return a string representation of this AlgorithmSet" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16266" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67819" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return an xml representation of this AlgorithmSet
@see OmgSerialisable" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16267" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67820" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initialise this algorithmset from an xml representation of this AlgorithmSet
@see OmgSerialisable" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16268" isRoot="false" isAbstract="false" isQuery="false" name="fromXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67821" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16269" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return an html representation of this AlgorithmSet
e.g.
&lt;ul>
 &lt;li for each algorithm >
&lt;/ul>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16270" isRoot="false" isAbstract="false" isQuery="false" name="toHtml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67822" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Overloaded operators///** Overloaded [] operator so that OmgAlgorithmSet can be treated 
like an array.
@param int thePosition - position of element to retrieve from the collection
@return OmgAlgorithm - the algorithm at this position" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16271" isRoot="false" isAbstract="false" isQuery="false" name="operator [ ]" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67823" type="18" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16272" value="" type="2" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="16246" xmi.id="16275" isRoot="false" isAbstract="false" name="AlgorithmsHash" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class comment="dataprocessor.h  -  description
-------------------
begin                : Wed Jan 8 2003
copyright            : (C) 2003 by Tim Sutton
email                : t.sutton@reading.ac.uk
//***************************************************************************
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
//**This class contains various functions that can be used to post process raw climate data
sets such as obtained from the IPCC. Please use only ANSI C++ here (no QT) so that this
this class will be portable to different platforms.

Methods that take ArrayLengths as parameters should be passed as the number of elements,
not the vector size. e.g. an vector of 12 months is int[11] but should be passed as 12.
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16277" isRoot="false" isAbstract="false" name="OmgClimateDataProcessor" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16328" type="6" name="mNoData" />
      <UML:Operation stereotype="15721" comment="Default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16278" isRoot="false" isAbstract="false" isQuery="false" name="OmgClimateDataProcessor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16279" value="" type="6" name="mNoData" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16280" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgClimateDataProcessor" />
      <UML:Operation comment="This method calculates the mean value over the quarter with the lowest values
(i.e. the three consecutive months with the minimum combined total)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16281" isRoot="false" isAbstract="false" isQuery="false" name="meanOverLowestQ" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67824" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16283" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This method calculates the mean value over the quarter with the highest values
(i.e. the three consecutive months with the maximum combined total)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16284" isRoot="false" isAbstract="false" isQuery="false" name="meanOverHighestQ" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67825" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16285" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This method returns the month that starts the quarter with the highest
average values" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16286" isRoot="false" isAbstract="false" isQuery="false" name="firstMonthOfHighestQ" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67826" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16287" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This method returns the month that starts the quarter with the lowest
average values. For example, if 12 months were :
1   2   3   4   5   6   7   8   9   10  11  12
-----------------------------------------------
21 18  19  15   12  5   6   8   12  15  16  20
Then the return from this method would be 6 because
5,6 and 8 combined form the lowest quarter." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16288" isRoot="false" isAbstract="false" isQuery="false" name="firstMonthOfLowestQ" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67827" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16289" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This method will return the mean over three months in
theClimateVector, starting at theStartMonth." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16290" isRoot="false" isAbstract="false" isQuery="false" name="meanOverQuarter" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67828" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16291" value="" type="16282" name="theClimateVector" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16292" value="" type="2" name="theStartMonth" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Given an vector, this method will return the value of the smallest
element in the vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16293" isRoot="false" isAbstract="false" isQuery="false" name="lowestValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67829" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16294" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Given an vector, this function will return the value of the largest element
in the vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16295" isRoot="false" isAbstract="false" isQuery="false" name="highestValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67830" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16296" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Given two arrays (e.g. min temp and max temp) range will determine
the smallest and largest values that occur and return the difference.
The function is indescriminate as to whether the values are in the same
month or not.
@see greatestMonthlyRange" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16297" isRoot="false" isAbstract="false" isQuery="false" name="greatestTotalRange" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67831" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16298" value="" type="16282" name="theClimateVector1" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16299" value="" type="16282" name="theClimateVector2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Given two arrays (e.g. min temp and max temp) range will determine
the smallest and largest values that occur and return the difference.
The value of the max-min difference for a given month that is the
greatest is returned.
@see greatestTotalRange" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16300" isRoot="false" isAbstract="false" isQuery="false" name="greatestMonthlyRange" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67832" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16301" value="" type="16282" name="theClimateVector" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16302" value="" type="16282" name="theClimateVector2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This function will return the standard deviation of the climate vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16303" isRoot="false" isAbstract="false" isQuery="false" name="stddevOverYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67833" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16304" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A new vector the same length as original will be returned when each element
of the input vector that is greater or equal to threshold will be true. Values
below threshold will be assigned false.
@param &amp;QVector &lt;float> A vector of float values
@param float the desired threshold
@return bool True on success otherwise something went wrong." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16305" isRoot="false" isAbstract="false" isQuery="false" name="threshold" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67834" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16307" value="" type="16306" name="theClimateVector" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16308" value="" type="6" name="theThreshold" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Overloaded version of the above function.
If the input value  is greater or equal to threshold will be true. Values
below threshold will be assigned false.
@param float A vector of float values
@param float the desired threshold
@return bool True on success otherwise something went wrong." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16309" isRoot="false" isAbstract="false" isQuery="false" name="threshold" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67835" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16310" value="" type="6" name="theFloat" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16311" value="" type="6" name="theThreshold" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Determine the sum of a vector of values

@param QVector &lt;float> values to be summed
@return float sum of values provided in input." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16312" isRoot="false" isAbstract="false" isQuery="false" name="sum" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67836" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16313" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This function will return the sum of theClimateVector divided by the
number of elements in theClimateVector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16314" isRoot="false" isAbstract="false" isQuery="false" name="mean" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67837" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16315" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This function will return the value of the element in theClimateVector
that corresponds to theMonth." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16316" isRoot="false" isAbstract="false" isQuery="false" name="valueGivenMonth" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67838" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16317" value="" type="16282" name="theClimateVector" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16318" value="" type="2" name="theMonth" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This function will return an integer between 1 and 12 corresponding to
the month with the highest value." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16319" isRoot="false" isAbstract="false" isQuery="false" name="monthWithHighestValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67839" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16320" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This function will return an integer between 1 and 12 corresponding to
the month with the lowest value." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16321" isRoot="false" isAbstract="false" isQuery="false" name="monthWithLowestValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67840" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16322" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This function will return an integer in the range 0-12 representing
the number of months in theClimateVector where the value for that
month is above zero. Typically used to calculate how many months
in the year there are where the average temp is above freezing." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16323" isRoot="false" isAbstract="false" isQuery="false" name="numberOfMonthsAboveZero" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67841" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16324" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This value will return the mean value of months in theClimateVector
 where the corresponding months in theFrostArray have no frost free days." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16325" isRoot="false" isAbstract="false" isQuery="false" name="meanValueOverFrostFreeMonths" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67842" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16326" value="" type="16282" name="theFrostVector" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16327" value="" type="16282" name="theClimateVector" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
///other includes/** This class will handle opening a file containing a climate matrix and iterating through the file in a columnwise / rowwise manner." isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16329" isRoot="false" isAbstract="false" name="OmgClimateFileReader" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16330" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="////   Private attributes///** This is a maximum length for lines that shall be skipped" isSpecification="false" visibility="private" xmi.id="16400" type="16364" name="mMaxLineLength" ownerScope="classifier" />
      <UML:Attribute comment="This is the xDim (columns) of a matrix for one month (files may contain more than one matrix)." isSpecification="false" visibility="private" xmi.id="16401" type="16363" name="mXDim" />
      <UML:Attribute comment="Number of rows in matrix for one month / year" isSpecification="false" visibility="private" xmi.id="16402" type="16363" name="mYDim" />
      <UML:Attribute comment="Type of file we are reading." isSpecification="false" visibility="private" xmi.id="16403" type="16333" name="mFileType" />
      <UML:Attribute comment="The name of the file, including full path if neccessary." isSpecification="false" visibility="private" xmi.id="16404" type="126" name="mFileName" />
      <UML:Attribute comment="Whether the file pointer has reached the end of the matrix" isSpecification="false" visibility="private" xmi.id="16405" type="5" name="mEndOfMatrixFlag" />
      <UML:Attribute comment="Block in file that matrix extraction should start at." isSpecification="false" visibility="private" xmi.id="16406" type="2" name="mActiveBlockNo" />
      <UML:Attribute comment="Number of header lines specifically at start of file." isSpecification="false" visibility="private" xmi.id="16407" type="2" name="mFileHeaderLines" />
      <UML:Attribute comment="Current column in the matrix" isSpecification="false" visibility="private" xmi.id="16408" type="16363" name="mCurrentColumn" />
      <UML:Attribute comment="Current row in matrix" isSpecification="false" visibility="private" xmi.id="16409" type="16363" name="mCurrentRow" />
      <UML:Attribute comment="Position in the matrix expressed as (current row * cols) + current col" isSpecification="false" visibility="private" xmi.id="16410" type="16363" name="mCurrentElementNo" />
      <UML:Attribute comment="The text stream that will be used to pull data from the file" isSpecification="false" visibility="private" xmi.id="16413" type="16412" name="mTextStream" />
      <UML:Attribute comment="This is a buffer for holding read in lines" isSpecification="false" visibility="private" xmi.id="16414" type="4" name="mBuffer" />
      <UML:Attribute comment="if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream" isSpecification="false" visibility="private" xmi.id="16417" type="16416" name="mGdalDataset" />
      <UML:Attribute comment="Number of header lines per month data block (applicable to files containing multiple months in a single file only." isSpecification="false" visibility="private" xmi.id="16418" type="2" name="mBlockHeaderLines" />
      <UML:Attribute comment="The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset." isSpecification="false" visibility="private" xmi.id="16419" type="2" name="mBlockStartPos" />
      <UML:Attribute comment="This is a vector  that stores the filepos for each  datablock in the fil" isSpecification="false" visibility="private" xmi.id="16420" type="16393" name="mBlockMarkersVector" />
      <UML:Operation stereotype="15721" comment="////   Public methods///** Default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16347" isRoot="false" isAbstract="false" isQuery="false" name="OmgClimateFileReader" />
      <UML:Operation stereotype="15721" comment="Constructor (default ctor is in private section to stop progrmmers using it!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16348" isRoot="false" isAbstract="false" isQuery="false" name="OmgClimateFileReader" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16349" value="" type="126" name="theFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16350" value="" type="16333" name="theFileType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="public" xmi.id="16351" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgClimateFileReader" />
      <UML:Operation comment="Setup the file reader 
@param theFileNameString the name of the file to be read
@param theFileType the file format to be read
@return bool true on success" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16352" isRoot="false" isAbstract="false" isQuery="false" name="initialise" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67843" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16353" value="" type="126" name="theFileNameString" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16354" value="" type="16333" name="theFileType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get the next available element from the file matrix.
The cell index will be advanced by one.
@return float - the value at the element at the next cell." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16355" isRoot="false" isAbstract="false" isQuery="false" name="getElement" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67844" type="6" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for long mCurrentElementNo.
Calculated as (currentRowLong * rows) + mCurrentColumn.
@return long - the current position in the current block." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16356" isRoot="false" isAbstract="false" isQuery="false" name="currentElementNo" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67845" type="16357" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor property of long currentRowLong.
@return long - the current row position in the current block." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16358" isRoot="false" isAbstract="false" isQuery="false" name="currentRow" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67846" type="16357" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor property of long mCurrentColumn.
@return long - the current row position in the current block." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16359" isRoot="false" isAbstract="false" isQuery="false" name="currentCol" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67847" type="16357" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for the int mFileHeaderLines.
@return int - the number of header lines before each block" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16360" isRoot="false" isAbstract="false" isQuery="false" name="headerLineCount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67848" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for int mActiveBlockNo.
It will move the file pointer too the start of the data block indicated
by the start month.
This is really only applicable for file formats that include
muliple months / years data in a single file such as Hadley SRES data.
@param theNewVal - an unsigned int representing the new start block.
@return bool - flag indicating success or failure" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16362" isRoot="false" isAbstract="false" isQuery="false" name="setActiveBlock" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67849" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16365" value="" type="16364" name="theBlockNo" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor of int mActiveBlockNo.
This is really only applicable for file formats that include
muliple months / years data in a single file such as Hadley SRES data.
@return bool - flag indicating success or failure" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16366" isRoot="false" isAbstract="false" isQuery="false" name="activeBlock" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67850" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for bool endOfMatrixFlag.
@return bool - Current state of endOfMatrixFlag" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16367" isRoot="false" isAbstract="false" isQuery="false" name="isAtMatrixEnd" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67851" type="16368" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for QString Filename.
@return QString - the current filename" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16369" isRoot="false" isAbstract="false" isQuery="false" name="filename" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67852" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of FileTypeEnum fileType.
@note The return type is OmgClimateFileReader::FileTypeEnum because the calling
class does not have the enum in its name space so we need to.
explicitly specifiy the namespace.
@return OmgClimateFileReader::FileTypeEnum - the file format of the current file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16370" isRoot="false" isAbstract="false" isQuery="false" name="getFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67853" type="16371" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of long mYDim." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16372" isRoot="false" isAbstract="false" isQuery="false" name="yDim" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67854" type="16357" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of long mXDim." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16373" isRoot="false" isAbstract="false" isQuery="false" name="xDim" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67855" type="16357" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of int mBlockHeaderLines." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16374" isRoot="false" isAbstract="false" isQuery="false" name="blockHeaderLineCount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67856" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return the various metadata stored for the open file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16375" isRoot="false" isAbstract="false" isQuery="false" name="getOmgClimateFileReaderInfo" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67857" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of blockStartPos." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16376" isRoot="false" isAbstract="false" isQuery="false" name="blockStartPos" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67858" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Move the internal file pointer to the start of the file header." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16377" isRoot="false" isAbstract="false" isQuery="false" name="moveToHeader" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67859" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="The number of blocks available in this file" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16378" isRoot="false" isAbstract="false" isQuery="false" name="blockCount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67860" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Find out how many blocks (useful in multiblock formats such as SRES) are in this file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16379" isRoot="false" isAbstract="false" isQuery="false" name="getNumberOfBlocks" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67861" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A helper function to see if the block markers are correct.
The value of the first element in each block
will be printed to console on std out.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16380" isRoot="false" isAbstract="false" isQuery="false" name="printFirstCellInEachBlock" />
      <UML:Operation comment="A helper function to see if the block markers are correct.
The value of the last element in each block
will be printed to console on std out.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16381" isRoot="false" isAbstract="false" isQuery="false" name="printLastCellInEachBlock" />
      <UML:Operation comment="A helper function to see if the block markers are correct.
The value of each block marker file seek position will be printed.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16382" isRoot="false" isAbstract="false" isQuery="false" name="printBlockMarkers" />
      <UML:Operation comment="A helper function to show a whole block.
@note This will likely be removed!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16383" isRoot="false" isAbstract="false" isQuery="false" name="printBlock" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16384" value="" type="2" name="theBlock" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16385" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16386" value="" type="126" name="theError" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16387" isRoot="false" isAbstract="false" isQuery="false" name="message" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16388" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator of FileTypeEnum fileType.
@note You should specify the file type BEFORE opening the file.
@param theNewVal - a FileTypeEnum specifying the input file type.
@return bool - flag indicating success or failure" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16389" isRoot="false" isAbstract="false" isQuery="false" name="setFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67862" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16390" value="" type="14826" name="theNewVal" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Use the header info for a given file type to determine the
begining of the data block(s) and position the
blockStartPos there. This method will need to be called
explicitly by the client app so that when multiple
copies of the same file are being opened, we dont need to
do the same thing each time.
@param forceFlag - Force parsing file for block markers. By default this
is set to false and the file will only be parsed if an accompanying
.bmr file is found.
@return QVector &lt;int> - a qvalue vector contining a series of
file offsets (ulongs) which mark the start of each data block." isSpecification="false" isLeaf="false" visibility="private" xmi.id="16391" isRoot="false" isAbstract="false" isQuery="false" name="getBlockMarkers" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67863" type="16393" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16392" value="" type="5" name="forceFlag" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A helper method for gdal reading to get a value into the correct type.
@param theData a scanline of data from gdal.
@param theType the gdal datatype of data in this scanline
@param theIndex Postion inthe scanline to read from.
@return float containing the value we read in" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16394" isRoot="false" isAbstract="false" isQuery="false" name="readValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67864" type="7" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16396" value="" type="16395" name="theData" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16398" value="" type="16397" name="theType" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16399" value="" type="2" name="theIndex" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Enumeration stereotype="14813" comment="//// Enumerators///**
This enum defines the different types of files that can be read in." isSpecification="false" isLeaf="false" visibility="public" namespace="16329" xmi.id="16333" isRoot="false" isAbstract="false" name="FileType" >
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16334" isRoot="false" isAbstract="false" name="GDAL" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16335" isRoot="false" isAbstract="false" name="HADLEY_SRES" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16336" isRoot="false" isAbstract="false" name="HADLEY_IS92" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16337" isRoot="false" isAbstract="false" name="HADLEY_SRES_MEAN" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16338" isRoot="false" isAbstract="false" name="IPCC_OBSERVED" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16339" isRoot="false" isAbstract="false" name="VALDES" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16340" isRoot="false" isAbstract="false" name="ECHAM4" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16341" isRoot="false" isAbstract="false" name="CSIRO_MK2" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16342" isRoot="false" isAbstract="false" name="NCAR_CSM_PCM" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16343" isRoot="false" isAbstract="false" name="GFDL_R30" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16344" isRoot="false" isAbstract="false" name="CGCM2" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16345" isRoot="false" isAbstract="false" name="CCSR_AGCM_OGCM" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16333" xmi.id="16346" isRoot="false" isAbstract="false" name="CRU_CL1_MONTHLY" />
      </UML:Enumeration>
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16363" isRoot="false" isAbstract="false" name="unsigned int" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16397" isRoot="false" isAbstract="false" name="GDALDataType" />
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16411" isRoot="false" isAbstract="false" name="std" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="16411" xmi.id="16412" isRoot="false" isAbstract="false" name="ifstream" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="16411" xmi.id="17063" isRoot="false" isAbstract="false" name="string" />
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16415" isRoot="false" isAbstract="false" name="GDALDataset" />
    <UML:Class comment="filegroup.h  -  description
-------------------
begin                : Sat May 10 2003
copyright            : (C) 2003 by Tim Sutton
email                : t.sutton@reading.ac.uk
//***************************************************************************
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
//**A file group manages a collection of OmgClimateFileReader objects and is used
to step through several filereaders simultaneously.
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16421" isRoot="false" isAbstract="false" name="OmgClimateFileGroup" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16422" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="This is the container for all the file readers in this group." isSpecification="false" visibility="private" xmi.id="16444" type="16443" name="mReaderVector" />
      <UML:Attribute comment="The number of cells (xdim * ydim) in the block in the first file in the
file group. It is assumed that all files in the group have the same block
dimensions." isSpecification="false" visibility="private" xmi.id="16445" type="2" name="mElementCount" />
      <UML:Attribute comment="The number of cells in the x dimension in a block in the first file in the
file group. It is assumed that all files in the group have the same block
dimensions." isSpecification="false" visibility="private" xmi.id="16446" type="2" name="mXDim" />
      <UML:Attribute comment="The number of cells in the y dimension in a block in the first file in the
file group. It is assumed that all files in the group have the same block
dimensions." isSpecification="false" visibility="private" xmi.id="16447" type="2" name="mYDim" />
      <UML:Attribute comment="A flag to show whether the end of the matrix has been reached.
@note the first fileReader in the fileGroup is used to determine this." isSpecification="false" visibility="private" xmi.id="16448" type="5" name="mEndOfMatrixFlag" />
      <UML:Operation stereotype="15721" comment="Constructor for filegroup. Initialises the filereader vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16425" isRoot="false" isAbstract="false" isQuery="false" name="OmgClimateFileGroup" />
      <UML:Operation comment="Desctructor - closes each file in the filereader vector and then destroys the vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16426" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgClimateFileGroup" />
      <UML:Operation comment="Close all files in the file group" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16427" isRoot="false" isAbstract="false" isQuery="false" name="close" />
      <UML:Operation comment="Add a new file reader object to the filegroup and position the fpos_t at the start of the data block " isSpecification="false" isLeaf="false" visibility="public" xmi.id="16428" isRoot="false" isAbstract="false" isQuery="false" name="add" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67865" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16430" value="" type="16429" name="theReader" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get the next element from each fileReader and return the result as a vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16431" isRoot="false" isAbstract="false" isQuery="false" name="getElementVector" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67866" type="16282" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Used to find out how meny files are in the file group 
@return unsingned int representing the number of files int eh group." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16432" isRoot="false" isAbstract="false" isQuery="false" name="fileCount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67867" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for the mElementCount property. This property tells us
how many cells in any one data block in a filereader exist.
@return int - The number of cells in a block of the first filereader." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16433" isRoot="false" isAbstract="false" isQuery="false" name="elementCount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67868" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16434" isRoot="false" isAbstract="false" isQuery="false" name="xDim" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67869" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16435" isRoot="false" isAbstract="false" isQuery="false" name="yDim" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67870" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of bool mEndOfMatrixFlag." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16436" isRoot="false" isAbstract="false" isQuery="false" name="isAtMatrixEnd" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67871" type="16368" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Move to the start of the active data block" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16437" isRoot="false" isAbstract="false" isQuery="false" name="rewind" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67872" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16438" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16439" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16440" isRoot="false" isAbstract="false" isQuery="false" name="message" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16441" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="16421" xmi.id="16442" isRoot="false" isAbstract="false" name="QVector&lt; OmgClimateFileReader * >" elementReference="125" />
      <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="16421" xmi.id="16443" isRoot="false" isAbstract="false" name="OmgClimateFileReaderVector" elementReference="16442" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class comment="filewriter.h  -  description
-------------------
begin                : Tue May 13 2003
copyright            : (C) 2003 by Tim Sutton
email                : t.sutton@reading.ac.uk
//***************************************************************************
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
//**A OmgFileWriter is used to store the results of the climate data processor in a persistant manner.
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16449" isRoot="false" isAbstract="false" name="OmgFileWriter" >
     <UML:Classifier.feature>
      <UML:Attribute comment="The file handle containing our output data matrix." isSpecification="false" visibility="private" xmi.id="16476" type="16475" name="mFile" />
      <UML:Attribute comment="A text stream associated with the output file that
will be used when writing data to the file." isSpecification="false" visibility="private" xmi.id="16478" type="16477" name="mTextStream" />
      <UML:Attribute comment="The separater that will be used between each
 value as its written to file" isSpecification="false" visibility="private" xmi.id="16479" type="126" name="seperatorString" />
      <UML:Attribute comment="The filename that is being written to" isSpecification="false" visibility="private" xmi.id="16480" type="126" name="fileNameString" />
      <UML:Attribute comment="State of the filewriter - file open etc errors will
mke the writeable state false." isSpecification="false" visibility="private" xmi.id="16481" type="5" name="isWriteableFlag" />
      <UML:Attribute comment="The no data value that may be passed in to write element" isSpecification="false" visibility="private" xmi.id="16482" type="6" name="mInputNoData" />
      <UML:Attribute comment="The no data value that should be written out by write element" isSpecification="false" visibility="private" xmi.id="16483" type="6" name="mOutputNoData" />
      <UML:Operation stereotype="15721" comment="Constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16454" isRoot="false" isAbstract="false" isQuery="false" name="OmgFileWriter" />
      <UML:Operation stereotype="15721" comment="Constructor
@param theFileName - a QString containing the name of the output file.
@param theFileFormat - the output format as defined in FileType.
@see FileType" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16455" isRoot="false" isAbstract="false" isQuery="false" name="OmgFileWriter" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16456" value="" type="14819" name="theFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16457" value="" type="16450" name="theFileFormat" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16458" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgFileWriter" />
      <UML:Operation comment="Write a float element to the output file.
@param theElementFloat - the variable that is to be written off to file.
@return bool - indicating success or failure of the write operation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16459" isRoot="false" isAbstract="false" isQuery="false" name="writeElement" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67873" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16460" value="" type="6" name="theElementFloat" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Write a ouput nodata element to the output file.
@return bool - indicating success or failure of the write operation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16461" isRoot="false" isAbstract="false" isQuery="false" name="writeNoData" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67874" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Write a header to the output file.
@param theString - the variable that is to be written off to file.
@return bool - indicating successor failure of the write operation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16462" isRoot="false" isAbstract="false" isQuery="false" name="writeString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67875" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16463" value="" type="126" name="theQString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Read property of QString fileNameString.
@return QString - containing the name of the file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16464" isRoot="false" isAbstract="false" isQuery="false" name="fileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67876" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Close the currently open file.
@return bool - indicating successor failure of the close operation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16465" isRoot="false" isAbstract="false" isQuery="false" name="close" />
      <UML:Operation comment="This method sends a line break to the output file.
@return bool - indicating successor failure of the write operation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16466" isRoot="false" isAbstract="false" isQuery="false" name="sendLineBreak" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67877" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16467" isRoot="false" isAbstract="false" isQuery="false" name="isWriteable" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67878" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16468" isRoot="false" isAbstract="false" isQuery="false" name="seperator" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67879" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16469" isRoot="false" isAbstract="false" isQuery="false" name="setSeperator" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16470" value="" type="126" name="theQString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for input no data value" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16471" isRoot="false" isAbstract="false" isQuery="false" name="setInputNoData" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16472" value="" type="6" name="theValue" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for output no data value" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16473" isRoot="false" isAbstract="false" isQuery="false" name="setOutputNoData" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16474" value="" type="6" name="theValue" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Enumeration stereotype="14813" comment="An enumerator defining the different types of output files that can be written." isSpecification="false" isLeaf="false" visibility="public" namespace="16449" xmi.id="16450" isRoot="false" isAbstract="false" name="FileType" >
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16450" xmi.id="16451" isRoot="false" isAbstract="false" name="MATLAB" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16450" xmi.id="16452" isRoot="false" isAbstract="false" name="ESRI_ASCII" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16450" xmi.id="16453" isRoot="false" isAbstract="false" name="PLAIN" />
      </UML:Enumeration>
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16475" isRoot="false" isAbstract="false" name="QFile" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16477" isRoot="false" isAbstract="false" name="QTextStream" />
    <UML:Class comment="climatedataprocessor.h  -  description
-------------------
begin                : Thu May 15 2003
copyright            : (C) 2003 by Tim Sutton
email                : t.sutton@reading.ac.uk
//***************************************************************************
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
//**
This struct is simple container used in the 'run' method.
@todo Remove this if possible" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16484" isRoot="false" isAbstract="false" name="OmgFileWriterStruct" >
     <UML:Classifier.feature>
      <UML:Attribute comment="A filewriter pointer" isSpecification="false" visibility="public" xmi.id="16486" type="16485" name="fileWriter" />
      <UML:Attribute comment="The fill path and file name of the file refenced" isSpecification="false" visibility="public" xmi.id="16487" type="126" name="fullFileName" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="The OmgClimateDataProcessorController calculates specific climate variables using
DataProcessor functions.
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16488" isRoot="false" isAbstract="false" name="OmgClimateDataProcessorController" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16489" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="// Private attributes/** The directory where the processed results will be stored." isSpecification="false" visibility="private" xmi.id="16578" type="126" name="outputFilePath" />
      <UML:Attribute comment="The type of input files to be processed by the climate date processor." isSpecification="false" visibility="private" xmi.id="16579" type="16333" name="inputFileType" />
      <UML:Attribute comment="The type of output files to be produced by the climate date processor." isSpecification="false" visibility="private" xmi.id="16580" type="16450" name="outputFileType" />
      <UML:Attribute comment="This is a map (associative array) that stores the key/value pairs
for the INPUT filetype. The key is the verbose name for the file type
(as will typically appear in the user interface, and the value
is theOmgClimateFileReader::FileType equivalent.
@see makeInputFileTypeMap()
@see makeOutputFileTypeMap()" isSpecification="false" visibility="private" xmi.id="16582" type="16581" name="inputFileTypeMap" />
      <UML:Attribute comment="This is a map (associative array) that stores the key/value pairs
for the OUTPUT filetype. The key is the verbose name for the file type
(as will typically appear in the user interface, and the value
is the OmgFileWriter::FileType equivalent.
@see makeInputFileTypeMap()
@see makeOutputFileTypeMap()" isSpecification="false" visibility="private" xmi.id="16584" type="16583" name="outputFileTypeMap" />
      <UML:Attribute comment="This is a map (associative array) that stores which calculations can be performed
  given the input files that have been registered with this climatedataprocessor.
  The boolean flag will be used to indicate whether the user actually wants to
  perform the calculation on the input dataset(s).
  @see makeAvailableCalculationsMap
  @see addUserCalculation" isSpecification="false" visibility="private" xmi.id="16585" type="16545" name="availableCalculationsMap" />
      <UML:Attribute comment="A filegroup containing files with mean temperature data." isSpecification="false" visibility="private" xmi.id="16586" type="16573" name="meanTempFileGroup" />
      <UML:Attribute comment="The file name that contains mean temp data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16587" type="126" name="meanTempFileName" />
      <UML:Attribute comment="A filegroup containing files with minimum temperature data." isSpecification="false" visibility="private" xmi.id="16588" type="16573" name="minTempFileGroup" />
      <UML:Attribute comment="The file name that contains min temp data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16589" type="126" name="minTempFileName" />
      <UML:Attribute comment="A filegroup containing files with maximum temperature data." isSpecification="false" visibility="private" xmi.id="16590" type="16573" name="maxTempFileGroup" />
      <UML:Attribute comment="The file name that contains max temp data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16591" type="126" name="maxTempFileName" />
      <UML:Attribute comment="A filegroup containing files with diurnal temperature data." isSpecification="false" visibility="private" xmi.id="16592" type="16573" name="diurnalTempFileGroup" />
      <UML:Attribute comment="The file name that contains diurnal temp data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16593" type="126" name="diurnalTempFileName" />
      <UML:Attribute comment="A filegroup containing files with mean precipitation data." isSpecification="false" visibility="private" xmi.id="16594" type="16573" name="meanPrecipFileGroup" />
      <UML:Attribute comment="The file name that contains mean precipitation data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16595" type="126" name="meanPrecipFileName" />
      <UML:Attribute comment="A filegroup containing files with number of frost days data." isSpecification="false" visibility="private" xmi.id="16596" type="16573" name="frostDaysFileGroup" />
      <UML:Attribute comment="The file name that contains mean frost data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16597" type="126" name="frostDaysFileName" />
      <UML:Attribute comment="A filegroup containing files with solar radiation data." isSpecification="false" visibility="private" xmi.id="16598" type="16573" name="totalSolarRadFileGroup" />
      <UML:Attribute comment="The file name that contains mean solar radiation data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16599" type="126" name="totalSolarRadFileName" />
      <UML:Attribute comment="A filegroup containing files with wind speed data." isSpecification="false" visibility="private" xmi.id="16600" type="16573" name="windSpeedFileGroup" />
      <UML:Attribute comment="The file name that contains wind speed data. If the file type is
one where the data is stored in series (a single file per month),
this member will store the name of the first file in the series." isSpecification="false" visibility="private" xmi.id="16601" type="126" name="windSpeedFileName" />
      <UML:Attribute comment="For certain input types (notably cres, arcinfo and Reading paleoclimate),
each months data is stored in a discrete file. Files should be numbered
e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.
This flag lets us know whether data is in a series of seperate files for each month
or can all be found in the same file." isSpecification="false" visibility="private" xmi.id="16602" type="5" name="filesInSeriesFlag" />
      <UML:Attribute comment="This is a standard header (e.g. arc/info header) that will be appended to any output grids." isSpecification="false" visibility="private" xmi.id="16603" type="126" name="outputHeader" />
      <UML:Operation stereotype="15721" comment="Default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16492" isRoot="false" isAbstract="false" isQuery="false" name="OmgClimateDataProcessorController" />
      <UML:Operation comment="OmgClimateDataProcessorController(
int theFileStartYear,
int theJobStartYear,
int theJobEndYear,
QString theInputFileTypeString,
QString theOutputFileTypeString
);
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16493" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgClimateDataProcessorController" />
      <UML:Operation comment="// Getters and setters/** Mutator for filename of the meanTemp calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16494" isRoot="false" isAbstract="false" isQuery="false" name="setMeanTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16495" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the meanTemp calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16496" isRoot="false" isAbstract="false" isQuery="false" name="getMeanTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67880" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the minTemp calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16497" isRoot="false" isAbstract="false" isQuery="false" name="setMinTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16498" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the minTemp calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16499" isRoot="false" isAbstract="false" isQuery="false" name="getMinTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67881" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the maxTemp calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16500" isRoot="false" isAbstract="false" isQuery="false" name="setMaxTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16501" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the maxTemp calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16502" isRoot="false" isAbstract="false" isQuery="false" name="getMaxTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67882" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the diurnalTemp calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16503" isRoot="false" isAbstract="false" isQuery="false" name="setDiurnalTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16504" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the diurnalTemp calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16505" isRoot="false" isAbstract="false" isQuery="false" name="getDiurnalTempFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67883" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the mean precipitation calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16506" isRoot="false" isAbstract="false" isQuery="false" name="setMeanPrecipFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16507" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the mean precipitation calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16508" isRoot="false" isAbstract="false" isQuery="false" name="getMeanPrecipFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67884" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the frost days calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16509" isRoot="false" isAbstract="false" isQuery="false" name="setFrostDaysFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16510" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the frost days calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16511" isRoot="false" isAbstract="false" isQuery="false" name="getFrostDaysFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67885" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the solar radiation calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16512" isRoot="false" isAbstract="false" isQuery="false" name="setTotalSolarRadFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16513" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the solar radiation calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16514" isRoot="false" isAbstract="false" isQuery="false" name="getTotalSolarRadFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67886" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for filename of the wind speed calculation inputs.
If the files are in series, the name should be of the first file in the series.
@param theFileName - The new filename for the calculation inputs.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16515" isRoot="false" isAbstract="false" isQuery="false" name="setWindSpeedFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16516" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for filename of the wind speed calculation inputs.
@return a QString containing the filename (which will be the first file
in the series if the files are in series)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16517" isRoot="false" isAbstract="false" isQuery="false" name="getWindSpeedFileName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67887" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for directory name for the calculation output files.
@param theFilePathString - The name of an existing directory where the
output files will be stored.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16518" isRoot="false" isAbstract="false" isQuery="false" name="setOutputFilePathString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16519" value="" type="126" name="theFilePathString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for the file output path.
@return a QString containing the directory name." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16520" isRoot="false" isAbstract="false" isQuery="false" name="getOutputFilePathString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67888" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for int fileStartYear.
@param theYear - The year of the first 12 blocks of data
in the file (or the 12 files if the files are in series).
@return void - No return.
@note If the files are in series, jobStartYear should be the same as
fileStartYear and jobEndYear!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16521" isRoot="false" isAbstract="false" isQuery="false" name="setFileStartYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16522" value="" type="16361" name="theYear" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for int fileStartYear." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16523" isRoot="false" isAbstract="false" isQuery="false" name="getFileStartYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67889" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for int setJobStartYear.
@param theYear - The first year in the input file(s) to be read.
@return void - No return.
@note If the files are in series, jobStartYear should be the same as
fileStartYear and jobEndYear!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16524" isRoot="false" isAbstract="false" isQuery="false" name="setJobStartYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16525" value="" type="16361" name="theYear" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for int jobStartYear.
@return int - the current value of the first year in the input
files to be read." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16526" isRoot="false" isAbstract="false" isQuery="false" name="getJobStartYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67890" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for int jobEndYear.
@param theYear - The last year in the input file(s) to be read.
@return void - No return
@note If the files are in series, jobStartYear should be the same as
fileStartYear and jobEndYear!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16527" isRoot="false" isAbstract="false" isQuery="false" name="setJobEndYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16528" value="" type="16361" name="theYear" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for int jobEndYear.
@return int - the current value of the last year in the input
files to be read." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16529" isRoot="false" isAbstract="false" isQuery="false" name="getJobEndYear" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67891" type="16361" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator forOmgClimateFileReader::FileType inputFileType.
@param theInputFileType - The input filetype as specified inOmgClimateFileReader::FileType
@return void - No return" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16530" isRoot="false" isAbstract="false" isQuery="false" name="setInputFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16531" value="" type="16371" name="theInputFileType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator forOmgClimateFileReader::FileType inputFileType.
This is an overloaded version of above that takes a string and looks up the enum.
@param theInputFileTypeString - The input filetype as a string. Valid options being:
CRES African climate data
ESRI &amp; ASCII raster
Hadley Centre HadCM3 SRES Scenario
Hadley Centre HadCM3 IS92a Scenario
IPCC Observed Climatology
University of Reading Palaeoclimate data
Max Planck Institute fur Meteorologie (MPIfM) ECHAM4 data
CSIRO-Mk2 Model data
National Center for Atmospheric Research (NCAR) NCAR-CSM and NCAR-PCM data
Geophysical Fluid Dynamics Laboratory (GFDL) R30 Model data
Canadian Center for Climate Modelling and Analysis (CCCma) CGCM2 Model data
CCSR/NIES AGCM model data and CCSR OGCM model data
@return void - No return" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16532" isRoot="false" isAbstract="false" isQuery="false" name="setInputFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16533" value="" type="14819" name="theInputFileTypeString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor forOmgClimateFileReader::FileType inputFileType.
@return aOmgClimateFileReader::FileType indicating the current input file type." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16534" isRoot="false" isAbstract="false" isQuery="false" name="getInputFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67892" type="16371" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for OmgFileWriter::FileType outputFileType.
This will determine how outputs from calculations will be written to disk.
@param theOutputFileType - a  OmgFileWriter::FileType value
@return void - No return" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16535" isRoot="false" isAbstract="false" isQuery="false" name="setOutputFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16537" value="" type="16536" name="theOutputFileType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for OmgFileWriter::FileType outputFileType.
Overloaded version of above that takes a string and looks up the enum.
@param theOutputFileTypeString - a QString containing the desired output file type.
Valid options include:
CSM for Matlab
CSM for Octave
Desktop GARP
ESRI ASCII Grid
Plain matrix with no header
@return void - No return" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16538" isRoot="false" isAbstract="false" isQuery="false" name="setOutputFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16539" value="" type="14819" name="theOutputFileTypeString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for OmgFileWriter::FileType outputFileType.
@return OmgFileWriter::FileType - the current output file type" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16540" isRoot="false" isAbstract="false" isQuery="false" name="getOutputFileType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67893" type="16536" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set up the filegroups for each filename that has been registered
@return bool - A boolean indicating success or failure of the operation" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16541" isRoot="false" isAbstract="false" isQuery="false" name="makeFileGroups" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67894" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Build a list of which calculations can be performed given the input files
   that have been registered. The boolean field indicates whether the user actually
   want to perform this calculation
   @see addUserCalculation" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16542" isRoot="false" isAbstract="false" isQuery="false" name="makeAvailableCalculationsMap" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67895" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for the list of available calculations.
@return QMap&lt;QString, bool>  - wherethe string is the name of the calculation and
bool indicates true if the user has asked for the calculation to be carried out,
false if he hasnt." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16543" isRoot="false" isAbstract="false" isQuery="false" name="getAvailableCalculationsMap" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67896" type="16545" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Add a calculation to the list of those requested to be carried out by the user.
The available availableCalculationsMap will be searched for a string match, and
if a match is found that map entry will be tagged as true - 'please calculate'
if it is currently false.
@param theCalculationName - the name of the calculation to be enabled.
@return bool - Returns false if no matching calculation name is found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16546" isRoot="false" isAbstract="false" isQuery="false" name="addUserCalculation" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67897" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16547" value="" type="126" name="theCalculationName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Start the data analysis process.
When everything else is set up, this is the method to call!
@todo If there ever was a good place to optimise performance,
this is it!For starters this method can be refactored so that the
vector from each active filegroup is retrieved first, and then
passed to any calculation that needs it, looping through all the filegroups
simultaneously. This will prevent multiple reads of the same file for
different calculations. RTFS for more info.
@return bool - A boolean indicating success or failure of the operation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16548" isRoot="false" isAbstract="false" isQuery="false" name="run" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67898" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This is a helper method that will return a Description of the OmgClimateDataProcessorController vars.
This will indicate things like whether the files are in series or not, what calculations
are available in the available calculations map, and whether they are tagged true for
execution or not.
@return QString - containing the summary description for this climatedataprocessor." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16549" isRoot="false" isAbstract="false" isQuery="false" name="getDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67899" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for bool filesInSeriesFlag.
When files are in series, it means that the file format only contains one months
data block per file and that there should be 12 such files to provide monthly
data for an entire year. The files should be suffixed with the month numer they
represent e.g.
meanTemp01.asc
meanTemp02.asc
meanTemp03.asc
meanTemp04.asc
meanTemp05.asc
meanTemp06.asc
meanTemp07.asc
meanTemp08.asc
meanTemp09.asc
meanTemp10.asc
meanTemp11.asc
meanTemp12.asc
@param theFlag - a flag indicating true if files are in series, otherwise false.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16550" isRoot="false" isAbstract="false" isQuery="false" name="setFilesInSeriesFlag" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16551" value="" type="16368" name="theFlag" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for bool filesInSeriesFlag.
@see setFilesInSeriesFlag
@return bool - true if files are in series." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16552" isRoot="false" isAbstract="false" isQuery="false" name="getFilesInSeriesFlag" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67900" type="16368" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="If the output format requires a header (e.g. Arc/Info ASCII grid, you can
define one using this method.
@param theOutputHeader - a QString containing the new header.
@return void - No return." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16553" isRoot="false" isAbstract="false" isQuery="false" name="setOutputHeader" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16555" value="" type="16554" name="theOutputHeader" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Accessor for QString outputHeader.
@return QString - the currently set file header." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16556" isRoot="false" isAbstract="false" isQuery="false" name="getOutputHeader" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67901" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A signal emitted to notify listeners how many variables
are going to be calculated for each years data.
@param theNumber - The total number of variables
@return void - No return" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16557" isRoot="false" isAbstract="false" isQuery="false" name="numberOfVariablesToCalc" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16558" value="" type="2" name="theNumber" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A signal emitted to notify listeners how many cells
will be passed through in each block.
@param theNumber - The total number of cells in any block
@return void - No return" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16559" isRoot="false" isAbstract="false" isQuery="false" name="numberOfCellsToCalc" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16560" value="" type="2" name="theNumber" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A signal emitted to notify listeners that we are about to
start calculating a variable for one years data.
@param theName - A String containing the variable name e.g.
                       'Precipitation over coolest month'
@return void - No return" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16561" isRoot="false" isAbstract="false" isQuery="false" name="variableStart" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16562" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A signal emitted to notify listeners that we
completed calculating the given variable.
@param theFileName - the filename that the variable was outputted to
@return void - No return" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16563" isRoot="false" isAbstract="false" isQuery="false" name="variableDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16564" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A signal emitted to notify listeners that we
have completed calculating a given cell.
@param theResult - The calculated value for a cell
@return void - No return" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16565" isRoot="false" isAbstract="false" isQuery="false" name="cellDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16566" value="" type="6" name="theResult" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="// Private methods/** This method is intended for debugging purposes only" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16567" isRoot="false" isAbstract="false" isQuery="false" name="printVectorAndResult" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16568" value="" type="16282" name="theVector" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16569" value="" type="6" name="theResult" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set up an individual file group (called by makefileGroups for
  each filegroup that needs to be initialised)" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16570" isRoot="false" isAbstract="false" isQuery="false" name="initialiseFileGroup" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67902" type="16573" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16571" value="" type="126" name="theFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16572" value="" type="2" name="theStartYear" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This is a private method. It is a simple method to populate the
inputFileTypeMap attribute - this will usually be called by the
constructor(s). All keys (file type strings) will be  stored in upper case" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16574" isRoot="false" isAbstract="false" isQuery="false" name="makeInputFileTypeMap" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67903" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This is a private method. It is a simple method to populate the
outputFileTypeMap attribute - this will usually be called by the
constructor(s). All keys (file type strings) will be  stored in upper case" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16575" isRoot="false" isAbstract="false" isQuery="false" name="makeOutputFileTypeMap" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67904" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Little utility method to convert from int to string" isSpecification="false" isLeaf="false" visibility="private" xmi.id="16576" isRoot="false" isAbstract="false" isQuery="false" name="intToString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67905" type="126" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16577" value="" type="2" name="theInt" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16544" isRoot="false" isAbstract="false" name="QMap" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16604" isRoot="false" isAbstract="false" name="OmgClimateImporter" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16605" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16608" isRoot="false" isAbstract="false" isQuery="false" name="OmgClimateImporter" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16609" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgClimateImporter" />
      <UML:Operation comment="Import a Climate file 
Output files will have the same name suffix as input file, with a numerical
suffix for each monthly block.
@note if an errror occurs, an empty QStringList or partially filled QStringList 
will be returned (and an error will be emitted)
@param theInputFile A valid hadley climate data file
@param theOutputDir The directory where the output files will be generated.
@param theFileType The type of climate file to process
@return a QStringList containing the list of output file names." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16610" isRoot="false" isAbstract="false" isQuery="false" name="import" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67906" type="275" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16611" value="" type="126" name="theInputFile" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16612" value="" type="126" name="theOutputDir" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16613" value="" type="126" name="theFileType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16614" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16615" value="" type="126" name="theError" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16616" isRoot="false" isAbstract="false" isQuery="false" name="message" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16617" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Emit a progress signal.
@NOTE should only ever be called using the showProgress method so we can properly 
support gdal style callbacks
@see showProgress" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16618" isRoot="false" isAbstract="false" isQuery="false" name="updateProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16619" value="" type="2" name="theProgress" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16620" value="" type="2" name="theMaximum" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Pass an error received on up to any listening qobjects" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16621" isRoot="false" isAbstract="false" isQuery="false" name="propogateError" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16622" value="" type="126" name="theError" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Pass an error received on up to any listening qobjects" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16623" isRoot="false" isAbstract="false" isQuery="false" name="propogateMessage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16624" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="An abstract base class for any class that is serialiseable to xml
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16625" isRoot="false" isAbstract="false" name="OmgLayer" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16626" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="A flag to store whehter this layer contains categorical or continuous data" isSpecification="false" visibility="private" xmi.id="16653" type="5" name="mCategoricalFlag" />
      <UML:Attribute comment="The name for this layer - usually a full path and filename" isSpecification="false" visibility="private" xmi.id="16654" type="126" name="mName" />
      <UML:Attribute comment="The type / role of this layer - mask / map / output format specifier" isSpecification="false" visibility="private" xmi.id="16655" type="16637" name="mType" />
      <UML:Operation stereotype="15721" comment="Constructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16629" isRoot="false" isAbstract="false" isQuery="false" name="OmgLayer" />
      <UML:Operation comment="Desctructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16630" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgLayer" />
      <UML:Operation stereotype="15721" comment="copy constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16631" isRoot="false" isAbstract="false" isQuery="false" name="OmgLayer" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16633" value="" type="16632" name="theLayer" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Assignement operator" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16634" isRoot="false" isAbstract="false" isQuery="false" name="operator =" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67907" type="16636" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16635" value="" type="16632" name="theLayer" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Accessors///** The name of this layer - usually a full pathname and file name though this
may vary depending on the OmgModellerAdapter implementations" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16641" isRoot="false" isAbstract="false" isQuery="false" name="name" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67908" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Whether this layer represents categorical data in discrete cless or
a continuous surface" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16642" isRoot="false" isAbstract="false" isQuery="false" name="isCategorical" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67909" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="The type of this layer. 
Note that type 'FORMAT' is used when specifying the output cellsize 
and extents for a model. " isSpecification="false" isLeaf="false" visibility="public" xmi.id="16643" isRoot="false" isAbstract="false" isQuery="false" name="type" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67910" type="16637" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Mutators///** Set the layerName
@see name()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16644" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16645" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set the categorical flag
@see isCategorical()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16646" isRoot="false" isAbstract="false" isQuery="false" name="setCategorical" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16647" value="" type="5" name="theFlag" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set the layer type
@see layerType()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16648" isRoot="false" isAbstract="false" isQuery="false" name="setType" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16649" value="" type="16637" name="theType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return an xml representation of this layer
@NOTE this class is not fully serialiseable (yet??)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16650" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67911" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16651" isRoot="false" isAbstract="false" isQuery="false" name="fromXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67912" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16652" value="" type="14819" name="theXml" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Enumeration stereotype="14813" comment="Enumeration of possible types a layer can be. 
Note that format is used when specifying the output cellsize 
and extents for a model. " isSpecification="false" isLeaf="false" visibility="public" namespace="16625" xmi.id="16637" isRoot="false" isAbstract="false" name="LayerType" >
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16637" xmi.id="16638" isRoot="false" isAbstract="false" name="MASK" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16637" xmi.id="16639" isRoot="false" isAbstract="false" name="MAP" />
       <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" namespace="16637" xmi.id="16640" isRoot="false" isAbstract="false" name="FORMAT" />
      </UML:Enumeration>
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class comment="An abstract base class for any class that is serialiseable to xml
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16656" isRoot="false" isAbstract="false" name="OmgLayerSet" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16657" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16685" type="126" name="mName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16686" type="126" name="mDescription" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16687" type="16625" name="mMask" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="16689" type="16688" name="mLayersHash" />
      <UML:Operation stereotype="15721" comment="Constructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16660" isRoot="false" isAbstract="false" isQuery="false" name="OmgLayerSet" />
      <UML:Operation comment="Desctructor ." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16661" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgLayerSet" />
      <UML:Operation comment="Add a layer to the layerset
@see OmgLayer " isSpecification="false" isLeaf="false" visibility="public" xmi.id="16662" isRoot="false" isAbstract="false" isQuery="false" name="addLayer" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67913" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16663" value="" type="16625" name="theLayer" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Remove a layer from the layerset
@see OmgLayer" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16664" isRoot="false" isAbstract="false" isQuery="false" name="removeLayer" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67914" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16665" value="" type="16625" name="theLayer" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Overloaded method to remove a layer from 
the layerset given only its layername." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16666" isRoot="false" isAbstract="false" isQuery="false" name="removeLayer" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67915" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16667" value="" type="126" name="theLayer" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Accessors///** The name of this layer - usually a full pathname and file name though this
may vary depending on the OmgModellerAdapter implementations" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16668" isRoot="false" isAbstract="false" isQuery="false" name="name" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67916" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16669" isRoot="false" isAbstract="false" isQuery="false" name="description" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67917" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16670" isRoot="false" isAbstract="false" isQuery="false" name="mask" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67918" type="16625" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Helper method to return a name list of all the 
non mask layer names." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16671" isRoot="false" isAbstract="false" isQuery="false" name="nameList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67919" type="275" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Mutators///** Set the layerSet Name
@see name()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16672" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16673" value="" type="126" name="theName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set a description for the layerset
@see description()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16674" isRoot="false" isAbstract="false" isQuery="false" name="setDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16675" value="" type="126" name="theDescription" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set the mask layer for this layerset.
A mask is defined by the non null cells in a gdal dataset." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16676" isRoot="false" isAbstract="false" isQuery="false" name="setMask" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16677" value="" type="16625" name="theMask" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Ancilliary helper methods///**
Return the name of the mask layer" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16678" isRoot="false" isAbstract="false" isQuery="false" name="maskName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67920" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Retrun the count of layers in the layerset - excluding the mask" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16679" isRoot="false" isAbstract="false" isQuery="false" name="count" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67921" type="2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return a string representation of this LayerSet" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16680" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67922" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return an xml representation of this LayerSet
@see OmgSerialisable" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16681" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67923" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initialise this layerset from an xml representation of this LayerSet
@see OmgSerialisable" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16682" isRoot="false" isAbstract="false" isQuery="false" name="fromXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67924" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16683" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Return an html representation of this LayerSet
e.g.
&lt;ul>
 &lt;li for each layer >
&lt;/ul>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16684" isRoot="false" isAbstract="false" isQuery="false" name="toHtml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67925" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="16656" xmi.id="16688" isRoot="false" isAbstract="false" name="LayersHash" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class comment="brief The Locality class stores data for one location" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16691" isRoot="false" isAbstract="false" name="OmgLocality" >
     <UML:Classifier.feature>
      <UML:Attribute comment="A label for the locality." isSpecification="false" visibility="private" xmi.id="16709" type="126" name="mLabel" />
      <UML:Attribute comment="The Latitud" isSpecification="false" visibility="private" xmi.id="16710" type="6" name="mLatitude" />
      <UML:Attribute comment="The Longitude" isSpecification="false" visibility="private" xmi.id="16711" type="6" name="mLongitude" />
      <UML:Attribute comment="The collection of sampled environment values associated with this
locality. Populating this member is not required for when you want to 
create a model, but should be populated when projecting a model." isSpecification="false" visibility="private" xmi.id="16712" type="16690" name="mSamples" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16692" isRoot="false" isAbstract="false" isQuery="false" name="OmgLocality" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16693" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgLocality" />
      <UML:Operation comment="//// accessors///** GSet the label / description of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16694" isRoot="false" isAbstract="false" isQuery="false" name="label" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67926" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get the latitude of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16695" isRoot="false" isAbstract="false" isQuery="false" name="latitude" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67927" type="6" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get the longitude of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16696" isRoot="false" isAbstract="false" isQuery="false" name="longitude" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67928" type="6" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get the samples of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16697" isRoot="false" isAbstract="false" isQuery="false" name="samples" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67929" type="16690" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//// Mutators///** Set the label / description of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16698" isRoot="false" isAbstract="false" isQuery="false" name="setLabel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16699" value="" type="126" name="theLabel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set the latitude of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16700" isRoot="false" isAbstract="false" isQuery="false" name="setLatitude" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16701" value="" type="6" name="theLatitude" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set the longitude of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16702" isRoot="false" isAbstract="false" isQuery="false" name="setLongitude" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16703" value="" type="6" name="theLongitude" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Set the samples of this locality" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16704" isRoot="false" isAbstract="false" isQuery="false" name="setSamples" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16705" value="" type="16690" name="theSamples" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//helper functions" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16706" isRoot="false" isAbstract="false" isQuery="false" name="toString" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67930" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16707" isRoot="false" isAbstract="false" isQuery="false" name="toHtml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67931" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16708" isRoot="false" isAbstract="false" isQuery="false" name="toXml" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67932" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16713" isRoot="false" isAbstract="false" name="OmgLocalities" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16750" isRoot="false" isAbstract="false" name="QDateTime" />
    <UML:Class comment="@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16872" isRoot="false" isAbstract="false" name="OmgModellerPluginInterface" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16878" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16881" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerPluginInterface" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16882" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerPluginInterface" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16884" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16885" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgModellerPluginInterface" />
      <UML:Operation comment="Create an initial model definition
 @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16886" isRoot="false" isAbstract="true" isQuery="false" name="createModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16888" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Project a model into a climate dataset.
@NOTE the model passed in as a parameter must have a valid model definition
@param &amp;OmgModel Reference to the model object that will be used to project this model." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16889" isRoot="false" isAbstract="true" isQuery="false" name="projectModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16890" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a list of the algorithm names.
Use getAlgorithmId with one of the returned names to find out an algs id
@return QStringList A String List of the algorithm names" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16891" isRoot="false" isAbstract="true" isQuery="false" name="getAlgorithmList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67933" type="16767" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a collection of algorithm objects in the form of an AgorithmSet.
The collection represents every algorithm that is available from the
plugin implementing this interface
@return OmgAlgorithmSet - a set of algorithms" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16892" isRoot="false" isAbstract="true" isQuery="false" name="getAlgorithmSet" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67934" type="16893" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm id given its name.
@return QString An empty string will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16894" isRoot="false" isAbstract="true" isQuery="false" name="getAlgorithmId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67935" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16895" value="" type="126" name="theAlgorithmId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm given its id.
@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16896" isRoot="false" isAbstract="true" isQuery="false" name="getAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67936" type="16770" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16897" value="" type="126" name="theAlgorithmName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get the name of this plugin instance - useful for displaying the plugin name in guis etc 
@return QString with a user friendly name e.g. 'Local Modeller Plugin'" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16898" isRoot="false" isAbstract="true" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67937" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16899" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16900" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners of an updated log message from openmodeller. 
@param theMessage The message received by the log callback" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16901" isRoot="false" isAbstract="false" isQuery="false" name="logMessageUpdated" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16902" value="" type="2" name="theModelId" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16903" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners that the currently running model is finished 
@param theFilename of the completed model. If the model was 
executed on a remote server the plugin will ensure that it is copied 
to the local file system first.
" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16904" isRoot="false" isAbstract="false" isQuery="false" name="modelDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16905" value="" type="2" name="theModelId" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16906" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners how far the current model CREATION has progressed
(progress is expressed as a percentage) 
@param theProgress 
@see setCreationProgress(int theProgress)" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16907" isRoot="false" isAbstract="false" isQuery="false" name="modelCreationProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16908" value="" type="2" name="theModelId" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16909" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners how far the current model PROJECTION has progressed
(progress is expressed as a percentage) 
@param theProgress 
@see setProjectionProgress(int theProgress)" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16910" isRoot="false" isAbstract="false" isQuery="false" name="modelProjectionProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16911" value="" type="2" name="theModelId" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16912" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="This class will shift the meridian (where greenwich meridian is found in the leftmost column)
of aarcinfo grid file.....later maybe any gdal file that supports creation." isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16977" isRoot="false" isAbstract="false" name="OmgMeridianSwitcher" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="16978" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation stereotype="15721" comment="Default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16981" isRoot="false" isAbstract="false" isQuery="false" name="OmgMeridianSwitcher" />
      <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="public" xmi.id="16982" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgMeridianSwitcher" />
      <UML:Operation comment="Dis waar die kak aangejaag word...." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16983" isRoot="false" isAbstract="false" isQuery="false" name="doSwitch" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16984" value="" type="126" name="theInputFileString" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16985" value="" type="126" name="theOutputFileString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16986" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16987" value="" type="126" name="theError" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16988" isRoot="false" isAbstract="false" isQuery="false" name="message" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16989" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="OmgLogCallback is  a special purpose class to proved a Qt signal
style interface to the openModeller Log callback mechanism.

@author Tim Sutton 2005" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16990" isRoot="false" isAbstract="false" name="OmgOmLogCallback" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="17045" />
      <UML:Generalization xmi.idref="17050" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17053" isRoot="false" isAbstract="false" isQuery="false" name="OmgOmLogCallback" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17054" isRoot="false" isAbstract="false" isQuery="false" name="OmgOmLogCallback" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17055" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17056" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgOmLogCallback" />
      <UML:Operation stereotype="15721" comment="Constructor for log call back required to fit the om callback pattern.
@note Although the call back needs a text stream in the ctor, 
all we want is to get the msg.c_str() 
from the logger, so having the textstream is just so that we fit the 
g_log callback model, but its not actually used anywhere
@param QTextStream a text stream - not actually used anywhere!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17057" isRoot="false" isAbstract="false" isQuery="false" name="OmgOmLogCallback" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17059" value="" type="17058" name="theTextStream" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Overloading the () operator is required because om uses this approach
to push out log messages. We will simplyg capture the passed in message
and emit it as a QString that any connected classes can then use.
@note the log level parameter passed in by om is ignored at this time.
@param Log::Level the log level (ie urgency) of the message
@param string the message passed to us from om
@return void " isSpecification="false" isLeaf="false" visibility="public" xmi.id="17060" isRoot="false" isAbstract="false" isQuery="false" name="operator ( )" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17062" value="" type="17061" name="theLevel" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17065" value="" type="17064" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Signal passed on from here to other qt derived classes with the log message from om" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17066" isRoot="false" isAbstract="false" isQuery="false" name="omLogMessage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17067" value="" type="126" name="theLogMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17048" isRoot="false" isAbstract="false" name="Log" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="17048" xmi.id="17049" isRoot="false" isAbstract="false" name="LogCallback" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="17048" xmi.id="17061" isRoot="false" isAbstract="false" name="Level" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17068" isRoot="false" isAbstract="false" name="OmgScraperGbif" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="17069" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17099" type="13111" name="mLocalityVector" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17100" type="126" name="mTaxonName" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17101" type="126" name="mFileName" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17072" isRoot="false" isAbstract="false" isQuery="false" name="OmgScraperGbif" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17073" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17074" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgScraperGbif" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17075" isRoot="false" isAbstract="false" isQuery="false" name="search" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67938" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17076" value="" type="126" name="theTaxonName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17077" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17078" isRoot="false" isAbstract="false" isQuery="false" name="gettingTaxonID" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17079" isRoot="false" isAbstract="false" isQuery="false" name="gettingBody" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17080" isRoot="false" isAbstract="false" isQuery="false" name="fileWritten" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17081" value="" type="126" name="theShapeFile" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17082" value="" type="126" name="theTextFile" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17083" value="" type="126" name="theTaxonName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17084" value="" type="2" name="theCount" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17085" isRoot="false" isAbstract="false" isQuery="false" name="fileNotWritten" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17086" value="" type="126" name="theTaxonName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17087" isRoot="false" isAbstract="false" isQuery="false" name="statusChanged" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17088" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17089" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17090" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17091" isRoot="false" isAbstract="false" isQuery="false" name="logMessage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17092" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//! Let user be aware of a change in status" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17093" isRoot="false" isAbstract="false" isQuery="false" name="setStatus" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17094" value="" type="126" name="theStatus" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="first part of the request is to find out the id of the species as used in gbif 
@return A url of where the page containing data can be acquired" isSpecification="false" isLeaf="false" visibility="private" xmi.id="17095" isRoot="false" isAbstract="false" isQuery="false" name="taxonIdRequestDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67939" type="126" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17096" value="" type="126" name="theString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//!a parser to pull localities out of a web page //" isSpecification="false" isLeaf="false" visibility="private" xmi.id="17097" isRoot="false" isAbstract="false" isQuery="false" name="localitiesRequestDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67940" type="5" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17098" value="" type="126" name="theString" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//private methods" isSpecification="false" isLeaf="false" visibility="private" xmi.id="17102" isRoot="false" isAbstract="false" isQuery="false" name="createShapefile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17103" value="" type="126" name="theShapefileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Create an output text file.
@note Takes a shapefile name, strips the .shp off and saves a text file .txt" isSpecification="false" isLeaf="false" visibility="private" xmi.id="17104" isRoot="false" isAbstract="false" isQuery="false" name="createTextFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67941" type="126" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17105" value="" type="126" name="theShapefileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17109" isRoot="false" isAbstract="false" name="QUrl" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17110" isRoot="false" isAbstract="false" name="QHttp" />
    <UML:Class comment="This class encapsulates everything needed to fetch the web page ata a given url. It will emit a signal with a string containing the result when done.
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17111" isRoot="false" isAbstract="false" name="OmgWebPageFetcher" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="17112" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17135" type="17109" name="mQUrl" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17136" type="2" name="mTimeOut" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17137" type="17110" name="mQHttp" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17138" type="2" name="mProxyId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17139" type="2" name="mHostId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17140" type="2" name="mHeaderId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17141" type="2" name="mGetId" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17142" type="126" name="mRequestQString" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17143" type="126" name="mPageContent" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17144" type="17124" name="mQHttpResponseHeader" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="17145" type="5" name="mBusyFlag" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17115" isRoot="false" isAbstract="false" isQuery="false" name="OmgWebPageFetcher" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17116" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17117" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgWebPageFetcher" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17118" isRoot="false" isAbstract="false" isQuery="false" name="url" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67942" type="126" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17119" isRoot="false" isAbstract="false" isQuery="false" name="getPage" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67943" type="126" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17120" value="" type="126" name="theUrl" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17121" isRoot="false" isAbstract="false" isQuery="false" name="slotStateChanged" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17122" value="" type="2" name="state" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17123" isRoot="false" isAbstract="false" isQuery="false" name="slotResponseHeaderReceived" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17126" value="" type="17125" name="resp" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17127" isRoot="false" isAbstract="false" isQuery="false" name="slotRequestFinished" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17128" value="" type="2" name="id" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17129" value="" type="5" name="error" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17130" isRoot="false" isAbstract="false" isQuery="false" name="slotTimeOut" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17131" isRoot="false" isAbstract="false" isQuery="false" name="requestGetFinished" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17132" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17133" isRoot="false" isAbstract="false" isQuery="false" name="statusChanged" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17134" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="//private methods" isSpecification="false" isLeaf="false" visibility="private" xmi.id="17146" isRoot="false" isAbstract="false" isQuery="false" name="requestHeadFinished" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17147" value="" type="2" name="id" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="17148" isRoot="false" isAbstract="false" isQuery="false" name="finish" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17124" isRoot="false" isAbstract="false" name="QHttpResponseHeader" />
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17149" isRoot="false" isAbstract="false" name="SHPInfo" />
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17151" isRoot="false" isAbstract="false" name="SHPObject" />
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17152" isRoot="false" isAbstract="false" name="SHPTreeNode" />
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17153" isRoot="false" isAbstract="false" name="SHPTree" />
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17154" isRoot="false" isAbstract="false" name="DBFInfo" />
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17156" isRoot="false" isAbstract="false" name="DBFFieldType" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17157" isRoot="false" isAbstract="false" name="ShapefileMaker" >
     <UML:Classifier.feature>
      <UML:Attribute comment="handle for dBase file" isSpecification="false" visibility="private" xmi.id="17198" type="17155" name="mDbfHandle" />
      <UML:Attribute comment="handle for shape files .shx and .shp" isSpecification="false" visibility="private" xmi.id="17199" type="17150" name="mShapeHandle" />
      <UML:Attribute comment="current record number" isSpecification="false" visibility="private" xmi.id="17200" type="2" name="mCurrentRecInt" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17158" isRoot="false" isAbstract="false" isQuery="false" name="ShapefileMaker" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17159" value="" type="126" name="theOutputFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17160" isRoot="false" isAbstract="false" isQuery="false" name="ShapefileMaker" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17161" value="" type="126" name="theOutputFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17162" value="" type="7" name="theXIntervalDouble" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17163" value="" type="7" name="theYIntervalDouble" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17164" isRoot="false" isAbstract="false" isQuery="false" name="~ ShapefileMaker" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17165" isRoot="false" isAbstract="false" isQuery="false" name="createDbf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67944" type="17155" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17166" value="" type="126" name="theDbfName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17167" isRoot="false" isAbstract="false" isQuery="false" name="createShapeFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67945" type="17150" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17168" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17169" isRoot="false" isAbstract="false" isQuery="false" name="writeDbfRecord" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17170" value="" type="17155" name="theDbfHandle" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17171" value="" type="2" name="theRecordIdInt" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17172" value="" type="126" name="theLabel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17173" isRoot="false" isAbstract="false" isQuery="false" name="writePoint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17174" value="" type="17150" name="theShapeHandle" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17175" value="" type="2" name="theRecordInt" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17176" value="" type="7" name="theXDouble" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17177" value="" type="7" name="y" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17178" isRoot="false" isAbstract="false" isQuery="false" name="writePoint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17179" value="" type="126" name="theLabel" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17180" value="" type="7" name="theXDouble" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17181" value="" type="7" name="theYDouble" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17182" isRoot="false" isAbstract="false" isQuery="false" name="writeLine" ownerScope="classifier" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17183" value="" type="17150" name="theShapeHandle" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17184" value="" type="2" name="theRecordInt" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17185" value="" type="2" name="theCoordinateCountInt" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17187" value="" type="17186" name="theXArrayDouble" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17188" value="" type="17186" name="theYArrayDouble" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17189" isRoot="false" isAbstract="false" isQuery="false" name="generateGraticule" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17190" value="" type="17155" name="theDbfHandle" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17191" value="" type="17150" name="theShapeHandle" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17192" value="" type="7" name="theXIntervalDouble" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17193" value="" type="7" name="theYIntervalDouble" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17194" isRoot="false" isAbstract="false" isQuery="false" name="generatePoints" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17195" value="" type="126" name="theInputFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17196" value="" type="17155" name="theDbfHandle" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17197" value="" type="17150" name="theShapeHandle" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="13772" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17018" isRoot="false" isAbstract="false" name="WktMap" />
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
///qt includes//#include &quot;qlogcallback.h&quot;/**
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29450" isRoot="false" isAbstract="false" name="OmgModellerDummyPlugin" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="29451" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="29480" type="2" name="mModelProgress" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="29481" type="2" name="mMapProgress" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="private" xmi.id="29454" isRoot="false" isAbstract="false" isQuery="false" name="Q_INTERFACES" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29455" value="" type="16872" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" comment="The default constructor is private so that no one can use it!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29456" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerDummyPlugin" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29457" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerDummyPlugin" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29458" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29459" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgModellerDummyPlugin" />
      <UML:Operation comment="Create an initial model definition
 @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29460" isRoot="false" isAbstract="false" isQuery="false" name="createModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29461" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Project a model into a climate dataset.
@NOTE the model passed in as a parameter must have a valid model definition
@param &amp;OmgModel Reference to the model object that will be used to project this model." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29462" isRoot="false" isAbstract="false" isQuery="false" name="projectModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29463" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29464" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmSet" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67946" type="16893" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a list of the algorithm names.
Use getAlgorithmId with one of the returned names to find out an algs id
@return QStringList A String List of the algorithm names" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29465" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67947" type="16767" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm id given its name.
@return QString An empty string will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29466" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67948" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29467" value="" type="126" name="theAlgorithmName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm given its id.
@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29468" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67949" type="16770" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29469" value="" type="126" name="theAlgorithmId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29470" isRoot="false" isAbstract="false" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67950" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29471" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29472" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners of an updated log message from openmodeller. 
@param theMessage The message received by the log callback" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29473" isRoot="false" isAbstract="false" isQuery="false" name="logMessageUpdated" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29474" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners that the currently running model is finished 
@param theFilename of the completed model. If the model was 
executed on a remote server the plugin will ensure that it is copied 
to the local file system first.
" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29475" isRoot="false" isAbstract="false" isQuery="false" name="modelDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29476" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners how far the current model has progressed
(progress is expressed as a percentage) 
@param theProgress " isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29477" isRoot="false" isAbstract="false" isQuery="false" name="modelProgressUpdate" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29478" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Private method called by any ctor on initial start up. 
It will go and find the algorithm list etc." isSpecification="false" isLeaf="false" visibility="private" xmi.id="29479" isRoot="false" isAbstract="false" isQuery="false" name="initialise" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67951" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29482" isRoot="false" isAbstract="false" name="OpenModeller" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29483" isRoot="false" isAbstract="false" name="OmgModellerLocalPlugin" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="29484" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="29514" type="29513" name="mpOpenModeller" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="29515" type="17023" name="mpLogCallBack" />
      <UML:Attribute comment="//as %" isSpecification="false" visibility="private" xmi.id="29516" type="2" name="mModelProgress" />
      <UML:Attribute comment="// as %" isSpecification="false" visibility="private" xmi.id="29517" type="2" name="mMapProgress" />
      <UML:Attribute comment="Id of the model currently being executed" isSpecification="false" visibility="private" xmi.id="29518" type="2" name="mModelId" />
      <UML:Attribute comment="A flag to see whether the Om Aglorithm Factory has already been initialised.
The factory should only be initialised once in the entire lifetime of you application.
If you do it more than once you will get duplicate entries when you read the alg list.
Because of this we use teh flag below to determin if the Factory has previously been initialised.
@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised 
outside the class (see top of accompanying .cpp file)." isSpecification="false" visibility="private" xmi.id="29519" type="5" name="mAlgFactoryStartedFlag" ownerScope="classifier" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="private" xmi.id="29487" isRoot="false" isAbstract="false" isQuery="false" name="Q_INTERFACES" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29488" value="" type="16872" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" comment="The default constructor is private so that no one can use it!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29489" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerLocalPlugin" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29490" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerLocalPlugin" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29491" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29492" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgModellerLocalPlugin" />
      <UML:Operation comment="Create an initial model definition
 @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29493" isRoot="false" isAbstract="false" isQuery="false" name="createModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29494" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Project a model into a climate dataset.
@NOTE the model passed in as a parameter must have a valid model definition
@param &amp;OmgModel Reference to the model object that will be used to project this model." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29495" isRoot="false" isAbstract="false" isQuery="false" name="projectModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29496" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a list of the algorithm names.
Use getAlgorithmId with one of the returned names to find out an algs id
@return QStringList A String List of the algorithm names" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29497" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67952" type="16767" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a collection of algorithm objects in the form of an AgorithmSet.
The collection represents every algorithm that is available from the
plugin implementing this interface
@return OmgAlgorithmSet - a set of algorithms" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29498" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmSet" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67953" type="16893" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm id given its name.
@return QString An empty string will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29499" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67954" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29500" value="" type="126" name="theAlgorithmName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm given its id.
@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29501" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67955" type="16770" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29502" value="" type="126" name="theAlgorithmId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for creation progress variable
Mainly intended to be used by callbacks.
Will emit a modelCreationProgressUpdate signal if the
new value differs from the old one.
@param int theProgress" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29503" isRoot="false" isAbstract="false" isQuery="false" name="setCreationProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29504" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Mutator for projection progress variable
Mainly intended to be used by callbacks.
Will emit a modelCreationProgressUpdate signal if the
new value differs from the old one.
@param int theProgress" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29505" isRoot="false" isAbstract="false" isQuery="false" name="setProjectionProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29506" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29507" isRoot="false" isAbstract="false" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67956" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29508" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29509" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners of an updated log message from openmodeller. 
@param theMessage The message received by the log callback" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29510" isRoot="false" isAbstract="false" isQuery="false" name="logMessageUpdated" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29511" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Private method called by any ctor on initial start up. 
It will go and find the algorithm list etc." isSpecification="false" isLeaf="false" visibility="private" xmi.id="29512" isRoot="false" isAbstract="false" isQuery="false" name="initialise" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67957" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This is used by the om callbacks to let us know of model creation progress changes
@param theProgress how far the task has progressed." isSpecification="false" isLeaf="false" visibility="private" xmi.id="29520" isRoot="false" isAbstract="false" isQuery="false" name="setMapProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29521" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="This is used by the om callbacks to let us know of map projection progress changes
@param theProgress how far the task has progressed." isSpecification="false" isLeaf="false" visibility="private" xmi.id="29522" isRoot="false" isAbstract="false" isQuery="false" name="setModelProgress" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29523" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="A private helper method to write xml to a file" isSpecification="false" isLeaf="false" visibility="private" xmi.id="29524" isRoot="false" isAbstract="false" isQuery="false" name="createTextFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29525" value="" type="126" name="theFileName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29526" value="" type="126" name="theXml" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="  Copyright (C) 2005 by Tim Sutton   *
  tim@linfiniti.com   *
                                                                        *
  This program is free software; you can redistribute it and/or modify  *
  it under the terms of the GNU General Public License as published by  *
  the Free Software Foundation; either version 2 of the License, or     *
  (at your option) any later version.                                   *
                                                                        *
  This program is distributed in the hope that it will be useful,       *
  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
  GNU General Public License for more details.                          *
                                                                        *
  You should have received a copy of the GNU General Public License     *
  along with this program; if not, write to the                         *
  Free Software Foundation, Inc.,                                       *
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
///qt includes//gsoap includes/**
@author Tim Sutton" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29527" isRoot="false" isAbstract="false" name="OmgModellerWebServicesPlugin" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="29528" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="29560" type="2" name="mModelProgress" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="29561" type="2" name="mMapProgress" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="private" xmi.id="29531" isRoot="false" isAbstract="false" isQuery="false" name="Q_INTERFACES" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29532" value="" type="16872" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation stereotype="15721" comment="The default constructor is private so that no one can use it!" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29533" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerWebServicesPlugin" />
      <UML:Operation stereotype="15721" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29534" isRoot="false" isAbstract="false" isQuery="false" name="OmgModellerWebServicesPlugin" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29535" value="" type="16883" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29536" isRoot="false" isAbstract="false" isQuery="false" name="~ OmgModellerWebServicesPlugin" />
      <UML:Operation comment="Create an initial model definition
 @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29537" isRoot="false" isAbstract="false" isQuery="false" name="createModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29538" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Project a model into a climate dataset.
@NOTE the model passed in as a parameter must have a valid model definition
@param &amp;OmgModel Reference to the model object that will be used to project this model." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29539" isRoot="false" isAbstract="false" isQuery="false" name="projectModel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29540" value="" type="16887" name="theModel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a list of the algorithm names.
Use getAlgorithmId with one of the returned names to find out an algs id
@return QStringList A String List of the algorithm names" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29541" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmList" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67958" type="16767" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get a collection of algorithm objects in the form of an AgorithmSet.
The collection represents every algorithm that is available from the
plugin implementing this interface
@return OmgAlgorithmSet - a set of algorithms" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29542" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmSet" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67959" type="16893" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm id given its name.
@return QString An empty string will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29543" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithmId" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67960" type="14819" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29544" value="" type="126" name="theAlgorithmName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Get an algorithm given its id.
@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." isSpecification="false" isLeaf="false" visibility="public" xmi.id="29545" isRoot="false" isAbstract="false" isQuery="false" name="getAlgorithm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67961" type="16770" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29546" value="" type="126" name="theAlgorithmId" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29547" isRoot="false" isAbstract="false" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67962" type="14819" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29548" isRoot="false" isAbstract="false" isQuery="false" name="error" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29549" value="" type="126" name="" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners of an updated log message from openmodeller. 
@param theMessage The message received by the log callback" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29550" isRoot="false" isAbstract="false" isQuery="false" name="logMessageUpdated" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29551" value="" type="126" name="theMessage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners that the currently running model is finished 
@param theFilename of the completed model. If the model was 
executed on a remote server the plugin will ensure that it is copied 
to the local file system first.
" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29552" isRoot="false" isAbstract="false" isQuery="false" name="modelDone" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29553" value="" type="126" name="theFileName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Notifies any listeners how far the current model has progressed
(progress is expressed as a percentage) 
@param theProgress " isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29554" isRoot="false" isAbstract="false" isQuery="false" name="modelProgressUpdate" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29555" value="" type="2" name="theProgress" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Private method called by any ctor on initial start up. 
It will go and find the algorithm list etc." isSpecification="false" isLeaf="false" visibility="private" xmi.id="29556" isRoot="false" isAbstract="false" isQuery="false" name="initialise" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67963" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="29558" isRoot="false" isAbstract="false" isQuery="false" name="getSoapConnection" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="67964" type="29559" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="29527" xmi.id="29557" isRoot="false" isAbstract="false" name="struct soap" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="43389" isRoot="false" isAbstract="false" name="Modeller Plugins" />
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="43613" isRoot="false" isAbstract="false" name="Locality Search Plugins" />
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="43837" isRoot="false" isAbstract="false" name="Raster Preprocessing Plugins" />
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44061" isRoot="false" isAbstract="false" name="Raster Post Processing Plugins" />
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44285" isRoot="false" isAbstract="false" name="libomgui1" />
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44509" isRoot="false" isAbstract="false" name="Gui" />
    <UML:Actor isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="62156" isRoot="false" isAbstract="false" name="novice user" />
    <UML:Actor isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="62380" isRoot="false" isAbstract="false" name="power user" />
    <UML:Actor isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="62604" isRoot="false" isAbstract="false" name="developer" />
    <UML:UseCase isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="63274" isRoot="false" isAbstract="false" name="use locality data in text files" />
    <UML:UseCase isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="63498" isRoot="false" isAbstract="false" name="use locality data from a database" />
    <UML:UseCase isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="63722" isRoot="false" isAbstract="false" name="use locality data from a web service" />
    <UML:UseCase isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="65285" isRoot="false" isAbstract="false" name="create new locality datasource plugins" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="24" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="25" aggregation="composite" type="17" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26" aggregation="none" type="18" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="31" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="32" aggregation="composite" type="20" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="33" aggregation="none" type="17" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="34" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="35" aggregation="composite" type="17" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="36" aggregation="none" type="17" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="37" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="38" aggregation="composite" type="17" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="39" aggregation="none" type="18" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="41" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="42" aggregation="composite" type="18" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="43" aggregation="none" type="19" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="59" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="60" aggregation="none" type="54" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="61" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="63" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="64" aggregation="none" type="55" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="65" aggregation="none" type="54" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="66" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="67" aggregation="none" type="56" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="68" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="69" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="70" aggregation="none" type="58" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="71" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="72" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="73" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="74" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="81" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="82" aggregation="composite" type="20" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="83" aggregation="none" type="17" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="84" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="85" aggregation="composite" type="17" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="86" aggregation="none" type="18" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="87" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="88" aggregation="composite" type="18" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="89" aggregation="none" type="19" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="90" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="91" aggregation="none" type="56" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="92" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="93" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="94" aggregation="none" type="58" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="95" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="96" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="97" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="98" aggregation="none" type="55" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="99" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="100" aggregation="none" type="55" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="101" aggregation="none" type="54" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="781" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="782" aggregation="composite" type="20" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="783" aggregation="none" type="17" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="55" visibility="public" namespace="m1" xmi.id="14217" parent="14216" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="55" visibility="public" namespace="m1" xmi.id="14222" parent="14221" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="10763" visibility="public" namespace="m1" xmi.id="14809" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16246" visibility="public" namespace="m1" xmi.id="16247" parent="16236" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16329" visibility="public" namespace="m1" xmi.id="16330" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16421" visibility="public" namespace="m1" xmi.id="16422" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16488" visibility="public" namespace="m1" xmi.id="16489" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16604" visibility="public" namespace="m1" xmi.id="16605" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16625" visibility="public" namespace="m1" xmi.id="16626" parent="16236" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16656" visibility="public" namespace="m1" xmi.id="16657" parent="16236" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="17" visibility="public" namespace="m1" xmi.id="16714" parent="16236" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16872" visibility="public" namespace="m1" xmi.id="16878" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="20" visibility="public" namespace="m1" xmi.id="16913" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="10763" visibility="public" namespace="m1" xmi.id="16942" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16977" visibility="public" namespace="m1" xmi.id="16978" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16990" visibility="public" namespace="m1" xmi.id="17045" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="16990" visibility="public" namespace="m1" xmi.id="17050" parent="17049" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="17068" visibility="public" namespace="m1" xmi.id="17069" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="17111" visibility="public" namespace="m1" xmi.id="17112" parent="14808" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="29450" visibility="public" namespace="m1" xmi.id="29451" parent="16872" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="29483" visibility="public" namespace="m1" xmi.id="29484" parent="16872" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="29527" visibility="public" namespace="m1" xmi.id="29528" parent="16872" discriminator="" name="" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45848" client="44509" name="" supplier="43837" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="46743" client="44509" name="" supplier="43613" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="47192" client="44509" name="" supplier="43389" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="47641" client="44509" name="" supplier="44061" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="50989" client="44061" name="" supplier="44285" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="51438" client="43837" name="" supplier="44285" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="51887" client="44509" name="" supplier="44285" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="52336" client="43389" name="" supplier="44285" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="52785" client="43613" name="" supplier="44285" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="66847" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="66848" aggregation="none" type="62156" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="66849" aggregation="none" type="63274" name="" />
     </UML:Association.connection>
    </UML:Association>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="61709" documentation="" uniqueid="67964" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="808" snapy="10" showatts="1" xmi.id="16048" documentation="" type="402" showops="1" showpackage="0" name="modeller plugins" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="548" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="245" showattsigs="603" usesdiagramusefillcolour="1" x="279" y="29" showopsigs="603" linewidth="none" fillcolour="#f0fbff" height="264" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="16872" showoperations="1" showpackage="0" showscope="0" font="DejaVu Sans,9,-1,5,50,1,0,0,0,0" linecolor="#9bd7ff" />
     <classwidget usesdiagramfillcolour="0" width="200" showattsigs="601" usesdiagramusefillcolour="1" x="166" y="375" showopsigs="600" linewidth="none" fillcolour="#f0fbff" height="44" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="29450" showoperations="0" showpackage="0" showscope="1" showstereotype="1" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#9bd7ff" />
     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="1" x="305" y="441" showopsigs="601" linewidth="none" fillcolour="#f0fbff" height="43" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="29483" showoperations="0" showpackage="0" showscope="1" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#f0fbff" />
     <classwidget usesdiagramfillcolour="0" width="240" showattsigs="601" usesdiagramusefillcolour="1" x="392" y="376" showopsigs="601" linewidth="none" fillcolour="#f0fbff" height="42" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="29527" showoperations="0" showpackage="0" showscope="1" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#9bd7ff" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" linewidth="none" widgetbid="16872" widgetaid="29450" xmi.id="29451" linecolor="#282828" >
      <linepath>
       <startpoint startx="328" starty="375" />
       <endpoint endx="328" endy="293" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" linewidth="none" widgetbid="16872" widgetaid="29483" xmi.id="29484" linecolor="#282828" >
      <linepath>
       <startpoint startx="381" starty="441" />
       <endpoint endx="381" endy="293" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" linewidth="none" widgetbid="16872" widgetaid="29527" xmi.id="29528" linecolor="#282828" >
      <linepath>
       <startpoint startx="464" starty="376" />
       <endpoint endx="464" endy="293" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="808" snapy="10" showatts="1" xmi.id="42719" documentation="" type="406" showops="1" showpackage="0" name="component diagram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="580" >
    <widgets>
     <componentwidget usesdiagramfillcolour="0" width="172" usesdiagramusefillcolour="1" x="299" y="395" linewidth="none" fillcolour="#f0fbff" height="62" usefillcolor="1" isinstance="0" xmi.id="43389" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#282828" />
     <componentwidget usesdiagramfillcolour="0" width="216" usesdiagramusefillcolour="1" x="280" y="479" linewidth="none" fillcolour="#f0fbff" height="62" usefillcolor="1" isinstance="0" xmi.id="43613" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#282828" />
     <componentwidget usesdiagramfillcolour="0" width="256" usesdiagramusefillcolour="1" x="255" y="131" linewidth="none" fillcolour="#f0fbff" height="62" usefillcolor="1" isinstance="0" xmi.id="43837" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#282828" />
     <componentwidget usesdiagramfillcolour="0" width="268" usesdiagramusefillcolour="1" x="251" y="35" linewidth="none" fillcolour="#f0fbff" height="62" usefillcolor="1" isinstance="0" xmi.id="44061" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="#282828" />
     <componentwidget usesdiagramfillcolour="1" width="127" usesdiagramusefillcolour="1" x="603" y="232" linewidth="none" fillcolour="none" height="62" usefillcolor="1" isinstance="0" xmi.id="44285" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <componentwidget usesdiagramfillcolour="1" width="82" usesdiagramusefillcolour="1" x="46" y="233" linewidth="none" fillcolour="none" height="62" usefillcolor="1" isinstance="0" xmi.id="44509" font="DejaVu Sans,9,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="5" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="43837" widgetaid="44509" xmi.id="45848" linecolor="#282828" >
      <linepath>
       <startpoint startx="128" starty="233" />
       <endpoint endx="255" endy="193" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="43613" widgetaid="44509" xmi.id="46743" linecolor="#282828" >
      <linepath>
       <startpoint startx="128" starty="295" />
       <endpoint endx="280" endy="479" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="5" indexa="4" totalcountb="3" indexb="1" linewidth="none" widgetbid="43389" widgetaid="44509" xmi.id="47192" linecolor="#282828" >
      <linepath>
       <startpoint startx="128" starty="295" />
       <endpoint endx="299" endy="395" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="5" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="44061" widgetaid="44509" xmi.id="47641" linecolor="#282828" >
      <linepath>
       <startpoint startx="128" starty="233" />
       <endpoint endx="251" endy="97" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="44285" widgetaid="44061" xmi.id="50989" linecolor="#282828" >
      <linepath>
       <startpoint startx="519" starty="97" />
       <endpoint endx="603" endy="232" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="44285" widgetaid="43837" xmi.id="51438" linecolor="#282828" >
      <linepath>
       <startpoint startx="511" starty="193" />
       <endpoint endx="603" endy="232" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="5" indexa="3" totalcountb="3" indexb="2" linewidth="none" widgetbid="44285" widgetaid="44509" xmi.id="51887" linecolor="#282828" >
      <linepath>
       <startpoint startx="128" starty="264" />
       <endpoint endx="603" endy="264" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="44285" widgetaid="43389" xmi.id="52336" linecolor="#282828" >
      <linepath>
       <startpoint startx="471" starty="395" />
       <endpoint endx="603" endy="294" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" linewidth="none" widgetbid="44285" widgetaid="43613" xmi.id="52785" linecolor="#282828" >
      <linepath>
       <startpoint startx="496" starty="479" />
       <endpoint endx="603" endy="294" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="808" snapy="10" showatts="1" xmi.id="61709" documentation="" type="400" showops="1" showpackage="0" name="use_case_locality_data" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="580" >
    <widgets>
     <actorwidget usesdiagramfillcolour="1" width="82" usesdiagramusefillcolour="1" x="182" y="84" linewidth="none" fillcolour="none" height="61" usefillcolor="1" isinstance="0" xmi.id="62156" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     <actorwidget usesdiagramfillcolour="1" width="80" usesdiagramusefillcolour="1" x="190" y="239" linewidth="none" fillcolour="none" height="61" usefillcolor="1" isinstance="0" xmi.id="62380" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     <actorwidget usesdiagramfillcolour="1" width="72" usesdiagramusefillcolour="1" x="195" y="398" linewidth="none" fillcolour="none" height="61" usefillcolor="1" isinstance="0" xmi.id="62604" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     <usecasewidget usesdiagramfillcolour="1" width="211" usesdiagramusefillcolour="1" x="454" y="71" linewidth="none" fillcolour="none" height="51" usefillcolor="1" isinstance="0" xmi.id="63274" showstereotype="1" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     <usecasewidget usesdiagramfillcolour="1" width="249" usesdiagramusefillcolour="1" x="445" y="177" linewidth="none" fillcolour="none" height="51" usefillcolor="1" isinstance="0" xmi.id="63498" showstereotype="1" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     <usecasewidget usesdiagramfillcolour="1" width="265" usesdiagramusefillcolour="1" x="429" y="289" linewidth="none" fillcolour="none" height="51" usefillcolor="1" isinstance="0" xmi.id="63722" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="162" usesdiagramusefillcolour="1" x="308" y="5" linewidth="none" posttext="" role="700" fillcolour="none" height="34" usefillcolor="1" pretext="" isinstance="0" xmi.id="64169" text="Locality Data" font="DejaVu Sans,18,-1,5,50,0,0,0,0,0" linecolor="none" />
     <usecasewidget usesdiagramfillcolour="1" width="286" usesdiagramusefillcolour="1" x="429" y="422" linewidth="none" fillcolour="none" height="51" usefillcolor="1" isinstance="0" xmi.id="65285" font="DejaVu Sans,9,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="63274" widgetaid="62156" xmi.id="66847" linecolor="none" >
      <linepath>
       <startpoint startx="264" starty="84" />
       <endpoint endx="454" endy="84" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Visões" >
    <listitem open="1" type="801" label="Visão Lógica" >
     <listitem open="0" type="813" id="17156" />
     <listitem open="0" type="813" id="17154" />
     <listitem open="0" type="813" id="16397" />
     <listitem open="0" type="813" id="16415" />
     <listitem open="0" type="813" id="17048" >
      <listitem open="0" type="813" id="17061" />
      <listitem open="0" type="813" id="17049" />
     </listitem>
     <listitem open="0" type="813" id="18" >
      <listitem open="0" type="814" id="1493" />
      <listitem open="0" type="814" id="1516" />
      <listitem open="0" type="814" id="1539" />
      <listitem open="0" type="814" id="1562" />
      <listitem open="0" type="814" id="1585" />
      <listitem open="0" type="814" id="1608" />
      <listitem open="0" type="814" id="1631" />
      <listitem open="0" type="814" id="1654" />
      <listitem open="0" type="814" id="16200" />
      <listitem open="0" type="815" id="897" />
      <listitem open="0" type="815" id="927" />
      <listitem open="0" type="815" id="957" />
      <listitem open="0" type="815" id="987" />
      <listitem open="0" type="815" id="1017" />
      <listitem open="0" type="815" id="1047" />
      <listitem open="0" type="815" id="1077" />
      <listitem open="0" type="815" id="1107" />
      <listitem open="0" type="815" id="1137" />
      <listitem open="0" type="815" id="1293" />
      <listitem open="0" type="815" id="1309" />
      <listitem open="0" type="815" id="1326" />
      <listitem open="0" type="815" id="1344" />
      <listitem open="0" type="815" id="1363" />
      <listitem open="0" type="815" id="1383" />
      <listitem open="0" type="815" id="1404" />
      <listitem open="0" type="815" id="1426" />
      <listitem open="0" type="815" id="16157" />
      <listitem open="0" type="815" id="16158" />
      <listitem open="0" type="815" id="16159" />
      <listitem open="0" type="815" id="16169" />
      <listitem open="0" type="815" id="16170" />
      <listitem open="0" type="815" id="16179" />
      <listitem open="0" type="815" id="16187" />
      <listitem open="0" type="815" id="16194" />
     </listitem>
     <listitem open="0" type="813" id="19" >
      <listitem open="0" type="814" id="2224" />
      <listitem open="0" type="814" id="2253" />
      <listitem open="0" type="814" id="2282" />
      <listitem open="0" type="814" id="2311" />
      <listitem open="0" type="814" id="2368" />
      <listitem open="0" type="814" id="2397" />
      <listitem open="0" type="814" id="2426" />
      <listitem open="0" type="814" id="16235" />
      <listitem open="0" type="815" id="1743" />
      <listitem open="0" type="815" id="1789" />
      <listitem open="0" type="815" id="1835" />
      <listitem open="0" type="815" id="1881" />
      <listitem open="0" type="815" id="1927" />
      <listitem open="0" type="815" id="1973" />
      <listitem open="0" type="815" id="2019" />
      <listitem open="0" type="815" id="2065" />
      <listitem open="0" type="815" id="2089" />
      <listitem open="0" type="815" id="2114" />
      <listitem open="0" type="815" id="2140" />
      <listitem open="0" type="815" id="2167" />
      <listitem open="0" type="815" id="2195" />
      <listitem open="0" type="815" id="16201" />
      <listitem open="0" type="815" id="16202" />
      <listitem open="0" type="815" id="16203" />
      <listitem open="0" type="815" id="16225" />
      <listitem open="0" type="815" id="16227" />
      <listitem open="0" type="815" id="16234" />
     </listitem>
     <listitem open="0" type="813" id="56" >
      <listitem open="0" type="814" id="8646" />
      <listitem open="0" type="814" id="9275" />
      <listitem open="0" type="814" id="9315" />
      <listitem open="0" type="814" id="9355" />
      <listitem open="0" type="814" id="9395" />
      <listitem open="0" type="815" id="8414" />
      <listitem open="0" type="815" id="8606" />
     </listitem>
     <listitem open="0" type="813" id="16246" >
      <listitem open="0" type="813" id="16275" />
      <listitem open="0" type="814" id="16273" />
      <listitem open="0" type="814" id="16274" />
      <listitem open="0" type="814" id="16276" />
      <listitem open="0" type="815" id="16250" />
      <listitem open="0" type="815" id="16251" />
      <listitem open="0" type="815" id="16252" />
      <listitem open="0" type="815" id="16254" />
      <listitem open="0" type="815" id="16256" />
      <listitem open="0" type="815" id="16258" />
      <listitem open="0" type="815" id="16259" />
      <listitem open="0" type="815" id="16260" />
      <listitem open="0" type="815" id="16261" />
      <listitem open="0" type="815" id="16263" />
      <listitem open="0" type="815" id="16265" />
      <listitem open="0" type="815" id="16266" />
      <listitem open="0" type="815" id="16267" />
      <listitem open="0" type="815" id="16268" />
      <listitem open="0" type="815" id="16270" />
      <listitem open="0" type="815" id="16271" />
     </listitem>
     <listitem open="0" type="813" id="16277" >
      <listitem open="0" type="814" id="16328" />
      <listitem open="0" type="815" id="16278" />
      <listitem open="0" type="815" id="16280" />
      <listitem open="0" type="815" id="16281" />
      <listitem open="0" type="815" id="16284" />
      <listitem open="0" type="815" id="16286" />
      <listitem open="0" type="815" id="16288" />
      <listitem open="0" type="815" id="16290" />
      <listitem open="0" type="815" id="16293" />
      <listitem open="0" type="815" id="16295" />
      <listitem open="0" type="815" id="16297" />
      <listitem open="0" type="815" id="16300" />
      <listitem open="0" type="815" id="16303" />
      <listitem open="0" type="815" id="16305" />
      <listitem open="0" type="815" id="16309" />
      <listitem open="0" type="815" id="16312" />
      <listitem open="0" type="815" id="16314" />
      <listitem open="0" type="815" id="16316" />
      <listitem open="0" type="815" id="16319" />
      <listitem open="0" type="815" id="16321" />
      <listitem open="0" type="815" id="16323" />
      <listitem open="0" type="815" id="16325" />
     </listitem>
     <listitem open="0" type="813" id="16488" >
      <listitem open="0" type="814" id="16578" />
      <listitem open="0" type="814" id="16579" />
      <listitem open="0" type="814" id="16580" />
      <listitem open="0" type="814" id="16582" />
      <listitem open="0" type="814" id="16584" />
      <listitem open="0" type="814" id="16585" />
      <listitem open="0" type="814" id="16586" />
      <listitem open="0" type="814" id="16587" />
      <listitem open="0" type="814" id="16588" />
      <listitem open="0" type="814" id="16589" />
      <listitem open="0" type="814" id="16590" />
      <listitem open="0" type="814" id="16591" />
      <listitem open="0" type="814" id="16592" />
      <listitem open="0" type="814" id="16593" />
      <listitem open="0" type="814" id="16594" />
      <listitem open="0" type="814" id="16595" />
      <listitem open="0" type="814" id="16596" />
      <listitem open="0" type="814" id="16597" />
      <listitem open="0" type="814" id="16598" />
      <listitem open="0" type="814" id="16599" />
      <listitem open="0" type="814" id="16600" />
      <listitem open="0" type="814" id="16601" />
      <listitem open="0" type="814" id="16602" />
      <listitem open="0" type="814" id="16603" />
      <listitem open="0" type="815" id="16492" />
      <listitem open="0" type="815" id="16493" />
      <listitem open="0" type="815" id="16494" />
      <listitem open="0" type="815" id="16496" />
      <listitem open="0" type="815" id="16497" />
      <listitem open="0" type="815" id="16499" />
      <listitem open="0" type="815" id="16500" />
      <listitem open="0" type="815" id="16502" />
      <listitem open="0" type="815" id="16503" />
      <listitem open="0" type="815" id="16505" />
      <listitem open="0" type="815" id="16506" />
      <listitem open="0" type="815" id="16508" />
      <listitem open="0" type="815" id="16509" />
      <listitem open="0" type="815" id="16511" />
      <listitem open="0" type="815" id="16512" />
      <listitem open="0" type="815" id="16514" />
      <listitem open="0" type="815" id="16515" />
      <listitem open="0" type="815" id="16517" />
      <listitem open="0" type="815" id="16518" />
      <listitem open="0" type="815" id="16520" />
      <listitem open="0" type="815" id="16521" />
      <listitem open="0" type="815" id="16523" />
      <listitem open="0" type="815" id="16524" />
      <listitem open="0" type="815" id="16526" />
      <listitem open="0" type="815" id="16527" />
      <listitem open="0" type="815" id="16529" />
      <listitem open="0" type="815" id="16530" />
      <listitem open="0" type="815" id="16532" />
      <listitem open="0" type="815" id="16534" />
      <listitem open="0" type="815" id="16535" />
      <listitem open="0" type="815" id="16538" />
      <listitem open="0" type="815" id="16540" />
      <listitem open="0" type="815" id="16541" />
      <listitem open="0" type="815" id="16542" />
      <listitem open="0" type="815" id="16543" />
      <listitem open="0" type="815" id="16546" />
      <listitem open="0" type="815" id="16548" />
      <listitem open="0" type="815" id="16549" />
      <listitem open="0" type="815" id="16550" />
      <listitem open="0" type="815" id="16552" />
      <listitem open="0" type="815" id="16553" />
      <listitem open="0" type="815" id="16556" />
      <listitem open="0" type="815" id="16557" />
      <listitem open="0" type="815" id="16559" />
      <listitem open="0" type="815" id="16561" />
      <listitem open="0" type="815" id="16563" />
      <listitem open="0" type="815" id="16565" />
      <listitem open="0" type="815" id="16567" />
      <listitem open="0" type="815" id="16570" />
      <listitem open="0" type="815" id="16574" />
      <listitem open="0" type="815" id="16575" />
      <listitem open="0" type="815" id="16576" />
     </listitem>
     <listitem open="0" type="813" id="16421" >
      <listitem open="0" type="814" id="16444" />
      <listitem open="0" type="814" id="16445" />
      <listitem open="0" type="814" id="16446" />
      <listitem open="0" type="814" id="16447" />
      <listitem open="0" type="814" id="16448" />
      <listitem open="0" type="815" id="16425" />
      <listitem open="0" type="815" id="16426" />
      <listitem open="0" type="815" id="16427" />
      <listitem open="0" type="815" id="16428" />
      <listitem open="0" type="815" id="16431" />
      <listitem open="0" type="815" id="16432" />
      <listitem open="0" type="815" id="16433" />
      <listitem open="0" type="815" id="16434" />
      <listitem open="0" type="815" id="16435" />
      <listitem open="0" type="815" id="16436" />
      <listitem open="0" type="815" id="16437" />
      <listitem open="0" type="815" id="16438" />
      <listitem open="0" type="815" id="16440" />
      <listitem open="0" type="829" id="16443" />
      <listitem open="0" type="829" id="16442" />
     </listitem>
     <listitem open="0" type="813" id="16329" >
      <listitem open="0" type="814" id="16400" />
      <listitem open="0" type="814" id="16401" />
      <listitem open="0" type="814" id="16402" />
      <listitem open="0" type="814" id="16403" />
      <listitem open="0" type="814" id="16404" />
      <listitem open="0" type="814" id="16405" />
      <listitem open="0" type="814" id="16406" />
      <listitem open="0" type="814" id="16407" />
      <listitem open="0" type="814" id="16408" />
      <listitem open="0" type="814" id="16409" />
      <listitem open="0" type="814" id="16410" />
      <listitem open="0" type="814" id="16413" />
      <listitem open="0" type="814" id="16414" />
      <listitem open="0" type="814" id="16417" />
      <listitem open="0" type="814" id="16418" />
      <listitem open="0" type="814" id="16419" />
      <listitem open="0" type="814" id="16420" />
      <listitem open="0" type="815" id="16347" />
      <listitem open="0" type="815" id="16348" />
      <listitem open="0" type="815" id="16351" />
      <listitem open="0" type="815" id="16352" />
      <listitem open="0" type="815" id="16355" />
      <listitem open="0" type="815" id="16356" />
      <listitem open="0" type="815" id="16358" />
      <listitem open="0" type="815" id="16359" />
      <listitem open="0" type="815" id="16360" />
      <listitem open="0" type="815" id="16362" />
      <listitem open="0" type="815" id="16366" />
      <listitem open="0" type="815" id="16367" />
      <listitem open="0" type="815" id="16369" />
      <listitem open="0" type="815" id="16370" />
      <listitem open="0" type="815" id="16372" />
      <listitem open="0" type="815" id="16373" />
      <listitem open="0" type="815" id="16374" />
      <listitem open="0" type="815" id="16375" />
      <listitem open="0" type="815" id="16376" />
      <listitem open="0" type="815" id="16377" />
      <listitem open="0" type="815" id="16378" />
      <listitem open="0" type="815" id="16379" />
      <listitem open="0" type="815" id="16380" />
      <listitem open="0" type="815" id="16381" />
      <listitem open="0" type="815" id="16382" />
      <listitem open="0" type="815" id="16383" />
      <listitem open="0" type="815" id="16385" />
      <listitem open="0" type="815" id="16387" />
      <listitem open="0" type="815" id="16389" />
      <listitem open="0" type="815" id="16391" />
      <listitem open="0" type="815" id="16394" />
      <listitem open="0" type="831" id="16333" >
       <listitem open="0" type="-1" id="16334" />
       <listitem open="0" type="-1" id="16335" />
       <listitem open="0" type="-1" id="16336" />
       <listitem open="0" type="-1" id="16337" />
       <listitem open="0" type="-1" id="16338" />
       <listitem open="0" type="-1" id="16339" />
       <listitem open="0" type="-1" id="16340" />
       <listitem open="0" type="-1" id="16341" />
       <listitem open="0" type="-1" id="16342" />
       <listitem open="0" type="-1" id="16343" />
       <listitem open="0" type="-1" id="16344" />
       <listitem open="0" type="-1" id="16345" />
       <listitem open="0" type="-1" id="16346" />
      </listitem>
     </listitem>
     <listitem open="0" type="813" id="16604" >
      <listitem open="0" type="815" id="16608" />
      <listitem open="0" type="815" id="16609" />
      <listitem open="0" type="815" id="16610" />
      <listitem open="0" type="815" id="16614" />
      <listitem open="0" type="815" id="16616" />
      <listitem open="0" type="815" id="16618" />
      <listitem open="0" type="815" id="16621" />
      <listitem open="0" type="815" id="16623" />
     </listitem>
     <listitem open="0" type="813" id="20" >
      <listitem open="0" type="814" id="144" />
      <listitem open="0" type="814" id="146" />
      <listitem open="0" type="814" id="16941" />
      <listitem open="0" type="815" id="104" />
      <listitem open="0" type="815" id="107" />
      <listitem open="0" type="815" id="108" />
      <listitem open="0" type="815" id="109" />
      <listitem open="0" type="815" id="110" />
      <listitem open="0" type="815" id="111" />
      <listitem open="0" type="815" id="127" />
      <listitem open="0" type="815" id="130" />
      <listitem open="0" type="815" id="134" />
      <listitem open="0" type="815" id="138" />
      <listitem open="0" type="815" id="16916" />
      <listitem open="0" type="815" id="16917" />
      <listitem open="0" type="815" id="16920" />
      <listitem open="0" type="815" id="16927" />
      <listitem open="0" type="815" id="16931" />
      <listitem open="0" type="815" id="16939" />
     </listitem>
     <listitem open="0" type="813" id="57" >
      <listitem open="0" type="815" id="11909" />
      <listitem open="0" type="815" id="11995" />
      <listitem open="0" type="815" id="12081" />
      <listitem open="0" type="815" id="12167" />
     </listitem>
     <listitem open="0" type="813" id="16449" >
      <listitem open="0" type="814" id="16476" />
      <listitem open="0" type="814" id="16478" />
      <listitem open="0" type="814" id="16479" />
      <listitem open="0" type="814" id="16480" />
      <listitem open="0" type="814" id="16481" />
      <listitem open="0" type="814" id="16482" />
      <listitem open="0" type="814" id="16483" />
      <listitem open="0" type="815" id="16454" />
      <listitem open="0" type="815" id="16455" />
      <listitem open="0" type="815" id="16458" />
      <listitem open="0" type="815" id="16459" />
      <listitem open="0" type="815" id="16461" />
      <listitem open="0" type="815" id="16462" />
      <listitem open="0" type="815" id="16464" />
      <listitem open="0" type="815" id="16465" />
      <listitem open="0" type="815" id="16466" />
      <listitem open="0" type="815" id="16467" />
      <listitem open="0" type="815" id="16468" />
      <listitem open="0" type="815" id="16469" />
      <listitem open="0" type="815" id="16471" />
      <listitem open="0" type="815" id="16473" />
      <listitem open="0" type="831" id="16450" >
       <listitem open="0" type="-1" id="16451" />
       <listitem open="0" type="-1" id="16452" />
       <listitem open="0" type="-1" id="16453" />
      </listitem>
     </listitem>
     <listitem open="0" type="813" id="16484" >
      <listitem open="0" type="814" id="16486" />
      <listitem open="0" type="814" id="16487" />
     </listitem>
     <listitem open="0" type="813" id="10763" >
      <listitem open="0" type="815" id="14816" />
      <listitem open="0" type="815" id="14817" />
      <listitem open="0" type="815" id="14818" />
      <listitem open="0" type="815" id="14821" />
      <listitem open="0" type="815" id="14823" />
      <listitem open="0" type="815" id="14828" />
      <listitem open="0" type="815" id="14831" />
      <listitem open="0" type="815" id="14833" />
      <listitem open="0" type="815" id="14836" />
      <listitem open="0" type="815" id="14838" />
      <listitem open="0" type="815" id="14840" />
      <listitem open="0" type="815" id="14842" />
      <listitem open="0" type="815" id="14845" />
      <listitem open="0" type="815" id="14848" />
      <listitem open="0" type="831" id="14812" >
       <listitem open="0" type="-1" id="14814" />
       <listitem open="0" type="-1" id="14815" />
      </listitem>
     </listitem>
     <listitem open="0" type="813" id="16625" >
      <listitem open="0" type="814" id="16653" />
      <listitem open="0" type="814" id="16654" />
      <listitem open="0" type="814" id="16655" />
      <listitem open="0" type="815" id="16629" />
      <listitem open="0" type="815" id="16630" />
      <listitem open="0" type="815" id="16631" />
      <listitem open="0" type="815" id="16634" />
      <listitem open="0" type="815" id="16641" />
      <listitem open="0" type="815" id="16642" />
      <listitem open="0" type="815" id="16643" />
      <listitem open="0" type="815" id="16644" />
      <listitem open="0" type="815" id="16646" />
      <listitem open="0" type="815" id="16648" />
      <listitem open="0" type="815" id="16650" />
      <listitem open="0" type="815" id="16651" />
      <listitem open="0" type="831" id="16637" >
       <listitem open="0" type="-1" id="16638" />
       <listitem open="0" type="-1" id="16639" />
       <listitem open="0" type="-1" id="16640" />
      </listitem>
     </listitem>
     <listitem open="0" type="813" id="58" >
      <listitem open="0" type="814" id="11149" />
      <listitem open="0" type="814" id="11234" />
      <listitem open="0" type="814" id="11277" />
      <listitem open="0" type="814" id="11320" />
      <listitem open="0" type="815" id="9630" />
      <listitem open="0" type="815" id="9670" />
      <listitem open="0" type="815" id="9710" />
      <listitem open="0" type="815" id="9750" />
      <listitem open="0" type="815" id="9791" />
      <listitem open="0" type="815" id="9833" />
      <listitem open="0" type="815" id="10129" />
      <listitem open="0" type="815" id="10215" />
      <listitem open="0" type="815" id="10934" />
      <listitem open="0" type="815" id="11062" />
     </listitem>
     <listitem open="0" type="813" id="16656" >
      <listitem open="0" type="813" id="16688" />
      <listitem open="0" type="814" id="16685" />
      <listitem open="0" type="814" id="16686" />
      <listitem open="0" type="814" id="16687" />
      <listitem open="0" type="814" id="16689" />
      <listitem open="0" type="815" id="16660" />
      <listitem open="0" type="815" id="16661" />
      <listitem open="0" type="815" id="16662" />
      <listitem open="0" type="815" id="16664" />
      <listitem open="0" type="815" id="16666" />
      <listitem open="0" type="815" id="16668" />
      <listitem open="0" type="815" id="16669" />
      <listitem open="0" type="815" id="16670" />
      <listitem open="0" type="815" id="16671" />
      <listitem open="0" type="815" id="16672" />
      <listitem open="0" type="815" id="16674" />
      <listitem open="0" type="815" id="16676" />
      <listitem open="0" type="815" id="16678" />
      <listitem open="0" type="815" id="16679" />
      <listitem open="0" type="815" id="16680" />
      <listitem open="0" type="815" id="16681" />
      <listitem open="0" type="815" id="16682" />
      <listitem open="0" type="815" id="16684" />
     </listitem>
     <listitem open="0" type="813" id="16713" />
     <listitem open="0" type="813" id="16691" >
      <listitem open="0" type="814" id="16709" />
      <listitem open="0" type="814" id="16710" />
      <listitem open="0" type="814" id="16711" />
      <listitem open="0" type="814" id="16712" />
      <listitem open="0" type="815" id="16692" />
      <listitem open="0" type="815" id="16693" />
      <listitem open="0" type="815" id="16694" />
      <listitem open="0" type="815" id="16695" />
      <listitem open="0" type="815" id="16696" />
      <listitem open="0" type="815" id="16697" />
      <listitem open="0" type="815" id="16698" />
      <listitem open="0" type="815" id="16700" />
      <listitem open="0" type="815" id="16702" />
      <listitem open="0" type="815" id="16704" />
      <listitem open="0" type="815" id="16706" />
      <listitem open="0" type="815" id="16707" />
      <listitem open="0" type="815" id="16708" />
     </listitem>
     <listitem open="0" type="813" id="54" >
      <listitem open="0" type="814" id="6453" />
      <listitem open="0" type="814" id="7256" />
      <listitem open="0" type="814" id="7295" />
      <listitem open="0" type="814" id="7334" />
      <listitem open="0" type="814" id="7373" />
      <listitem open="0" type="814" id="7412" />
      <listitem open="0" type="814" id="7451" />
      <listitem open="0" type="814" id="7490" />
      <listitem open="0" type="814" id="7529" />
      <listitem open="0" type="814" id="7568" />
      <listitem open="0" type="814" id="7987" />
      <listitem open="0" type="814" id="8026" />
      <listitem open="0" type="814" id="8065" />
      <listitem open="0" type="814" id="8104" />
      <listitem open="0" type="814" id="8143" />
      <listitem open="0" type="814" id="8182" />
      <listitem open="0" type="814" id="8221" />
      <listitem open="0" type="814" id="8260" />
      <listitem open="0" type="814" id="8299" />
      <listitem open="0" type="815" id="4799" />
      <listitem open="0" type="815" id="4831" />
      <listitem open="0" type="815" id="4895" />
      <listitem open="0" type="815" id="5021" />
      <listitem open="0" type="815" id="5241" />
      <listitem open="0" type="815" id="5273" />
      <listitem open="0" type="815" id="5305" />
      <listitem open="0" type="815" id="5337" />
      <listitem open="0" type="815" id="5369" />
      <listitem open="0" type="815" id="5401" />
      <listitem open="0" type="815" id="5433" />
      <listitem open="0" type="815" id="5466" />
      <listitem open="0" type="815" id="5500" />
      <listitem open="0" type="815" id="5535" />
      <listitem open="0" type="815" id="5571" />
      <listitem open="0" type="815" id="5608" />
      <listitem open="0" type="815" id="5646" />
      <listitem open="0" type="815" id="6065" />
      <listitem open="0" type="815" id="6104" />
      <listitem open="0" type="815" id="6143" />
      <listitem open="0" type="815" id="6182" />
      <listitem open="0" type="815" id="6221" />
      <listitem open="0" type="815" id="6260" />
     </listitem>
     <listitem open="0" type="813" id="16977" >
      <listitem open="0" type="815" id="16981" />
      <listitem open="0" type="815" id="16982" />
      <listitem open="0" type="815" id="16983" />
      <listitem open="0" type="815" id="16986" />
      <listitem open="0" type="815" id="16988" />
     </listitem>
     <listitem open="0" type="813" id="17" >
      <listitem open="0" type="814" id="536" />
      <listitem open="0" type="814" id="551" />
      <listitem open="0" type="814" id="566" />
      <listitem open="0" type="814" id="581" />
      <listitem open="0" type="814" id="596" />
      <listitem open="0" type="814" id="611" />
      <listitem open="0" type="814" id="626" />
      <listitem open="0" type="814" id="16781" />
      <listitem open="0" type="814" id="16782" />
      <listitem open="0" type="814" id="16783" />
      <listitem open="0" type="814" id="16784" />
      <listitem open="0" type="814" id="16785" />
      <listitem open="0" type="814" id="16796" />
      <listitem open="0" type="814" id="16807" />
      <listitem open="0" type="814" id="16828" />
      <listitem open="0" type="814" id="16839" />
      <listitem open="0" type="814" id="16850" />
      <listitem open="0" type="814" id="16861" />
      <listitem open="0" type="815" id="161" />
      <listitem open="0" type="815" id="198" />
      <listitem open="0" type="815" id="202" />
      <listitem open="0" type="815" id="210" />
      <listitem open="0" type="815" id="218" />
      <listitem open="0" type="815" id="226" />
      <listitem open="0" type="815" id="234" />
      <listitem open="0" type="815" id="242" />
      <listitem open="0" type="815" id="253" />
      <listitem open="0" type="815" id="261" />
      <listitem open="0" type="815" id="293" />
      <listitem open="0" type="815" id="316" />
      <listitem open="0" type="815" id="324" />
      <listitem open="0" type="815" id="335" />
      <listitem open="0" type="815" id="346" />
      <listitem open="0" type="815" id="431" />
      <listitem open="0" type="815" id="437" />
      <listitem open="0" type="815" id="444" />
      <listitem open="0" type="815" id="452" />
      <listitem open="0" type="815" id="461" />
      <listitem open="0" type="815" id="471" />
      <listitem open="0" type="815" id="482" />
      <listitem open="0" type="815" id="494" />
      <listitem open="0" type="815" id="507" />
      <listitem open="0" type="815" id="521" />
      <listitem open="0" type="815" id="16717" />
      <listitem open="0" type="815" id="16718" />
      <listitem open="0" type="815" id="16721" />
      <listitem open="0" type="815" id="16722" />
      <listitem open="0" type="815" id="16723" />
      <listitem open="0" type="815" id="16749" />
      <listitem open="0" type="815" id="16752" />
      <listitem open="0" type="815" id="16754" />
      <listitem open="0" type="815" id="16756" />
      <listitem open="0" type="815" id="16758" />
      <listitem open="0" type="815" id="16772" />
      <listitem open="0" type="815" id="16774" />
      <listitem open="0" type="815" id="16775" />
      <listitem open="0" type="815" id="16776" />
      <listitem open="0" type="815" id="16777" />
      <listitem open="0" type="815" id="16778" />
      <listitem open="0" type="815" id="16779" />
     </listitem>
     <listitem open="0" type="813" id="55" >
      <listitem open="0" type="814" id="13241" />
      <listitem open="0" type="814" id="13286" />
      <listitem open="0" type="814" id="13330" />
      <listitem open="0" type="814" id="13374" />
      <listitem open="0" type="814" id="14246" />
      <listitem open="0" type="815" id="12379" />
      <listitem open="0" type="815" id="12422" />
      <listitem open="0" type="815" id="12465" />
      <listitem open="0" type="815" id="12508" />
      <listitem open="0" type="815" id="12551" />
      <listitem open="0" type="815" id="12594" />
      <listitem open="0" type="815" id="12637" />
      <listitem open="0" type="815" id="12680" />
      <listitem open="0" type="815" id="12723" />
      <listitem open="0" type="815" id="12766" />
      <listitem open="0" type="815" id="12852" />
      <listitem open="0" type="815" id="14225" />
      <listitem open="0" type="815" id="14232" />
      <listitem open="0" type="815" id="14247" />
      <listitem open="0" type="815" id="14248" />
      <listitem open="0" type="815" id="14250" />
      <listitem open="0" type="815" id="14251" />
      <listitem open="0" type="815" id="14252" />
     </listitem>
     <listitem open="0" type="813" id="29450" >
      <listitem open="0" type="814" id="29480" />
      <listitem open="0" type="814" id="29481" />
      <listitem open="0" type="815" id="29454" />
      <listitem open="0" type="815" id="29456" />
      <listitem open="0" type="815" id="29457" />
      <listitem open="0" type="815" id="29459" />
      <listitem open="0" type="815" id="29460" />
      <listitem open="0" type="815" id="29462" />
      <listitem open="0" type="815" id="29464" />
      <listitem open="0" type="815" id="29465" />
      <listitem open="0" type="815" id="29466" />
      <listitem open="0" type="815" id="29468" />
      <listitem open="0" type="815" id="29470" />
      <listitem open="0" type="815" id="29471" />
      <listitem open="0" type="815" id="29473" />
      <listitem open="0" type="815" id="29475" />
      <listitem open="0" type="815" id="29477" />
      <listitem open="0" type="815" id="29479" />
     </listitem>
     <listitem open="0" type="813" id="29483" >
      <listitem open="0" type="814" id="29514" />
      <listitem open="0" type="814" id="29515" />
      <listitem open="0" type="814" id="29516" />
      <listitem open="0" type="814" id="29517" />
      <listitem open="0" type="814" id="29518" />
      <listitem open="0" type="814" id="29519" />
      <listitem open="0" type="815" id="29487" />
      <listitem open="0" type="815" id="29489" />
      <listitem open="0" type="815" id="29490" />
      <listitem open="0" type="815" id="29492" />
      <listitem open="0" type="815" id="29493" />
      <listitem open="0" type="815" id="29495" />
      <listitem open="0" type="815" id="29497" />
      <listitem open="0" type="815" id="29498" />
      <listitem open="0" type="815" id="29499" />
      <listitem open="0" type="815" id="29501" />
      <listitem open="0" type="815" id="29503" />
      <listitem open="0" type="815" id="29505" />
      <listitem open="0" type="815" id="29507" />
      <listitem open="0" type="815" id="29508" />
      <listitem open="0" type="815" id="29510" />
      <listitem open="0" type="815" id="29512" />
      <listitem open="0" type="815" id="29520" />
      <listitem open="0" type="815" id="29522" />
      <listitem open="0" type="815" id="29524" />
     </listitem>
     <listitem open="0" type="813" id="16872" >
      <listitem open="0" type="815" id="16881" />
      <listitem open="0" type="815" id="16882" />
      <listitem open="0" type="815" id="16885" />
      <listitem open="0" type="815" id="16886" />
      <listitem open="0" type="815" id="16889" />
      <listitem open="0" type="815" id="16891" />
      <listitem open="0" type="815" id="16892" />
      <listitem open="0" type="815" id="16894" />
      <listitem open="0" type="815" id="16896" />
      <listitem open="0" type="815" id="16898" />
      <listitem open="0" type="815" id="16899" />
      <listitem open="0" type="815" id="16901" />
      <listitem open="0" type="815" id="16904" />
      <listitem open="0" type="815" id="16907" />
      <listitem open="0" type="815" id="16910" />
     </listitem>
     <listitem open="0" type="813" id="29527" >
      <listitem open="0" type="813" id="29557" />
      <listitem open="0" type="814" id="29560" />
      <listitem open="0" type="814" id="29561" />
      <listitem open="0" type="815" id="29531" />
      <listitem open="0" type="815" id="29533" />
      <listitem open="0" type="815" id="29534" />
      <listitem open="0" type="815" id="29536" />
      <listitem open="0" type="815" id="29537" />
      <listitem open="0" type="815" id="29539" />
      <listitem open="0" type="815" id="29541" />
      <listitem open="0" type="815" id="29542" />
      <listitem open="0" type="815" id="29543" />
      <listitem open="0" type="815" id="29545" />
      <listitem open="0" type="815" id="29547" />
      <listitem open="0" type="815" id="29548" />
      <listitem open="0" type="815" id="29550" />
      <listitem open="0" type="815" id="29552" />
      <listitem open="0" type="815" id="29554" />
      <listitem open="0" type="815" id="29556" />
      <listitem open="0" type="815" id="29558" />
     </listitem>
     <listitem open="0" type="813" id="16990" >
      <listitem open="0" type="815" id="17053" />
      <listitem open="0" type="815" id="17054" />
      <listitem open="0" type="815" id="17056" />
      <listitem open="0" type="815" id="17057" />
      <listitem open="0" type="815" id="17060" />
      <listitem open="0" type="815" id="17066" />
     </listitem>
     <listitem open="0" type="813" id="17068" >
      <listitem open="0" type="814" id="17099" />
      <listitem open="0" type="814" id="17100" />
      <listitem open="0" type="814" id="17101" />
      <listitem open="0" type="815" id="17072" />
      <listitem open="0" type="815" id="17074" />
      <listitem open="0" type="815" id="17075" />
      <listitem open="0" type="815" id="17078" />
      <listitem open="0" type="815" id="17079" />
      <listitem open="0" type="815" id="17080" />
      <listitem open="0" type="815" id="17085" />
      <listitem open="0" type="815" id="17087" />
      <listitem open="0" type="815" id="17089" />
      <listitem open="0" type="815" id="17091" />
      <listitem open="0" type="815" id="17093" />
      <listitem open="0" type="815" id="17095" />
      <listitem open="0" type="815" id="17097" />
      <listitem open="0" type="815" id="17102" />
      <listitem open="0" type="815" id="17104" />
     </listitem>
     <listitem open="0" type="813" id="16236" >
      <listitem open="0" type="815" id="16237" />
      <listitem open="0" type="815" id="16238" />
      <listitem open="0" type="815" id="16239" />
      <listitem open="0" type="815" id="16240" />
      <listitem open="0" type="815" id="16242" />
      <listitem open="0" type="815" id="16244" />
     </listitem>
     <listitem open="0" type="813" id="13548" >
      <listitem open="0" type="813" id="13771" />
      <listitem open="0" type="815" id="13769" />
      <listitem open="0" type="815" id="13770" />
      <listitem open="0" type="815" id="13773" />
     </listitem>
     <listitem open="0" type="813" id="17111" >
      <listitem open="0" type="814" id="17135" />
      <listitem open="0" type="814" id="17136" />
      <listitem open="0" type="814" id="17137" />
      <listitem open="0" type="814" id="17138" />
      <listitem open="0" type="814" id="17139" />
      <listitem open="0" type="814" id="17140" />
      <listitem open="0" type="814" id="17141" />
      <listitem open="0" type="814" id="17142" />
      <listitem open="0" type="814" id="17143" />
      <listitem open="0" type="814" id="17144" />
      <listitem open="0" type="814" id="17145" />
      <listitem open="0" type="815" id="17115" />
      <listitem open="0" type="815" id="17117" />
      <listitem open="0" type="815" id="17118" />
      <listitem open="0" type="815" id="17119" />
      <listitem open="0" type="815" id="17121" />
      <listitem open="0" type="815" id="17123" />
      <listitem open="0" type="815" id="17127" />
      <listitem open="0" type="815" id="17130" />
      <listitem open="0" type="815" id="17131" />
      <listitem open="0" type="815" id="17133" />
      <listitem open="0" type="815" id="17146" />
      <listitem open="0" type="815" id="17148" />
     </listitem>
     <listitem open="0" type="813" id="29482" />
     <listitem open="0" type="813" id="6684" />
     <listitem open="0" type="813" id="5147" />
     <listitem open="0" type="813" id="16750" />
     <listitem open="0" type="813" id="14216" />
     <listitem open="0" type="813" id="16475" />
     <listitem open="0" type="813" id="17110" />
     <listitem open="0" type="813" id="17124" />
     <listitem open="0" type="813" id="6376" />
     <listitem open="0" type="813" id="14253" />
     <listitem open="0" type="813" id="16544" />
     <listitem open="0" type="813" id="6568" />
     <listitem open="0" type="813" id="14808" />
     <listitem open="0" type="813" id="126" />
     <listitem open="0" type="813" id="275" />
     <listitem open="0" type="813" id="16477" />
     <listitem open="0" type="813" id="6607" />
     <listitem open="0" type="813" id="17109" />
     <listitem open="0" type="813" id="125" />
     <listitem open="0" type="813" id="14226" />
     <listitem open="0" type="813" id="17149" />
     <listitem open="0" type="813" id="17151" />
     <listitem open="0" type="813" id="17153" />
     <listitem open="0" type="813" id="17152" />
     <listitem open="0" type="813" id="17157" >
      <listitem open="0" type="814" id="17198" />
      <listitem open="0" type="814" id="17199" />
      <listitem open="0" type="814" id="17200" />
      <listitem open="0" type="815" id="17158" />
      <listitem open="0" type="815" id="17160" />
      <listitem open="0" type="815" id="17164" />
      <listitem open="0" type="815" id="17165" />
      <listitem open="0" type="815" id="17167" />
      <listitem open="0" type="815" id="17169" />
      <listitem open="0" type="815" id="17173" />
      <listitem open="0" type="815" id="17178" />
      <listitem open="0" type="815" id="17182" />
      <listitem open="0" type="815" id="17189" />
      <listitem open="0" type="815" id="17194" />
     </listitem>
     <listitem open="0" type="813" id="14220" >
      <listitem open="0" type="813" id="14221" />
     </listitem>
     <listitem open="0" type="813" id="17018" />
     <listitem open="0" type="813" id="16363" />
     <listitem open="0" type="818" id="14229" >
      <listitem open="0" type="813" id="14230" />
     </listitem>
     <listitem open="0" type="818" id="16411" >
      <listitem open="0" type="813" id="16412" />
      <listitem open="0" type="813" id="17063" />
     </listitem>
     <listitem open="0" type="830" label="Tipos de dados" >
      <listitem open="0" type="829" id="17155" />
      <listitem open="0" type="829" id="16416" />
      <listitem open="0" type="829" id="13111" />
      <listitem open="0" type="829" id="16573" />
      <listitem open="0" type="829" id="16429" />
      <listitem open="0" type="829" id="14245" />
      <listitem open="0" type="829" id="16485" />
      <listitem open="0" type="829" id="16636" />
      <listitem open="0" type="829" id="16887" />
      <listitem open="0" type="829" id="16928" />
      <listitem open="0" type="829" id="17023" />
      <listitem open="0" type="829" id="16690" />
      <listitem open="0" type="829" id="29513" />
      <listitem open="0" type="829" id="8844" />
      <listitem open="0" type="829" id="8884" />
      <listitem open="0" type="829" id="16581" />
      <listitem open="0" type="829" id="16583" />
      <listitem open="0" type="829" id="16545" />
      <listitem open="0" type="829" id="16883" />
      <listitem open="0" type="829" id="9960" />
      <listitem open="0" type="829" id="8804" />
      <listitem open="0" type="829" id="14829" />
      <listitem open="0" type="829" id="17058" />
      <listitem open="0" type="829" id="10342" />
      <listitem open="0" type="829" id="8764" />
      <listitem open="0" type="829" id="16167" />
      <listitem open="0" type="829" id="16282" />
      <listitem open="0" type="829" id="16306" />
      <listitem open="0" type="829" id="16393" />
      <listitem open="0" type="829" id="14227" />
      <listitem open="0" type="829" id="17150" />
      <listitem open="0" type="829" id="5" />
      <listitem open="0" type="829" id="4" />
      <listitem open="0" type="829" id="14826" />
      <listitem open="0" type="829" id="16770" />
      <listitem open="0" type="829" id="16893" />
      <listitem open="0" type="829" id="16371" />
      <listitem open="0" type="829" id="16536" />
      <listitem open="0" type="829" id="16632" />
      <listitem open="0" type="829" id="17006" />
      <listitem open="0" type="829" id="16773" />
      <listitem open="0" type="829" id="17125" />
      <listitem open="0" type="829" id="14254" />
      <listitem open="0" type="829" id="14819" />
      <listitem open="0" type="829" id="16554" />
      <listitem open="0" type="829" id="16767" />
      <listitem open="0" type="829" id="16368" />
      <listitem open="0" type="829" id="16361" />
      <listitem open="0" type="829" id="16357" />
      <listitem open="0" type="829" id="17064" />
      <listitem open="0" type="829" id="16364" />
      <listitem open="0" type="829" id="7" />
      <listitem open="0" type="829" id="17186" />
      <listitem open="0" type="829" id="6" />
      <listitem open="0" type="829" id="2" />
      <listitem open="0" type="829" id="8" />
      <listitem open="0" type="829" id="9" />
      <listitem open="0" type="829" id="117" />
      <listitem open="0" type="829" id="29559" />
      <listitem open="0" type="829" id="105" />
      <listitem open="0" type="829" id="16395" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Visão Caso de Uso" >
     <listitem open="1" type="811" id="62604" />
     <listitem open="1" type="811" id="62156" />
     <listitem open="1" type="811" id="62380" />
     <listitem open="1" type="812" id="65285" />
     <listitem open="1" type="812" id="63498" />
     <listitem open="1" type="812" id="63722" />
     <listitem open="1" type="812" id="63274" />
    </listitem>
    <listitem open="1" type="821" label="Visão do Componente" >
     <listitem open="0" type="822" id="44509" />
     <listitem open="0" type="822" id="43613" />
     <listitem open="0" type="822" id="43389" />
     <listitem open="0" type="822" id="44061" />
     <listitem open="0" type="822" id="43837" />
     <listitem open="0" type="822" id="44285" />
    </listitem>
    <listitem open="1" type="827" label="Visão de Distribuição" />
    <listitem open="1" type="836" label="Modelo de Relacionamento de Entidade" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument writeOutCode="true" package="" id="17" parent_class="17" fileExt=".cpp" fileName="omgmodel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmodel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16717" tag="operation_16717" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16718" tag="operation_16718" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="536" tag="hblock_tag_0" canDelete="false" classfield_id="536" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="536" tag="hblock_tag_1" canDelete="false" classfield_id="536" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="551" tag="hblock_tag_2" canDelete="false" classfield_id="551" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="551" tag="hblock_tag_3" canDelete="false" classfield_id="551" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="566" tag="hblock_tag_4" canDelete="false" classfield_id="566" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="566" tag="hblock_tag_5" canDelete="false" classfield_id="566" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="581" tag="hblock_tag_6" canDelete="false" classfield_id="581" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="581" tag="hblock_tag_7" canDelete="false" classfield_id="581" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="596" tag="hblock_tag_8" canDelete="false" classfield_id="596" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="596" tag="hblock_tag_9" canDelete="false" classfield_id="596" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="611" tag="hblock_tag_10" canDelete="false" classfield_id="611" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="611" tag="hblock_tag_11" canDelete="false" classfield_id="611" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="626" tag="hblock_tag_12" canDelete="false" classfield_id="626" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="626" tag="hblock_tag_13" canDelete="false" classfield_id="626" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="34" tag="hblock_tag_29" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="34" tag="hblock_tag_30" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="34" tag="hblock_tag_31" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="34" tag="hblock_tag_32" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="34" tag="hblock_tag_33" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_36" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_37" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_38" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_39" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_40" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="31" tag="hblock_tag_41" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="31" tag="hblock_tag_42" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="31" tag="hblock_tag_43" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="31" tag="hblock_tag_44" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="31" tag="hblock_tag_45" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="34" tag="hblock_tag_51" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="34" tag="hblock_tag_52" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="34" tag="hblock_tag_53" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="161" tag="operation_161" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="198" tag="operation_198" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a string representation of the model. Currently only intended for debuggin purposes.&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="202" tag="operation_202" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="210" tag="operation_210" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="218" tag="operation_218" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="226" tag="operation_226" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="234" tag="operation_234" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="242" tag="operation_242" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="253" tag="operation_253" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="261" tag="operation_261" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="293" tag="operation_293" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="316" tag="operation_316" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="324" tag="operation_324" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="335" tag="operation_335" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="346" tag="operation_346" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="431" tag="operation_431" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="437" tag="operation_437" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="444" tag="operation_444" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="452" tag="operation_452" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="461" tag="operation_461" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="471" tag="operation_471" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="482" tag="operation_482" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="494" tag="operation_494" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="507" tag="operation_507" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="521" tag="operation_521" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16721" tag="operation_16721" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16722" tag="operation_16722" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16723" tag="operation_16723" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//mutators" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16749" tag="operation_16749" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16752" tag="operation_16752" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16754" tag="operation_16754" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16756" tag="operation_16756" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="this is what is returned from om_create process. &amp;#010;at the moment we just store this in a string member, but in the future&amp;#010;we ill parse it out and store the individual constituents &amp;#010;as properties of the model object" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16758" tag="operation_16758" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//accessors" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16772" tag="operation_16772" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16774" tag="operation_16774" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16775" tag="operation_16775" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16776" tag="operation_16776" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16777" tag="operation_16777" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// General helper functions///** Once the taxon name and species file properties have&amp;#010;been set, you can call this method to populate the localities&amp;#010;collection." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16778" tag="operation_16778" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// implement the serialisable interface:///** Return an xml representation of this model as a simple qstring constant" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16779" tag="operation_16779" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16781" tag="hblock_tag_54" canDelete="false" classfield_id="16781" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16781" tag="hblock_tag_55" canDelete="false" classfield_id="16781" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16782" tag="hblock_tag_56" canDelete="false" classfield_id="16782" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16782" tag="hblock_tag_57" canDelete="false" classfield_id="16782" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16783" tag="hblock_tag_58" canDelete="false" classfield_id="16783" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16783" tag="hblock_tag_59" canDelete="false" classfield_id="16783" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16784" tag="hblock_tag_60" canDelete="false" classfield_id="16784" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16784" tag="hblock_tag_61" canDelete="false" classfield_id="16784" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16785" tag="hblock_tag_62" canDelete="false" classfield_id="16785" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16785" tag="hblock_tag_63" canDelete="false" classfield_id="16785" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16796" tag="hblock_tag_64" canDelete="false" classfield_id="16796" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16796" tag="hblock_tag_65" canDelete="false" classfield_id="16796" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16807" tag="hblock_tag_66" canDelete="false" classfield_id="16807" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@return the value of mLocalities" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16807" tag="hblock_tag_67" canDelete="false" classfield_id="16807" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@param value the value of mLocalities" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16828" tag="hblock_tag_68" canDelete="false" classfield_id="16828" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16828" tag="hblock_tag_69" canDelete="false" classfield_id="16828" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16839" tag="hblock_tag_70" canDelete="false" classfield_id="16839" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16839" tag="hblock_tag_71" canDelete="false" classfield_id="16839" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16850" tag="hblock_tag_72" canDelete="false" classfield_id="16850" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16850" tag="hblock_tag_73" canDelete="false" classfield_id="16850" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16861" tag="hblock_tag_74" canDelete="false" classfield_id="16861" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16861" tag="hblock_tag_75" canDelete="false" classfield_id="16861" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodel.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="536" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="536" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="536" tag="hblock_tag_0" canDelete="false" classfield_id="536" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="536" tag="hblock_tag_1" canDelete="false" classfield_id="536" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="551" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="551" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="551" tag="hblock_tag_2" canDelete="false" classfield_id="551" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="551" tag="hblock_tag_3" canDelete="false" classfield_id="551" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="566" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="566" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="566" tag="hblock_tag_4" canDelete="false" classfield_id="566" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="566" tag="hblock_tag_5" canDelete="false" classfield_id="566" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="581" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="581" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="581" tag="hblock_tag_6" canDelete="false" classfield_id="581" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="581" tag="hblock_tag_7" canDelete="false" classfield_id="581" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="596" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="596" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="596" tag="hblock_tag_8" canDelete="false" classfield_id="596" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="596" tag="hblock_tag_9" canDelete="false" classfield_id="596" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="611" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="611" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="611" tag="hblock_tag_10" canDelete="false" classfield_id="611" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="611" tag="hblock_tag_11" canDelete="false" classfield_id="611" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="626" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="626" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="626" tag="hblock_tag_12" canDelete="false" classfield_id="626" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="626" tag="hblock_tag_13" canDelete="false" classfield_id="626" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16781" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16781" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16781" tag="hblock_tag_54" canDelete="false" classfield_id="16781" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16781" tag="hblock_tag_55" canDelete="false" classfield_id="16781" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16782" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16782" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16782" tag="hblock_tag_56" canDelete="false" classfield_id="16782" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16782" tag="hblock_tag_57" canDelete="false" classfield_id="16782" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16783" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16783" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16783" tag="hblock_tag_58" canDelete="false" classfield_id="16783" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16783" tag="hblock_tag_59" canDelete="false" classfield_id="16783" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16784" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16784" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16784" tag="hblock_tag_60" canDelete="false" classfield_id="16784" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16784" tag="hblock_tag_61" canDelete="false" classfield_id="16784" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16785" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16785" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16785" tag="hblock_tag_62" canDelete="false" classfield_id="16785" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16785" tag="hblock_tag_63" canDelete="false" classfield_id="16785" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16796" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16796" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16796" tag="hblock_tag_64" canDelete="false" classfield_id="16796" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16796" tag="hblock_tag_65" canDelete="false" classfield_id="16796" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="//this type is defined at the bottom of omglocality.h" />
       </header>
       <ccfdeclarationcodeblock parent_id="16807" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16807" tag="hblock_tag_66" canDelete="false" classfield_id="16807" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@return the value of mLocalities" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16807" tag="hblock_tag_67" canDelete="false" classfield_id="16807" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@param value the value of mLocalities" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16828" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16828" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16828" tag="hblock_tag_68" canDelete="false" classfield_id="16828" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16828" tag="hblock_tag_69" canDelete="false" classfield_id="16828" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16839" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16839" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16839" tag="hblock_tag_70" canDelete="false" classfield_id="16839" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16839" tag="hblock_tag_71" canDelete="false" classfield_id="16839" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16850" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16850" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16850" tag="hblock_tag_72" canDelete="false" classfield_id="16850" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16850" tag="hblock_tag_73" canDelete="false" classfield_id="16850" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16861" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16861" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16861" tag="hblock_tag_74" canDelete="false" classfield_id="16861" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16861" tag="hblock_tag_75" canDelete="false" classfield_id="16861" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="24" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_36" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_37" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_38" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_39" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_40" canDelete="false" writeOutText="false" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="31" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="31" tag="hblock_tag_41" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="31" tag="hblock_tag_42" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="31" tag="hblock_tag_43" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="31" tag="hblock_tag_44" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="31" tag="hblock_tag_45" canDelete="false" writeOutText="false" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="34" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="34" tag="hblock_tag_29" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="34" tag="hblock_tag_30" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="34" tag="hblock_tag_31" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="34" tag="hblock_tag_32" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="34" tag="hblock_tag_33" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="34" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="34" tag="hblock_tag_51" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="34" tag="hblock_tag_52" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="34" tag="hblock_tag_53" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="34" tag="hblock_tag_54" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="34" tag="hblock_tag_55" canDelete="false" writeOutText="false" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_56" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_57" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_58" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_59" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_60" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="81" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="81" tag="hblock_tag_61" canDelete="false" writeOutText="false" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="81" tag="hblock_tag_62" canDelete="false" writeOutText="false" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="81" tag="hblock_tag_63" canDelete="false" writeOutText="false" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="81" tag="hblock_tag_64" canDelete="false" writeOutText="false" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="81" tag="hblock_tag_65" canDelete="false" writeOutText="false" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="84" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="84" tag="hblock_tag_66" canDelete="false" writeOutText="false" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="84" tag="hblock_tag_67" canDelete="false" writeOutText="false" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="84" tag="hblock_tag_68" canDelete="false" writeOutText="false" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="84" tag="hblock_tag_69" canDelete="false" writeOutText="false" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="84" tag="hblock_tag_70" canDelete="false" writeOutText="false" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="781" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="781" tag="hblock_tag_71" canDelete="false" writeOutText="false" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="781" tag="hblock_tag_72" canDelete="false" writeOutText="false" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="781" tag="hblock_tag_73" canDelete="false" writeOutText="false" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="781" tag="hblock_tag_74" canDelete="false" writeOutText="false" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="781" tag="hblock_tag_75" canDelete="false" writeOutText="false" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="18" parent_class="18" fileExt=".cpp" fileName="omgalgorithm" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgalgorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16157" tag="operation_16157" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16158" tag="operation_16158" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16159" tag="operation_16159" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="1493" tag="hblock_tag_0" canDelete="false" classfield_id="1493" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1493" tag="hblock_tag_1" canDelete="false" classfield_id="1493" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1516" tag="hblock_tag_2" canDelete="false" classfield_id="1516" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1516" tag="hblock_tag_3" canDelete="false" classfield_id="1516" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1539" tag="hblock_tag_4" canDelete="false" classfield_id="1539" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1539" tag="hblock_tag_5" canDelete="false" classfield_id="1539" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1562" tag="hblock_tag_6" canDelete="false" classfield_id="1562" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1562" tag="hblock_tag_7" canDelete="false" classfield_id="1562" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1585" tag="hblock_tag_8" canDelete="false" classfield_id="1585" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1585" tag="hblock_tag_9" canDelete="false" classfield_id="1585" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1608" tag="hblock_tag_10" canDelete="false" classfield_id="1608" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1608" tag="hblock_tag_11" canDelete="false" classfield_id="1608" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1631" tag="hblock_tag_12" canDelete="false" classfield_id="1631" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1631" tag="hblock_tag_13" canDelete="false" classfield_id="1631" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="1654" tag="hblock_tag_14" canDelete="false" classfield_id="1654" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="1654" tag="hblock_tag_15" canDelete="false" classfield_id="1654" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_27" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="41" tag="hblock_tag_28" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="41" tag="hblock_tag_29" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="41" tag="hblock_tag_30" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="41" tag="hblock_tag_31" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="41" tag="hblock_tag_32" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="84" tag="hblock_tag_33" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="84" tag="hblock_tag_34" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="84" tag="hblock_tag_35" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="84" tag="hblock_tag_36" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="84" tag="hblock_tag_37" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_38" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_39" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="87" tag="hblock_tag_40" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="87" tag="hblock_tag_41" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="87" tag="hblock_tag_42" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="897" tag="operation_897" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="927" tag="operation_927" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="957" tag="operation_957" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="987" tag="operation_987" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1017" tag="operation_1017" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1047" tag="operation_1047" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1077" tag="operation_1077" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1107" tag="operation_1107" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1137" tag="operation_1137" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1293" tag="operation_1293" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1309" tag="operation_1309" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1326" tag="operation_1326" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1344" tag="operation_1344" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1363" tag="operation_1363" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1383" tag="operation_1383" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1404" tag="operation_1404" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1426" tag="operation_1426" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16169" tag="operation_16169" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16170" tag="operation_16170" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16179" tag="operation_16179" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16187" tag="operation_16187" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16194" tag="operation_16194" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16200" tag="hblock_tag_46" canDelete="false" classfield_id="16200" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16200" tag="hblock_tag_47" canDelete="false" classfield_id="16200" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithm.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="1493" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1493" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1493" tag="hblock_tag_0" canDelete="false" classfield_id="1493" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1493" tag="hblock_tag_1" canDelete="false" classfield_id="1493" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1516" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1516" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1516" tag="hblock_tag_2" canDelete="false" classfield_id="1516" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1516" tag="hblock_tag_3" canDelete="false" classfield_id="1516" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1539" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1539" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1539" tag="hblock_tag_4" canDelete="false" classfield_id="1539" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1539" tag="hblock_tag_5" canDelete="false" classfield_id="1539" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1562" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1562" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1562" tag="hblock_tag_6" canDelete="false" classfield_id="1562" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1562" tag="hblock_tag_7" canDelete="false" classfield_id="1562" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1585" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1585" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1585" tag="hblock_tag_8" canDelete="false" classfield_id="1585" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1585" tag="hblock_tag_9" canDelete="false" classfield_id="1585" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1608" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1608" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1608" tag="hblock_tag_10" canDelete="false" classfield_id="1608" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1608" tag="hblock_tag_11" canDelete="false" classfield_id="1608" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1631" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1631" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1631" tag="hblock_tag_12" canDelete="false" classfield_id="1631" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1631" tag="hblock_tag_13" canDelete="false" classfield_id="1631" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1654" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1654" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1654" tag="hblock_tag_14" canDelete="false" classfield_id="1654" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1654" tag="hblock_tag_15" canDelete="false" classfield_id="1654" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16200" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16200" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16200" tag="hblock_tag_46" canDelete="false" classfield_id="16200" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16200" tag="hblock_tag_47" canDelete="false" classfield_id="16200" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="24" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_27" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="41" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="41" tag="hblock_tag_28" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="41" tag="hblock_tag_29" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="41" tag="hblock_tag_30" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="41" tag="hblock_tag_31" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="41" tag="hblock_tag_32" canDelete="false" writeOutText="false" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="84" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="84" tag="hblock_tag_33" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="84" tag="hblock_tag_34" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="84" tag="hblock_tag_35" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="84" tag="hblock_tag_36" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="84" tag="hblock_tag_37" canDelete="false" writeOutText="false" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="87" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_38" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_39" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="87" tag="hblock_tag_40" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="87" tag="hblock_tag_41" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="87" tag="hblock_tag_42" canDelete="false" writeOutText="false" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="19" parent_class="19" fileExt=".cpp" fileName="omgalgorithmparameter" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgalgorithmparameter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16201" tag="operation_16201" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16202" tag="operation_16202" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16203" tag="operation_16203" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="2224" tag="hblock_tag_0" canDelete="false" classfield_id="2224" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2224" tag="hblock_tag_1" canDelete="false" classfield_id="2224" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2253" tag="hblock_tag_2" canDelete="false" classfield_id="2253" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2253" tag="hblock_tag_3" canDelete="false" classfield_id="2253" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2282" tag="hblock_tag_4" canDelete="false" classfield_id="2282" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2282" tag="hblock_tag_5" canDelete="false" classfield_id="2282" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2311" tag="hblock_tag_6" canDelete="false" classfield_id="2311" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2311" tag="hblock_tag_7" canDelete="false" classfield_id="2311" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2368" tag="hblock_tag_8" canDelete="false" classfield_id="2368" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2368" tag="hblock_tag_9" canDelete="false" classfield_id="2368" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2397" tag="hblock_tag_10" canDelete="false" classfield_id="2397" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2397" tag="hblock_tag_11" canDelete="false" classfield_id="2397" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2426" tag="hblock_tag_12" canDelete="false" classfield_id="2426" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2426" tag="hblock_tag_13" canDelete="false" classfield_id="2426" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="41" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="41" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="41" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="41" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="41" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="87" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="1743" tag="operation_1743" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1789" tag="operation_1789" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1835" tag="operation_1835" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1881" tag="operation_1881" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1927" tag="operation_1927" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1973" tag="operation_1973" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2019" tag="operation_2019" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2065" tag="operation_2065" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2089" tag="operation_2089" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2114" tag="operation_2114" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2140" tag="operation_2140" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2167" tag="operation_2167" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2195" tag="operation_2195" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16225" tag="operation_16225" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The user defined value for this parameter" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16227" tag="operation_16227" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Provide a string representation of this param" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16234" tag="operation_16234" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16235" tag="hblock_tag_24" canDelete="false" classfield_id="16235" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16235" tag="hblock_tag_25" canDelete="false" classfield_id="16235" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithmparameter.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2224" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2224" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2224" tag="hblock_tag_0" canDelete="false" classfield_id="2224" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2224" tag="hblock_tag_1" canDelete="false" classfield_id="2224" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2253" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2253" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2253" tag="hblock_tag_2" canDelete="false" classfield_id="2253" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2253" tag="hblock_tag_3" canDelete="false" classfield_id="2253" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2282" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2282" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2282" tag="hblock_tag_4" canDelete="false" classfield_id="2282" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2282" tag="hblock_tag_5" canDelete="false" classfield_id="2282" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2311" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2311" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2311" tag="hblock_tag_6" canDelete="false" classfield_id="2311" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2311" tag="hblock_tag_7" canDelete="false" classfield_id="2311" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2368" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2368" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2368" tag="hblock_tag_8" canDelete="false" classfield_id="2368" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2368" tag="hblock_tag_9" canDelete="false" classfield_id="2368" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2397" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2397" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2397" tag="hblock_tag_10" canDelete="false" classfield_id="2397" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2397" tag="hblock_tag_11" canDelete="false" classfield_id="2397" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2426" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2426" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2426" tag="hblock_tag_12" canDelete="false" classfield_id="2426" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2426" tag="hblock_tag_13" canDelete="false" classfield_id="2426" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16235" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16235" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16235" tag="hblock_tag_24" canDelete="false" classfield_id="16235" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16235" tag="hblock_tag_25" canDelete="false" classfield_id="16235" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="41" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="41" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="41" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="41" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="41" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="41" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="87" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="87" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="87" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="87" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="20" parent_class="20" fileExt=".cpp" fileName="omgexperiment" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgexperiment.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16916" tag="operation_16916" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16917" tag="operation_16917" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_0" canDelete="false" classfield_id="144" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@return the value of mModelVector" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_1" canDelete="false" classfield_id="144" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@param value the value of mModelVector" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_2" canDelete="false" classfield_id="146" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@return the value of mLastPos" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_3" canDelete="false" classfield_id="146" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@param value the value of mLastPos" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="31" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="31" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="31" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="31" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="31" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="81" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="81" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="81" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="781" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="781" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="104" tag="operation_104" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add a new model to the experiment queue" />
         </header>
        </codeoperation>
        <codeoperation parent_id="107" tag="operation_107" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Start running the experiment " />
         </header>
        </codeoperation>
        <codeoperation parent_id="108" tag="operation_108" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Stop running anymore models" />
         </header>
        </codeoperation>
        <codeoperation parent_id="109" tag="operation_109" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The number of models to be run in the experiment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="110" tag="operation_110" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Clear the model queue for the experiment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="111" tag="operation_111" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remove all completed models from the queue" />
         </header>
        </codeoperation>
        <codeoperation parent_id="127" tag="operation_127" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a string representation of the whole experiment. Mainly intended for debugging purposes" />
         </header>
        </codeoperation>
        <codeoperation parent_id="130" tag="operation_130" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notify all observers how far the total experiment has progressed" />
         </header>
        </codeoperation>
        <codeoperation parent_id="134" tag="operation_134" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notify all listeners how far the creation of the current model has progressed" />
         </header>
        </codeoperation>
        <codeoperation parent_id="138" tag="operation_138" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notify all listeners how far the projection of the current model has progressed " />
         </header>
        </codeoperation>
        <codeoperation parent_id="16920" tag="operation_16920" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a model from experiment given its number" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16927" tag="operation_16927" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Tell the experiment which modeller adapter instance to use" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16931" tag="operation_16931" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notify all observers of the experiment size" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16939" tag="operation_16939" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notify listeners of a new log message" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16941" tag="hblock_tag_34" canDelete="false" classfield_id="16941" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@return the value of mpModellerPlugin" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16941" tag="hblock_tag_35" canDelete="false" classfield_id="16941" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@param value the value of mpModellerPlugin" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="81" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="81" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="781" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="781" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="781" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgexperiment.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The container for all the models in the queue" />
       </header>
       <ccfdeclarationcodeblock parent_id="144" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_0" canDelete="false" classfield_id="144" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@return the value of mModelVector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_1" canDelete="false" classfield_id="144" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@param value the value of mModelVector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position in the queue of the last model that was executed" />
       </header>
       <ccfdeclarationcodeblock parent_id="146" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_2" canDelete="false" classfield_id="146" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@return the value of mLastPos" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_3" canDelete="false" classfield_id="146" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@param value the value of mLastPos" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16941" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The adapter that will be used to run the models" />
       </header>
       <ccfdeclarationcodeblock parent_id="16941" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16941" tag="hblock_tag_34" canDelete="false" classfield_id="16941" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@return the value of mpModellerPlugin" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16941" tag="hblock_tag_35" canDelete="false" classfield_id="16941" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@param value the value of mpModellerPlugin" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="31" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="31" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="31" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="31" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="31" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="31" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="81" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="81" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="81" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="81" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="81" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="81" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="781" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="781" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="781" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="781" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="781" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="781" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="54" parent_class="54" fileExt=".cpp" fileName="omgmainwindow" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmainwindow.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="6453" tag="hblock_tag_0" canDelete="false" classfield_id="6453" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="6453" tag="hblock_tag_1" canDelete="false" classfield_id="6453" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7256" tag="hblock_tag_2" canDelete="false" classfield_id="7256" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7256" tag="hblock_tag_3" canDelete="false" classfield_id="7256" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7295" tag="hblock_tag_4" canDelete="false" classfield_id="7295" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7295" tag="hblock_tag_5" canDelete="false" classfield_id="7295" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7334" tag="hblock_tag_6" canDelete="false" classfield_id="7334" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7334" tag="hblock_tag_7" canDelete="false" classfield_id="7334" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7373" tag="hblock_tag_8" canDelete="false" classfield_id="7373" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7373" tag="hblock_tag_9" canDelete="false" classfield_id="7373" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7412" tag="hblock_tag_10" canDelete="false" classfield_id="7412" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7412" tag="hblock_tag_11" canDelete="false" classfield_id="7412" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7451" tag="hblock_tag_12" canDelete="false" classfield_id="7451" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7451" tag="hblock_tag_13" canDelete="false" classfield_id="7451" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7490" tag="hblock_tag_14" canDelete="false" classfield_id="7490" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7490" tag="hblock_tag_15" canDelete="false" classfield_id="7490" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7529" tag="hblock_tag_16" canDelete="false" classfield_id="7529" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7529" tag="hblock_tag_17" canDelete="false" classfield_id="7529" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7568" tag="hblock_tag_18" canDelete="false" classfield_id="7568" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7568" tag="hblock_tag_19" canDelete="false" classfield_id="7568" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="7987" tag="hblock_tag_20" canDelete="false" classfield_id="7987" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="7987" tag="hblock_tag_21" canDelete="false" classfield_id="7987" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8026" tag="hblock_tag_22" canDelete="false" classfield_id="8026" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8026" tag="hblock_tag_23" canDelete="false" classfield_id="8026" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8065" tag="hblock_tag_24" canDelete="false" classfield_id="8065" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8065" tag="hblock_tag_25" canDelete="false" classfield_id="8065" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8104" tag="hblock_tag_26" canDelete="false" classfield_id="8104" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8104" tag="hblock_tag_27" canDelete="false" classfield_id="8104" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8143" tag="hblock_tag_28" canDelete="false" classfield_id="8143" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8143" tag="hblock_tag_29" canDelete="false" classfield_id="8143" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8182" tag="hblock_tag_30" canDelete="false" classfield_id="8182" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8182" tag="hblock_tag_31" canDelete="false" classfield_id="8182" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8221" tag="hblock_tag_32" canDelete="false" classfield_id="8221" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8221" tag="hblock_tag_33" canDelete="false" classfield_id="8221" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8260" tag="hblock_tag_34" canDelete="false" classfield_id="8260" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8260" tag="hblock_tag_35" canDelete="false" classfield_id="8260" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="8299" tag="hblock_tag_36" canDelete="false" classfield_id="8299" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8299" tag="hblock_tag_37" canDelete="false" classfield_id="8299" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="4799" tag="operation_4799" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4831" tag="operation_4831" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4895" tag="operation_4895" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Log emitted from wizard when model is done&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5021" tag="operation_5021" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5241" tag="operation_5241" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5273" tag="operation_5273" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5305" tag="operation_5305" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5337" tag="operation_5337" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5369" tag="operation_5369" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5401" tag="operation_5401" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5433" tag="operation_5433" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5466" tag="operation_5466" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5500" tag="operation_5500" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5535" tag="operation_5535" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5571" tag="operation_5571" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5608" tag="operation_5608" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5646" tag="operation_5646" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6065" tag="operation_6065" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6104" tag="operation_6104" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6143" tag="operation_6143" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6182" tag="operation_6182" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6221" tag="operation_6221" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6260" tag="operation_6260" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmainwindow.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="6453" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="6453" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="6453" tag="hblock_tag_0" canDelete="false" classfield_id="6453" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="6453" tag="hblock_tag_1" canDelete="false" classfield_id="6453" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7256" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7256" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7256" tag="hblock_tag_2" canDelete="false" classfield_id="7256" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7256" tag="hblock_tag_3" canDelete="false" classfield_id="7256" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7295" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7295" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7295" tag="hblock_tag_4" canDelete="false" classfield_id="7295" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7295" tag="hblock_tag_5" canDelete="false" classfield_id="7295" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7334" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7334" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7334" tag="hblock_tag_6" canDelete="false" classfield_id="7334" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7334" tag="hblock_tag_7" canDelete="false" classfield_id="7334" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7373" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7373" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7373" tag="hblock_tag_8" canDelete="false" classfield_id="7373" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7373" tag="hblock_tag_9" canDelete="false" classfield_id="7373" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7412" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7412" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7412" tag="hblock_tag_10" canDelete="false" classfield_id="7412" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7412" tag="hblock_tag_11" canDelete="false" classfield_id="7412" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7451" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7451" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7451" tag="hblock_tag_12" canDelete="false" classfield_id="7451" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7451" tag="hblock_tag_13" canDelete="false" classfield_id="7451" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7490" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7490" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7490" tag="hblock_tag_14" canDelete="false" classfield_id="7490" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7490" tag="hblock_tag_15" canDelete="false" classfield_id="7490" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7529" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7529" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7529" tag="hblock_tag_16" canDelete="false" classfield_id="7529" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7529" tag="hblock_tag_17" canDelete="false" classfield_id="7529" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7568" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7568" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7568" tag="hblock_tag_18" canDelete="false" classfield_id="7568" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7568" tag="hblock_tag_19" canDelete="false" classfield_id="7568" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7987" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7987" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7987" tag="hblock_tag_20" canDelete="false" classfield_id="7987" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7987" tag="hblock_tag_21" canDelete="false" classfield_id="7987" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8026" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8026" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8026" tag="hblock_tag_22" canDelete="false" classfield_id="8026" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8026" tag="hblock_tag_23" canDelete="false" classfield_id="8026" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8065" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8065" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8065" tag="hblock_tag_24" canDelete="false" classfield_id="8065" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8065" tag="hblock_tag_25" canDelete="false" classfield_id="8065" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8104" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8104" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8104" tag="hblock_tag_26" canDelete="false" classfield_id="8104" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8104" tag="hblock_tag_27" canDelete="false" classfield_id="8104" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8143" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8143" tag="hblock_tag_28" canDelete="false" classfield_id="8143" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8143" tag="hblock_tag_29" canDelete="false" classfield_id="8143" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8182" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8182" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8182" tag="hblock_tag_30" canDelete="false" classfield_id="8182" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8182" tag="hblock_tag_31" canDelete="false" classfield_id="8182" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8221" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8221" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8221" tag="hblock_tag_32" canDelete="false" classfield_id="8221" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8221" tag="hblock_tag_33" canDelete="false" classfield_id="8221" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8260" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8260" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8260" tag="hblock_tag_34" canDelete="false" classfield_id="8260" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8260" tag="hblock_tag_35" canDelete="false" classfield_id="8260" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8299" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8299" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8299" tag="hblock_tag_36" canDelete="false" classfield_id="8299" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8299" tag="hblock_tag_37" canDelete="false" classfield_id="8299" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="55" parent_class="55" fileExt=".cpp" fileName="omgmodeldesigner" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmodeldesigner.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="14225" tag="operation_14225" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14232" tag="operation_14232" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="13241" tag="hblock_tag_0" canDelete="false" classfield_id="13241" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="13241" tag="hblock_tag_1" canDelete="false" classfield_id="13241" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="13286" tag="hblock_tag_2" canDelete="false" classfield_id="13286" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="13286" tag="hblock_tag_3" canDelete="false" classfield_id="13286" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="13330" tag="hblock_tag_4" canDelete="false" classfield_id="13330" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="13330" tag="hblock_tag_5" canDelete="false" classfield_id="13330" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="13374" tag="hblock_tag_6" canDelete="false" classfield_id="13374" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="13374" tag="hblock_tag_7" canDelete="false" classfield_id="13374" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="14246" tag="hblock_tag_8" canDelete="false" classfield_id="14246" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="14246" tag="hblock_tag_9" canDelete="false" classfield_id="14246" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="12379" tag="operation_12379" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12422" tag="operation_12422" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12465" tag="operation_12465" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12508" tag="operation_12508" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12551" tag="operation_12551" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12594" tag="operation_12594" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12637" tag="operation_12637" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12680" tag="operation_12680" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12723" tag="operation_12723" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12766" tag="operation_12766" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12852" tag="operation_12852" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return an experiment object that represents all the emodels to be processed" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14247" tag="operation_14247" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Checks to see if the input and output layers match.&amp;#010;@return bool True if layers are semantically equivalent." />
         </header>
        </codeoperation>
        <codeoperation parent_id="14248" tag="operation_14248" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14250" tag="operation_14250" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14251" tag="operation_14251" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14252" tag="operation_14252" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodeldesigner.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="13241" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13241" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13241" tag="hblock_tag_0" canDelete="false" classfield_id="13241" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13241" tag="hblock_tag_1" canDelete="false" classfield_id="13241" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13286" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13286" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13286" tag="hblock_tag_2" canDelete="false" classfield_id="13286" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13286" tag="hblock_tag_3" canDelete="false" classfield_id="13286" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13330" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13330" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13330" tag="hblock_tag_4" canDelete="false" classfield_id="13330" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13330" tag="hblock_tag_5" canDelete="false" classfield_id="13330" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13374" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13374" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13374" tag="hblock_tag_6" canDelete="false" classfield_id="13374" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13374" tag="hblock_tag_7" canDelete="false" classfield_id="13374" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14246" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14246" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14246" tag="hblock_tag_8" canDelete="false" classfield_id="14246" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14246" tag="hblock_tag_9" canDelete="false" classfield_id="14246" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="56" parent_class="56" fileExt=".cpp" fileName="omgalgorithmproperties" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgalgorithmproperties.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="8646" tag="hblock_tag_0" canDelete="false" classfield_id="8646" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="8646" tag="hblock_tag_1" canDelete="false" classfield_id="8646" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="9275" tag="hblock_tag_2" canDelete="false" classfield_id="9275" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="9275" tag="hblock_tag_3" canDelete="false" classfield_id="9275" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="9315" tag="hblock_tag_4" canDelete="false" classfield_id="9315" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="9315" tag="hblock_tag_5" canDelete="false" classfield_id="9315" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="9355" tag="hblock_tag_6" canDelete="false" classfield_id="9355" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="9355" tag="hblock_tag_7" canDelete="false" classfield_id="9355" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="9395" tag="hblock_tag_8" canDelete="false" classfield_id="9395" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="9395" tag="hblock_tag_9" canDelete="false" classfield_id="9395" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="8414" tag="operation_8414" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="8606" tag="operation_8606" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithmproperties.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="8646" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8646" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8646" tag="hblock_tag_0" canDelete="false" classfield_id="8646" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8646" tag="hblock_tag_1" canDelete="false" classfield_id="8646" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9275" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9275" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9275" tag="hblock_tag_2" canDelete="false" classfield_id="9275" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9275" tag="hblock_tag_3" canDelete="false" classfield_id="9275" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9315" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9315" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9315" tag="hblock_tag_4" canDelete="false" classfield_id="9315" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9315" tag="hblock_tag_5" canDelete="false" classfield_id="9315" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9355" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9355" tag="hblock_tag_6" canDelete="false" classfield_id="9355" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9355" tag="hblock_tag_7" canDelete="false" classfield_id="9355" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9395" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9395" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9395" tag="hblock_tag_8" canDelete="false" classfield_id="9395" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9395" tag="hblock_tag_9" canDelete="false" classfield_id="9395" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="57" parent_class="57" fileExt=".cpp" fileName="omgexperimentprogress" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgexperimentprogress.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="11909" tag="operation_11909" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="11995" tag="operation_11995" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12081" tag="operation_12081" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12167" tag="operation_12167" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgexperimentprogress.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="58" parent_class="58" fileExt=".cpp" fileName="omglayerselector" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omglayerselector.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="11149" tag="hblock_tag_0" canDelete="false" classfield_id="11149" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="11149" tag="hblock_tag_1" canDelete="false" classfield_id="11149" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="11234" tag="hblock_tag_2" canDelete="false" classfield_id="11234" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="11234" tag="hblock_tag_3" canDelete="false" classfield_id="11234" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="11277" tag="hblock_tag_4" canDelete="false" classfield_id="11277" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="11277" tag="hblock_tag_5" canDelete="false" classfield_id="11277" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="11320" tag="hblock_tag_6" canDelete="false" classfield_id="11320" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="11320" tag="hblock_tag_7" canDelete="false" classfield_id="11320" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="9630" tag="operation_9630" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9670" tag="operation_9670" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9710" tag="operation_9710" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9750" tag="operation_9750" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9791" tag="operation_9791" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9833" tag="operation_9833" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="10129" tag="operation_10129" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="10215" tag="operation_10215" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="10934" tag="operation_10934" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="11062" tag="operation_11062" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglayerselector.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="11149" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11149" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11149" tag="hblock_tag_0" canDelete="false" classfield_id="11149" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11149" tag="hblock_tag_1" canDelete="false" classfield_id="11149" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11234" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11234" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11234" tag="hblock_tag_2" canDelete="false" classfield_id="11234" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11234" tag="hblock_tag_3" canDelete="false" classfield_id="11234" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11277" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11277" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11277" tag="hblock_tag_4" canDelete="false" classfield_id="11277" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11277" tag="hblock_tag_5" canDelete="false" classfield_id="11277" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11320" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11320" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11320" tag="hblock_tag_6" canDelete="false" classfield_id="11320" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11320" tag="hblock_tag_7" canDelete="false" classfield_id="11320" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="125" parent_class="125" fileExt=".cpp" fileName="qvector" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qvector.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qvector.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="126" parent_class="126" fileExt=".cpp" fileName="qstring" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qstring.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="275" parent_class="275" fileExt=".cpp" fileName="qstringlist" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qstringlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qstringlist.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5147" parent_class="5147" fileExt=".cpp" fileName="qcloseevent" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qcloseevent.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qcloseevent.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="6376" parent_class="6376" fileExt=".cpp" fileName="qlabel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qlabel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qlabel.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="6568" parent_class="6568" fileExt=".cpp" fileName="qmenu" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qmenu.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qmenu.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="6607" parent_class="6607" fileExt=".cpp" fileName="qtoolbar" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qtoolbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qtoolbar.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="6684" parent_class="6684" fileExt=".cpp" fileName="qaction" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qaction.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qaction.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="10763" parent_class="10763" fileExt=".cpp" fileName="omggdal" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omggdal.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="14816" tag="operation_14816" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14817" tag="operation_14817" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="14818" tag="operation_14818" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14821" tag="operation_14821" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14823" tag="operation_14823" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A Qt style wrapper for gdal to convert from one file format to another.&amp;#010;@NOTE the output file name will be automatically determined by using the input file&amp;#010;name, and writing out a similarly named file with an appropriate extension.&amp;#010;@see FileType enum for the currently supported output file types&amp;#010;@param const QString theInputFile the name of the input file&amp;#010;@param const QString theOutputPath the name of the output folder&amp;#010;@param const FileType theFileType the type of the output file&amp;#010;@return const QString the name of the output file" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14828" tag="operation_14828" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A Qt style wrapper for gdal to resize a file.&amp;#010;@see FileType enum for the currently supported input file types&amp;#010;@param const QString theInputFile the name of the input file&amp;#010;@param const QString theOutputPath the name of the output folder&amp;#010;@param const int theWidth the width of output image&amp;#010;@param const int theHeight the height of output image&amp;#010;@return const QString the name of the output file&amp;#010;///  const QString gdalResize(const QString theFileName, const QString theOutputPath, const int theWidth, const int theHeight){};/** Get a list of supported GDAL datatype file filters.&amp;#010;  @NOTE THis method was copied over from QGIS QgsRasterLayer&amp;#010;  @param A reference to a string. This will be populated with the results.&amp;#010;  @return void" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14831" tag="operation_14831" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create contour lines from probability surface&amp;#010;Only the first raster band will be contoured.Contours are fixed at 10 unit increments.&amp;#010;@NOTE This method is based on the GDAL apps/gdal_contour.cpp sources&amp;#010;@param const QString theInputFile Gdal dataset to be contoured&amp;#010;@param const QString the name of the generated shapefile" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14833" tag="operation_14833" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Call the emitter a progress signal.&amp;#010;@NOTE We need this level of indirection to support gdal style call backs.&amp;#010;@see updateProgress" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14836" tag="operation_14836" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A simple test to see if a file is a valid gdal raster.&amp;#010;@param QString the name of the file to test&amp;#010;@return bool True if file is valid" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14838" tag="operation_14838" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A simple test to see if a gdal raster has a valid projection&amp;#010;@param QString the name of the file to test&amp;#010;@return bool True if file is valid" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14840" tag="operation_14840" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14842" tag="operation_14842" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emit a progress signal.&amp;#010;@NOTE should only ever be called using the showProgress method so we can properly &amp;#010;support gdal style callbacks&amp;#010;@see showProgress" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14845" tag="operation_14845" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14848" tag="operation_14848" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omggdal.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="13548" parent_class="13548" fileExt=".cpp" fileName="omgspatialreferencesystem" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgspatialreferencesystem.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="13769" tag="operation_13769" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13770" tag="operation_13770" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="13773" tag="operation_13773" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgspatialreferencesystem.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="14216" parent_class="14216" fileExt=".cpp" fileName="qdialog" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qdialog.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qdialog.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="14220" parent_class="14220" fileExt=".cpp" fileName="ui" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ui.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ui.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="14226" parent_class="14226" fileExt=".cpp" fileName="qwidget" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qwidget.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qwidget.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="qt" id="14230" parent_class="14230" fileExt=".cpp" fileName="wflags" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wflags.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wflags.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is qt&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="14253" parent_class="14253" fileExt=".cpp" fileName="qlistwidget" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qlistwidget.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qlistwidget.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="14808" parent_class="14808" fileExt=".cpp" fileName="qobject" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qobject.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16236" parent_class="16236" fileExt=".cpp" fileName="omgserialisable" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgserialisable.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16237" tag="operation_16237" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor ." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16238" tag="operation_16238" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Desctructor ." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16239" tag="operation_16239" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Write this object to xml and return result as qstring (virtual) ." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16240" tag="operation_16240" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Write this object to xml and return result as qstring (virtual).&amp;#010; We provide a basic default implementation where given a file name,&amp;#010; we will write the serialised xml to that file.&amp;#010;Internally it uses toXml() method above so that must be properly implemented." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16242" tag="operation_16242" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Read this object from xml and return result as true for success, false for failure (virtual)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16244" tag="operation_16244" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read this object from xml in a file and return result as true for success, false for failure.&amp;#010;Internally it uses fromXml(QString) method above so that must be properly implemented." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgserialisable.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16246" parent_class="16246" fileExt=".cpp" fileName="omgalgorithmset" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgalgorithmset.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16250" tag="operation_16250" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor ." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16251" tag="operation_16251" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Desctructor ." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16252" tag="operation_16252" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add a algorithm to the algorithmset&amp;#010;@see OmgAlgorithm " />
         </header>
        </codeoperation>
        <codeoperation parent_id="16254" tag="operation_16254" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remove a algorithm from the algorithmset&amp;#010;@see OmgAlgorithm" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16256" tag="operation_16256" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded method to remove a algorithm from &amp;#010;the algorithmset given only its algorithmame." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16258" tag="operation_16258" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Accessors///** The name of this algorithmset - in plain english" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16259" tag="operation_16259" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A description for the layerset e.g. including details like &amp;#010;hostname etc for remote services" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16260" tag="operation_16260" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Helper method to return a list of all the algorithm names." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16261" tag="operation_16261" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Mutators///** Set the algorithmSet Name&amp;#010;@see name()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16263" tag="operation_16263" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set a description for the algorithmset&amp;#010;@see description()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16265" tag="operation_16265" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Ancilliary helper methods///**&amp;#010;Retrun the count of algorithms in the algorithmset - excluding the mask" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16266" tag="operation_16266" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a string representation of this AlgorithmSet" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16267" tag="operation_16267" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return an xml representation of this AlgorithmSet&amp;#010;@see OmgSerialisable" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16268" tag="operation_16268" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialise this algorithmset from an xml representation of this AlgorithmSet&amp;#010;@see OmgSerialisable" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16270" tag="operation_16270" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return an html representation of this AlgorithmSet&amp;#010;e.g.&amp;#010;&lt;ul>&amp;#010; &lt;li for each algorithm >&amp;#010;&lt;/ul>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16271" tag="operation_16271" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Overloaded operators///** Overloaded [] operator so that OmgAlgorithmSet can be treated &amp;#010;like an array.&amp;#010;@param int thePosition - position of element to retrieve from the collection&amp;#010;@return OmgAlgorithm - the algorithm at this position" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16273" tag="hblock_tag_0" canDelete="false" classfield_id="16273" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16273" tag="hblock_tag_1" canDelete="false" classfield_id="16273" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16274" tag="hblock_tag_2" canDelete="false" classfield_id="16274" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16274" tag="hblock_tag_3" canDelete="false" classfield_id="16274" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16276" tag="hblock_tag_4" canDelete="false" classfield_id="16276" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16276" tag="hblock_tag_5" canDelete="false" classfield_id="16276" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithmset.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16273" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16273" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16273" tag="hblock_tag_0" canDelete="false" classfield_id="16273" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16273" tag="hblock_tag_1" canDelete="false" classfield_id="16273" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16274" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16274" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16274" tag="hblock_tag_2" canDelete="false" classfield_id="16274" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16274" tag="hblock_tag_3" canDelete="false" classfield_id="16274" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16276" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16276" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16276" tag="hblock_tag_4" canDelete="false" classfield_id="16276" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16276" tag="hblock_tag_5" canDelete="false" classfield_id="16276" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16277" parent_class="16277" fileExt=".cpp" fileName="omgclimatedataprocessor" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgclimatedataprocessor.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16278" tag="operation_16278" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16280" tag="operation_16280" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16281" tag="operation_16281" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method calculates the mean value over the quarter with the lowest values&amp;#010;(i.e. the three consecutive months with the minimum combined total)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16284" tag="operation_16284" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method calculates the mean value over the quarter with the highest values&amp;#010;(i.e. the three consecutive months with the maximum combined total)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16286" tag="operation_16286" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method returns the month that starts the quarter with the highest&amp;#010;average values" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16288" tag="operation_16288" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method returns the month that starts the quarter with the lowest&amp;#010;average values. For example, if 12 months were :&amp;#010;1   2   3   4   5   6   7   8   9   10  11  12&amp;#010;-----------------------------------------------&amp;#010;21 18  19  15   12  5   6   8   12  15  16  20&amp;#010;Then the return from this method would be 6 because&amp;#010;5,6 and 8 combined form the lowest quarter." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16290" tag="operation_16290" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method will return the mean over three months in&amp;#010;theClimateVector, starting at theStartMonth." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16293" tag="operation_16293" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Given an vector, this method will return the value of the smallest&amp;#010;element in the vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16295" tag="operation_16295" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Given an vector, this function will return the value of the largest element&amp;#010;in the vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16297" tag="operation_16297" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Given two arrays (e.g. min temp and max temp) range will determine&amp;#010;the smallest and largest values that occur and return the difference.&amp;#010;The function is indescriminate as to whether the values are in the same&amp;#010;month or not.&amp;#010;@see greatestMonthlyRange" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16300" tag="operation_16300" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Given two arrays (e.g. min temp and max temp) range will determine&amp;#010;the smallest and largest values that occur and return the difference.&amp;#010;The value of the max-min difference for a given month that is the&amp;#010;greatest is returned.&amp;#010;@see greatestTotalRange" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16303" tag="operation_16303" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This function will return the standard deviation of the climate vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16305" tag="operation_16305" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A new vector the same length as original will be returned when each element&amp;#010;of the input vector that is greater or equal to threshold will be true. Values&amp;#010;below threshold will be assigned false.&amp;#010;@param &amp;QVector &lt;float> A vector of float values&amp;#010;@param float the desired threshold&amp;#010;@return bool True on success otherwise something went wrong." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16309" tag="operation_16309" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded version of the above function.&amp;#010;If the input value  is greater or equal to threshold will be true. Values&amp;#010;below threshold will be assigned false.&amp;#010;@param float A vector of float values&amp;#010;@param float the desired threshold&amp;#010;@return bool True on success otherwise something went wrong." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16312" tag="operation_16312" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Determine the sum of a vector of values&amp;#010;&amp;#010;@param QVector &lt;float> values to be summed&amp;#010;@return float sum of values provided in input." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16314" tag="operation_16314" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This function will return the sum of theClimateVector divided by the&amp;#010;number of elements in theClimateVector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16316" tag="operation_16316" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This function will return the value of the element in theClimateVector&amp;#010;that corresponds to theMonth." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16319" tag="operation_16319" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This function will return an integer between 1 and 12 corresponding to&amp;#010;the month with the highest value." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16321" tag="operation_16321" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This function will return an integer between 1 and 12 corresponding to&amp;#010;the month with the lowest value." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16323" tag="operation_16323" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This function will return an integer in the range 0-12 representing&amp;#010;the number of months in theClimateVector where the value for that&amp;#010;month is above zero. Typically used to calculate how many months&amp;#010;in the year there are where the average temp is above freezing." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16325" tag="operation_16325" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This value will return the mean value of months in theClimateVector&amp;#010; where the corresponding months in theFrostArray have no frost free days." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16328" tag="hblock_tag_0" canDelete="false" classfield_id="16328" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16328" tag="hblock_tag_1" canDelete="false" classfield_id="16328" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatedataprocessor.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16328" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16328" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16328" tag="hblock_tag_0" canDelete="false" classfield_id="16328" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16328" tag="hblock_tag_1" canDelete="false" classfield_id="16328" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16329" parent_class="16329" fileExt=".cpp" fileName="omgclimatefilereader" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgclimatefilereader.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16347" tag="operation_16347" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="////   Public methods///** Default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16348" tag="operation_16348" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor (default ctor is in private section to stop progrmmers using it!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16351" tag="operation_16351" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16352" tag="operation_16352" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Setup the file reader &amp;#010;@param theFileNameString the name of the file to be read&amp;#010;@param theFileType the file format to be read&amp;#010;@return bool true on success" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16355" tag="operation_16355" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the next available element from the file matrix.&amp;#010;The cell index will be advanced by one.&amp;#010;@return float - the value at the element at the next cell." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16356" tag="operation_16356" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for long mCurrentElementNo.&amp;#010;Calculated as (currentRowLong * rows) + mCurrentColumn.&amp;#010;@return long - the current position in the current block." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16358" tag="operation_16358" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor property of long currentRowLong.&amp;#010;@return long - the current row position in the current block." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16359" tag="operation_16359" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor property of long mCurrentColumn.&amp;#010;@return long - the current row position in the current block." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16360" tag="operation_16360" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for the int mFileHeaderLines.&amp;#010;@return int - the number of header lines before each block" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16362" tag="operation_16362" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for int mActiveBlockNo.&amp;#010;It will move the file pointer too the start of the data block indicated&amp;#010;by the start month.&amp;#010;This is really only applicable for file formats that include&amp;#010;muliple months / years data in a single file such as Hadley SRES data.&amp;#010;@param theNewVal - an unsigned int representing the new start block.&amp;#010;@return bool - flag indicating success or failure" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16366" tag="operation_16366" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor of int mActiveBlockNo.&amp;#010;This is really only applicable for file formats that include&amp;#010;muliple months / years data in a single file such as Hadley SRES data.&amp;#010;@return bool - flag indicating success or failure" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16367" tag="operation_16367" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for bool endOfMatrixFlag.&amp;#010;@return bool - Current state of endOfMatrixFlag" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16369" tag="operation_16369" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for QString Filename.&amp;#010;@return QString - the current filename" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16370" tag="operation_16370" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of FileTypeEnum fileType.&amp;#010;@note The return type is OmgClimateFileReader::FileTypeEnum because the calling&amp;#010;class does not have the enum in its name space so we need to.&amp;#010;explicitly specifiy the namespace.&amp;#010;@return OmgClimateFileReader::FileTypeEnum - the file format of the current file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16372" tag="operation_16372" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of long mYDim." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16373" tag="operation_16373" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of long mXDim." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16374" tag="operation_16374" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of int mBlockHeaderLines." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16375" tag="operation_16375" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the various metadata stored for the open file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16376" tag="operation_16376" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of blockStartPos." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16377" tag="operation_16377" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Move the internal file pointer to the start of the file header." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16378" tag="operation_16378" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The number of blocks available in this file" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16379" tag="operation_16379" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Find out how many blocks (useful in multiblock formats such as SRES) are in this file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16380" tag="operation_16380" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A helper function to see if the block markers are correct.&amp;#010;The value of the first element in each block&amp;#010;will be printed to console on std out.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16381" tag="operation_16381" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A helper function to see if the block markers are correct.&amp;#010;The value of the last element in each block&amp;#010;will be printed to console on std out.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16382" tag="operation_16382" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A helper function to see if the block markers are correct.&amp;#010;The value of each block marker file seek position will be printed.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16383" tag="operation_16383" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A helper function to show a whole block.&amp;#010;@note This will likely be removed!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16385" tag="operation_16385" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16387" tag="operation_16387" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16389" tag="operation_16389" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator of FileTypeEnum fileType.&amp;#010;@note You should specify the file type BEFORE opening the file.&amp;#010;@param theNewVal - a FileTypeEnum specifying the input file type.&amp;#010;@return bool - flag indicating success or failure" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16391" tag="operation_16391" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Use the header info for a given file type to determine the&amp;#010;begining of the data block(s) and position the&amp;#010;blockStartPos there. This method will need to be called&amp;#010;explicitly by the client app so that when multiple&amp;#010;copies of the same file are being opened, we dont need to&amp;#010;do the same thing each time.&amp;#010;@param forceFlag - Force parsing file for block markers. By default this&amp;#010;is set to false and the file will only be parsed if an accompanying&amp;#010;.bmr file is found.&amp;#010;@return QVector &lt;int> - a qvalue vector contining a series of&amp;#010;file offsets (ulongs) which mark the start of each data block." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16394" tag="operation_16394" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A helper method for gdal reading to get a value into the correct type.&amp;#010;@param theData a scanline of data from gdal.&amp;#010;@param theType the gdal datatype of data in this scanline&amp;#010;@param theIndex Postion inthe scanline to read from.&amp;#010;@return float containing the value we read in" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16400" tag="hblock_tag_0" canDelete="false" classfield_id="16400" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@return the value of mMaxLineLength" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16400" tag="hblock_tag_1" canDelete="false" classfield_id="16400" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@param value the value of mMaxLineLength" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16401" tag="hblock_tag_2" canDelete="false" classfield_id="16401" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@return the value of mXDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16401" tag="hblock_tag_3" canDelete="false" classfield_id="16401" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@param value the value of mXDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16402" tag="hblock_tag_4" canDelete="false" classfield_id="16402" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@return the value of mYDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16402" tag="hblock_tag_5" canDelete="false" classfield_id="16402" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@param value the value of mYDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16403" tag="hblock_tag_6" canDelete="false" classfield_id="16403" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@return the value of mFileType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16403" tag="hblock_tag_7" canDelete="false" classfield_id="16403" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@param value the value of mFileType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16404" tag="hblock_tag_8" canDelete="false" classfield_id="16404" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@return the value of mFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16404" tag="hblock_tag_9" canDelete="false" classfield_id="16404" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@param value the value of mFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16405" tag="hblock_tag_10" canDelete="false" classfield_id="16405" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@return the value of mEndOfMatrixFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16405" tag="hblock_tag_11" canDelete="false" classfield_id="16405" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@param value the value of mEndOfMatrixFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16406" tag="hblock_tag_12" canDelete="false" classfield_id="16406" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@return the value of mActiveBlockNo" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16406" tag="hblock_tag_13" canDelete="false" classfield_id="16406" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@param value the value of mActiveBlockNo" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16407" tag="hblock_tag_14" canDelete="false" classfield_id="16407" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@return the value of mFileHeaderLines" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16407" tag="hblock_tag_15" canDelete="false" classfield_id="16407" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@param value the value of mFileHeaderLines" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16408" tag="hblock_tag_16" canDelete="false" classfield_id="16408" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@return the value of mCurrentColumn" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16408" tag="hblock_tag_17" canDelete="false" classfield_id="16408" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@param value the value of mCurrentColumn" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16409" tag="hblock_tag_18" canDelete="false" classfield_id="16409" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@return the value of mCurrentRow" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16409" tag="hblock_tag_19" canDelete="false" classfield_id="16409" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@param value the value of mCurrentRow" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16410" tag="hblock_tag_20" canDelete="false" classfield_id="16410" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@return the value of mCurrentElementNo" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16410" tag="hblock_tag_21" canDelete="false" classfield_id="16410" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@param value the value of mCurrentElementNo" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16413" tag="hblock_tag_22" canDelete="false" classfield_id="16413" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@return the value of mTextStream" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16413" tag="hblock_tag_23" canDelete="false" classfield_id="16413" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@param value the value of mTextStream" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16414" tag="hblock_tag_24" canDelete="false" classfield_id="16414" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@return the value of mBuffer" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16414" tag="hblock_tag_25" canDelete="false" classfield_id="16414" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@param value the value of mBuffer" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16417" tag="hblock_tag_26" canDelete="false" classfield_id="16417" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@return the value of mGdalDataset" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16417" tag="hblock_tag_27" canDelete="false" classfield_id="16417" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@param value the value of mGdalDataset" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16418" tag="hblock_tag_28" canDelete="false" classfield_id="16418" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@return the value of mBlockHeaderLines" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16418" tag="hblock_tag_29" canDelete="false" classfield_id="16418" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@param value the value of mBlockHeaderLines" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16419" tag="hblock_tag_30" canDelete="false" classfield_id="16419" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@return the value of mBlockStartPos" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16419" tag="hblock_tag_31" canDelete="false" classfield_id="16419" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@param value the value of mBlockStartPos" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16420" tag="hblock_tag_32" canDelete="false" classfield_id="16420" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@return the value of mBlockMarkersVector" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16420" tag="hblock_tag_33" canDelete="false" classfield_id="16420" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@param value the value of mBlockMarkersVector" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatefilereader.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16400" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="////   Private attributes///** This is a maximum length for lines that shall be skipped" />
       </header>
       <ccfdeclarationcodeblock parent_id="16400" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16400" tag="hblock_tag_0" canDelete="false" classfield_id="16400" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@return the value of mMaxLineLength" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16400" tag="hblock_tag_1" canDelete="false" classfield_id="16400" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@param value the value of mMaxLineLength" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16401" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is the xDim (columns) of a matrix for one month (files may contain more than one matrix)." />
       </header>
       <ccfdeclarationcodeblock parent_id="16401" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16401" tag="hblock_tag_2" canDelete="false" classfield_id="16401" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@return the value of mXDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16401" tag="hblock_tag_3" canDelete="false" classfield_id="16401" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@param value the value of mXDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16402" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of rows in matrix for one month / year" />
       </header>
       <ccfdeclarationcodeblock parent_id="16402" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16402" tag="hblock_tag_4" canDelete="false" classfield_id="16402" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@return the value of mYDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16402" tag="hblock_tag_5" canDelete="false" classfield_id="16402" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@param value the value of mYDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16403" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Type of file we are reading." />
       </header>
       <ccfdeclarationcodeblock parent_id="16403" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16403" tag="hblock_tag_6" canDelete="false" classfield_id="16403" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@return the value of mFileType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16403" tag="hblock_tag_7" canDelete="false" classfield_id="16403" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@param value the value of mFileType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16404" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the file, including full path if neccessary." />
       </header>
       <ccfdeclarationcodeblock parent_id="16404" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16404" tag="hblock_tag_8" canDelete="false" classfield_id="16404" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@return the value of mFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16404" tag="hblock_tag_9" canDelete="false" classfield_id="16404" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@param value the value of mFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Whether the file pointer has reached the end of the matrix" />
       </header>
       <ccfdeclarationcodeblock parent_id="16405" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16405" tag="hblock_tag_10" canDelete="false" classfield_id="16405" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@return the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16405" tag="hblock_tag_11" canDelete="false" classfield_id="16405" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@param value the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16406" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Block in file that matrix extraction should start at." />
       </header>
       <ccfdeclarationcodeblock parent_id="16406" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16406" tag="hblock_tag_12" canDelete="false" classfield_id="16406" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@return the value of mActiveBlockNo" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16406" tag="hblock_tag_13" canDelete="false" classfield_id="16406" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@param value the value of mActiveBlockNo" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16407" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of header lines specifically at start of file." />
       </header>
       <ccfdeclarationcodeblock parent_id="16407" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16407" tag="hblock_tag_14" canDelete="false" classfield_id="16407" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@return the value of mFileHeaderLines" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16407" tag="hblock_tag_15" canDelete="false" classfield_id="16407" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@param value the value of mFileHeaderLines" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16408" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Current column in the matrix" />
       </header>
       <ccfdeclarationcodeblock parent_id="16408" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16408" tag="hblock_tag_16" canDelete="false" classfield_id="16408" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@return the value of mCurrentColumn" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16408" tag="hblock_tag_17" canDelete="false" classfield_id="16408" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@param value the value of mCurrentColumn" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16409" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Current row in matrix" />
       </header>
       <ccfdeclarationcodeblock parent_id="16409" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16409" tag="hblock_tag_18" canDelete="false" classfield_id="16409" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@return the value of mCurrentRow" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16409" tag="hblock_tag_19" canDelete="false" classfield_id="16409" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@param value the value of mCurrentRow" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16410" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Position in the matrix expressed as (current row * cols) + current col" />
       </header>
       <ccfdeclarationcodeblock parent_id="16410" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16410" tag="hblock_tag_20" canDelete="false" classfield_id="16410" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@return the value of mCurrentElementNo" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16410" tag="hblock_tag_21" canDelete="false" classfield_id="16410" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@param value the value of mCurrentElementNo" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16413" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The text stream that will be used to pull data from the file" />
       </header>
       <ccfdeclarationcodeblock parent_id="16413" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16413" tag="hblock_tag_22" canDelete="false" classfield_id="16413" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@return the value of mTextStream" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16413" tag="hblock_tag_23" canDelete="false" classfield_id="16413" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@param value the value of mTextStream" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16414" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a buffer for holding read in lines" />
       </header>
       <ccfdeclarationcodeblock parent_id="16414" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16414" tag="hblock_tag_24" canDelete="false" classfield_id="16414" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@return the value of mBuffer" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16414" tag="hblock_tag_25" canDelete="false" classfield_id="16414" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@param value the value of mBuffer" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16417" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream" />
       </header>
       <ccfdeclarationcodeblock parent_id="16417" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16417" tag="hblock_tag_26" canDelete="false" classfield_id="16417" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@return the value of mGdalDataset" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16417" tag="hblock_tag_27" canDelete="false" classfield_id="16417" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@param value the value of mGdalDataset" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16418" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of header lines per month data block (applicable to files containing multiple months in a single file only." />
       </header>
       <ccfdeclarationcodeblock parent_id="16418" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16418" tag="hblock_tag_28" canDelete="false" classfield_id="16418" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@return the value of mBlockHeaderLines" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16418" tag="hblock_tag_29" canDelete="false" classfield_id="16418" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@param value the value of mBlockHeaderLines" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16419" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset." />
       </header>
       <ccfdeclarationcodeblock parent_id="16419" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16419" tag="hblock_tag_30" canDelete="false" classfield_id="16419" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@return the value of mBlockStartPos" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16419" tag="hblock_tag_31" canDelete="false" classfield_id="16419" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@param value the value of mBlockStartPos" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16420" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a vector  that stores the filepos for each  datablock in the fil" />
       </header>
       <ccfdeclarationcodeblock parent_id="16420" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16420" tag="hblock_tag_32" canDelete="false" classfield_id="16420" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@return the value of mBlockMarkersVector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16420" tag="hblock_tag_33" canDelete="false" classfield_id="16420" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@param value the value of mBlockMarkersVector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16363" parent_class="16363" fileExt=".cpp" fileName="unsigned int" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned int.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned int.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16397" parent_class="16397" fileExt=".cpp" fileName="gdaldatatype" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;gdaldatatype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        gdaldatatype.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="16412" parent_class="16412" fileExt=".cpp" fileName="ifstream" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ifstream.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ifstream.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="17063" parent_class="17063" fileExt=".cpp" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        string.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16415" parent_class="16415" fileExt=".cpp" fileName="gdaldataset" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;gdaldataset.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        gdaldataset.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16421" parent_class="16421" fileExt=".cpp" fileName="omgclimatefilegroup" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgclimatefilegroup.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16425" tag="operation_16425" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor for filegroup. Initialises the filereader vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16426" tag="operation_16426" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Desctructor - closes each file in the filereader vector and then destroys the vector." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16427" tag="operation_16427" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Close all files in the file group" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16428" tag="operation_16428" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add a new file reader object to the filegroup and position the fpos_t at the start of the data block " />
         </header>
        </codeoperation>
        <codeoperation parent_id="16431" tag="operation_16431" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the next element from each fileReader and return the result as a vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16432" tag="operation_16432" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Used to find out how meny files are in the file group &amp;#010;@return unsingned int representing the number of files int eh group." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16433" tag="operation_16433" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for the mElementCount property. This property tells us&amp;#010;how many cells in any one data block in a filereader exist.&amp;#010;@return int - The number of cells in a block of the first filereader." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16434" tag="operation_16434" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16435" tag="operation_16435" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16436" tag="operation_16436" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of bool mEndOfMatrixFlag." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16437" tag="operation_16437" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Move to the start of the active data block" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16438" tag="operation_16438" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16440" tag="operation_16440" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16444" tag="hblock_tag_0" canDelete="false" classfield_id="16444" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@return the value of mReaderVector" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16444" tag="hblock_tag_1" canDelete="false" classfield_id="16444" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@param value the value of mReaderVector" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16445" tag="hblock_tag_2" canDelete="false" classfield_id="16445" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mElementCount" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16445" tag="hblock_tag_3" canDelete="false" classfield_id="16445" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mElementCount" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16446" tag="hblock_tag_4" canDelete="false" classfield_id="16446" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mXDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16446" tag="hblock_tag_5" canDelete="false" classfield_id="16446" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mXDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16447" tag="hblock_tag_6" canDelete="false" classfield_id="16447" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mYDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16447" tag="hblock_tag_7" canDelete="false" classfield_id="16447" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mYDim" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16448" tag="hblock_tag_8" canDelete="false" classfield_id="16448" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@return the value of mEndOfMatrixFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16448" tag="hblock_tag_9" canDelete="false" classfield_id="16448" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@param value the value of mEndOfMatrixFlag" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatefilegroup.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16444" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is the container for all the file readers in this group." />
       </header>
       <ccfdeclarationcodeblock parent_id="16444" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16444" tag="hblock_tag_0" canDelete="false" classfield_id="16444" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@return the value of mReaderVector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16444" tag="hblock_tag_1" canDelete="false" classfield_id="16444" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@param value the value of mReaderVector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16445" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="16445" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16445" tag="hblock_tag_2" canDelete="false" classfield_id="16445" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mElementCount" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16445" tag="hblock_tag_3" canDelete="false" classfield_id="16445" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mElementCount" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16446" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="16446" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16446" tag="hblock_tag_4" canDelete="false" classfield_id="16446" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mXDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16446" tag="hblock_tag_5" canDelete="false" classfield_id="16446" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mXDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16447" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="16447" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16447" tag="hblock_tag_6" canDelete="false" classfield_id="16447" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mYDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16447" tag="hblock_tag_7" canDelete="false" classfield_id="16447" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mYDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16448" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this." />
       </header>
       <ccfdeclarationcodeblock parent_id="16448" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16448" tag="hblock_tag_8" canDelete="false" classfield_id="16448" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@return the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16448" tag="hblock_tag_9" canDelete="false" classfield_id="16448" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@param value the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16449" parent_class="16449" fileExt=".cpp" fileName="omgfilewriter" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgfilewriter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16454" tag="operation_16454" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16455" tag="operation_16455" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;@param theFileName - a QString containing the name of the output file.&amp;#010;@param theFileFormat - the output format as defined in FileType.&amp;#010;@see FileType" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16458" tag="operation_16458" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16459" tag="operation_16459" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Write a float element to the output file.&amp;#010;@param theElementFloat - the variable that is to be written off to file.&amp;#010;@return bool - indicating success or failure of the write operation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16461" tag="operation_16461" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Write a ouput nodata element to the output file.&amp;#010;@return bool - indicating success or failure of the write operation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16462" tag="operation_16462" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Write a header to the output file.&amp;#010;@param theString - the variable that is to be written off to file.&amp;#010;@return bool - indicating successor failure of the write operation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16464" tag="operation_16464" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of QString fileNameString.&amp;#010;@return QString - containing the name of the file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16465" tag="operation_16465" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Close the currently open file.&amp;#010;@return bool - indicating successor failure of the close operation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16466" tag="operation_16466" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method sends a line break to the output file.&amp;#010;@return bool - indicating successor failure of the write operation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16467" tag="operation_16467" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16468" tag="operation_16468" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16469" tag="operation_16469" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16471" tag="operation_16471" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for input no data value" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16473" tag="operation_16473" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for output no data value" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16476" tag="hblock_tag_0" canDelete="false" classfield_id="16476" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@return the value of mFile" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16476" tag="hblock_tag_1" canDelete="false" classfield_id="16476" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@param value the value of mFile" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16478" tag="hblock_tag_2" canDelete="false" classfield_id="16478" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@return the value of mTextStream" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16478" tag="hblock_tag_3" canDelete="false" classfield_id="16478" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@param value the value of mTextStream" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16479" tag="hblock_tag_4" canDelete="false" classfield_id="16479" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@return the value of seperatorString" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16479" tag="hblock_tag_5" canDelete="false" classfield_id="16479" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@param value the value of seperatorString" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16480" tag="hblock_tag_6" canDelete="false" classfield_id="16480" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@return the value of fileNameString" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16480" tag="hblock_tag_7" canDelete="false" classfield_id="16480" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@param value the value of fileNameString" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16481" tag="hblock_tag_8" canDelete="false" classfield_id="16481" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@return the value of isWriteableFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16481" tag="hblock_tag_9" canDelete="false" classfield_id="16481" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@param value the value of isWriteableFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16482" tag="hblock_tag_10" canDelete="false" classfield_id="16482" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@return the value of mInputNoData" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16482" tag="hblock_tag_11" canDelete="false" classfield_id="16482" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@param value the value of mInputNoData" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16483" tag="hblock_tag_12" canDelete="false" classfield_id="16483" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@return the value of mOutputNoData" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16483" tag="hblock_tag_13" canDelete="false" classfield_id="16483" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@param value the value of mOutputNoData" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgfilewriter.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16476" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file handle containing our output data matrix." />
       </header>
       <ccfdeclarationcodeblock parent_id="16476" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16476" tag="hblock_tag_0" canDelete="false" classfield_id="16476" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@return the value of mFile" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16476" tag="hblock_tag_1" canDelete="false" classfield_id="16476" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@param value the value of mFile" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16478" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A text stream associated with the output file that&amp;#010;will be used when writing data to the file." />
       </header>
       <ccfdeclarationcodeblock parent_id="16478" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16478" tag="hblock_tag_2" canDelete="false" classfield_id="16478" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@return the value of mTextStream" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16478" tag="hblock_tag_3" canDelete="false" classfield_id="16478" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@param value the value of mTextStream" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16479" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The separater that will be used between each&amp;#010; value as its written to file" />
       </header>
       <ccfdeclarationcodeblock parent_id="16479" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16479" tag="hblock_tag_4" canDelete="false" classfield_id="16479" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@return the value of seperatorString" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16479" tag="hblock_tag_5" canDelete="false" classfield_id="16479" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@param value the value of seperatorString" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16480" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The filename that is being written to" />
       </header>
       <ccfdeclarationcodeblock parent_id="16480" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16480" tag="hblock_tag_6" canDelete="false" classfield_id="16480" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@return the value of fileNameString" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16480" tag="hblock_tag_7" canDelete="false" classfield_id="16480" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@param value the value of fileNameString" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16481" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false." />
       </header>
       <ccfdeclarationcodeblock parent_id="16481" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16481" tag="hblock_tag_8" canDelete="false" classfield_id="16481" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@return the value of isWriteableFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16481" tag="hblock_tag_9" canDelete="false" classfield_id="16481" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@param value the value of isWriteableFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16482" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The no data value that may be passed in to write element" />
       </header>
       <ccfdeclarationcodeblock parent_id="16482" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16482" tag="hblock_tag_10" canDelete="false" classfield_id="16482" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@return the value of mInputNoData" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16482" tag="hblock_tag_11" canDelete="false" classfield_id="16482" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@param value the value of mInputNoData" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16483" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The no data value that should be written out by write element" />
       </header>
       <ccfdeclarationcodeblock parent_id="16483" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16483" tag="hblock_tag_12" canDelete="false" classfield_id="16483" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@return the value of mOutputNoData" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16483" tag="hblock_tag_13" canDelete="false" classfield_id="16483" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@param value the value of mOutputNoData" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16475" parent_class="16475" fileExt=".cpp" fileName="qfile" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qfile.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qfile.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16477" parent_class="16477" fileExt=".cpp" fileName="qtextstream" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qtextstream.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qtextstream.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16484" parent_class="16484" fileExt=".cpp" fileName="omgfilewriterstruct" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgfilewriterstruct.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="16486" tag="hblock_tag_0" canDelete="false" classfield_id="16486" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@return the value of fileWriter" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16486" tag="hblock_tag_1" canDelete="false" classfield_id="16486" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@param value the value of fileWriter" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16487" tag="hblock_tag_2" canDelete="false" classfield_id="16487" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@return the value of fullFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16487" tag="hblock_tag_3" canDelete="false" classfield_id="16487" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@param value the value of fullFileName" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgfilewriterstruct.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16486" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filewriter pointer" />
       </header>
       <ccfdeclarationcodeblock parent_id="16486" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16486" tag="hblock_tag_0" canDelete="false" classfield_id="16486" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@return the value of fileWriter" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16486" tag="hblock_tag_1" canDelete="false" classfield_id="16486" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@param value the value of fileWriter" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16487" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The fill path and file name of the file refenced" />
       </header>
       <ccfdeclarationcodeblock parent_id="16487" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16487" tag="hblock_tag_2" canDelete="false" classfield_id="16487" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@return the value of fullFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16487" tag="hblock_tag_3" canDelete="false" classfield_id="16487" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@param value the value of fullFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16488" parent_class="16488" fileExt=".cpp" fileName="omgclimatedataprocessorcontroller" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgclimatedataprocessorcontroller.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16492" tag="operation_16492" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16493" tag="operation_16493" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="OmgClimateDataProcessorController(&amp;#010;int theFileStartYear,&amp;#010;int theJobStartYear,&amp;#010;int theJobEndYear,&amp;#010;QString theInputFileTypeString,&amp;#010;QString theOutputFileTypeString&amp;#010;);&amp;#010;" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16494" tag="operation_16494" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="// Getters and setters/** Mutator for filename of the meanTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16496" tag="operation_16496" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the meanTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16497" tag="operation_16497" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the minTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16499" tag="operation_16499" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the minTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16500" tag="operation_16500" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the maxTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16502" tag="operation_16502" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the maxTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16503" tag="operation_16503" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the diurnalTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16505" tag="operation_16505" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the diurnalTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16506" tag="operation_16506" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the mean precipitation calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16508" tag="operation_16508" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the mean precipitation calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16509" tag="operation_16509" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the frost days calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16511" tag="operation_16511" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the frost days calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16512" tag="operation_16512" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the solar radiation calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16514" tag="operation_16514" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the solar radiation calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16515" tag="operation_16515" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for filename of the wind speed calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16517" tag="operation_16517" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for filename of the wind speed calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16518" tag="operation_16518" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for directory name for the calculation output files.&amp;#010;@param theFilePathString - The name of an existing directory where the&amp;#010;output files will be stored.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16520" tag="operation_16520" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for the file output path.&amp;#010;@return a QString containing the directory name." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16521" tag="operation_16521" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for int fileStartYear.&amp;#010;@param theYear - The year of the first 12 blocks of data&amp;#010;in the file (or the 12 files if the files are in series).&amp;#010;@return void - No return.&amp;#010;@note If the files are in series, jobStartYear should be the same as&amp;#010;fileStartYear and jobEndYear!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16523" tag="operation_16523" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for int fileStartYear." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16524" tag="operation_16524" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for int setJobStartYear.&amp;#010;@param theYear - The first year in the input file(s) to be read.&amp;#010;@return void - No return.&amp;#010;@note If the files are in series, jobStartYear should be the same as&amp;#010;fileStartYear and jobEndYear!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16526" tag="operation_16526" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for int jobStartYear.&amp;#010;@return int - the current value of the first year in the input&amp;#010;files to be read." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16527" tag="operation_16527" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for int jobEndYear.&amp;#010;@param theYear - The last year in the input file(s) to be read.&amp;#010;@return void - No return&amp;#010;@note If the files are in series, jobStartYear should be the same as&amp;#010;fileStartYear and jobEndYear!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16529" tag="operation_16529" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for int jobEndYear.&amp;#010;@return int - the current value of the last year in the input&amp;#010;files to be read." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16530" tag="operation_16530" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator forOmgClimateFileReader::FileType inputFileType.&amp;#010;@param theInputFileType - The input filetype as specified inOmgClimateFileReader::FileType&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16532" tag="operation_16532" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator forOmgClimateFileReader::FileType inputFileType.&amp;#010;This is an overloaded version of above that takes a string and looks up the enum.&amp;#010;@param theInputFileTypeString - The input filetype as a string. Valid options being:&amp;#010;CRES African climate data&amp;#010;ESRI &amp; ASCII raster&amp;#010;Hadley Centre HadCM3 SRES Scenario&amp;#010;Hadley Centre HadCM3 IS92a Scenario&amp;#010;IPCC Observed Climatology&amp;#010;University of Reading Palaeoclimate data&amp;#010;Max Planck Institute fur Meteorologie (MPIfM) ECHAM4 data&amp;#010;CSIRO-Mk2 Model data&amp;#010;National Center for Atmospheric Research (NCAR) NCAR-CSM and NCAR-PCM data&amp;#010;Geophysical Fluid Dynamics Laboratory (GFDL) R30 Model data&amp;#010;Canadian Center for Climate Modelling and Analysis (CCCma) CGCM2 Model data&amp;#010;CCSR/NIES AGCM model data and CCSR OGCM model data&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16534" tag="operation_16534" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor forOmgClimateFileReader::FileType inputFileType.&amp;#010;@return aOmgClimateFileReader::FileType indicating the current input file type." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16535" tag="operation_16535" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for OmgFileWriter::FileType outputFileType.&amp;#010;This will determine how outputs from calculations will be written to disk.&amp;#010;@param theOutputFileType - a  OmgFileWriter::FileType value&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16538" tag="operation_16538" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for OmgFileWriter::FileType outputFileType.&amp;#010;Overloaded version of above that takes a string and looks up the enum.&amp;#010;@param theOutputFileTypeString - a QString containing the desired output file type.&amp;#010;Valid options include:&amp;#010;CSM for Matlab&amp;#010;CSM for Octave&amp;#010;Desktop GARP&amp;#010;ESRI ASCII Grid&amp;#010;Plain matrix with no header&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16540" tag="operation_16540" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for OmgFileWriter::FileType outputFileType.&amp;#010;@return OmgFileWriter::FileType - the current output file type" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16541" tag="operation_16541" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set up the filegroups for each filename that has been registered&amp;#010;@return bool - A boolean indicating success or failure of the operation" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16542" tag="operation_16542" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Build a list of which calculations can be performed given the input files&amp;#010;   that have been registered. The boolean field indicates whether the user actually&amp;#010;   want to perform this calculation&amp;#010;   @see addUserCalculation" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16543" tag="operation_16543" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for the list of available calculations.&amp;#010;@return QMap&lt;QString, bool>  - wherethe string is the name of the calculation and&amp;#010;bool indicates true if the user has asked for the calculation to be carried out,&amp;#010;false if he hasnt." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16546" tag="operation_16546" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add a calculation to the list of those requested to be carried out by the user.&amp;#010;The available availableCalculationsMap will be searched for a string match, and&amp;#010;if a match is found that map entry will be tagged as true - 'please calculate'&amp;#010;if it is currently false.&amp;#010;@param theCalculationName - the name of the calculation to be enabled.&amp;#010;@return bool - Returns false if no matching calculation name is found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16548" tag="operation_16548" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Start the data analysis process.&amp;#010;When everything else is set up, this is the method to call!&amp;#010;@todo If there ever was a good place to optimise performance,&amp;#010;this is it!For starters this method can be refactored so that the&amp;#010;vector from each active filegroup is retrieved first, and then&amp;#010;passed to any calculation that needs it, looping through all the filegroups&amp;#010;simultaneously. This will prevent multiple reads of the same file for&amp;#010;different calculations. RTFS for more info.&amp;#010;@return bool - A boolean indicating success or failure of the operation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16549" tag="operation_16549" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This is a helper method that will return a Description of the OmgClimateDataProcessorController vars.&amp;#010;This will indicate things like whether the files are in series or not, what calculations&amp;#010;are available in the available calculations map, and whether they are tagged true for&amp;#010;execution or not.&amp;#010;@return QString - containing the summary description for this climatedataprocessor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16550" tag="operation_16550" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for bool filesInSeriesFlag.&amp;#010;When files are in series, it means that the file format only contains one months&amp;#010;data block per file and that there should be 12 such files to provide monthly&amp;#010;data for an entire year. The files should be suffixed with the month numer they&amp;#010;represent e.g.&amp;#010;meanTemp01.asc&amp;#010;meanTemp02.asc&amp;#010;meanTemp03.asc&amp;#010;meanTemp04.asc&amp;#010;meanTemp05.asc&amp;#010;meanTemp06.asc&amp;#010;meanTemp07.asc&amp;#010;meanTemp08.asc&amp;#010;meanTemp09.asc&amp;#010;meanTemp10.asc&amp;#010;meanTemp11.asc&amp;#010;meanTemp12.asc&amp;#010;@param theFlag - a flag indicating true if files are in series, otherwise false.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16552" tag="operation_16552" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for bool filesInSeriesFlag.&amp;#010;@see setFilesInSeriesFlag&amp;#010;@return bool - true if files are in series." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16553" tag="operation_16553" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="If the output format requires a header (e.g. Arc/Info ASCII grid, you can&amp;#010;define one using this method.&amp;#010;@param theOutputHeader - a QString containing the new header.&amp;#010;@return void - No return." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16556" tag="operation_16556" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Accessor for QString outputHeader.&amp;#010;@return QString - the currently set file header." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16557" tag="operation_16557" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A signal emitted to notify listeners how many variables&amp;#010;are going to be calculated for each years data.&amp;#010;@param theNumber - The total number of variables&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16559" tag="operation_16559" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A signal emitted to notify listeners how many cells&amp;#010;will be passed through in each block.&amp;#010;@param theNumber - The total number of cells in any block&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16561" tag="operation_16561" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A signal emitted to notify listeners that we are about to&amp;#010;start calculating a variable for one years data.&amp;#010;@param theName - A String containing the variable name e.g.&amp;#010;                       'Precipitation over coolest month'&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16563" tag="operation_16563" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A signal emitted to notify listeners that we&amp;#010;completed calculating the given variable.&amp;#010;@param theFileName - the filename that the variable was outputted to&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16565" tag="operation_16565" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A signal emitted to notify listeners that we&amp;#010;have completed calculating a given cell.&amp;#010;@param theResult - The calculated value for a cell&amp;#010;@return void - No return" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16567" tag="operation_16567" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="// Private methods/** This method is intended for debugging purposes only" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16570" tag="operation_16570" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set up an individual file group (called by makefileGroups for&amp;#010;  each filegroup that needs to be initialised)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16574" tag="operation_16574" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This is a private method. It is a simple method to populate the&amp;#010;inputFileTypeMap attribute - this will usually be called by the&amp;#010;constructor(s). All keys (file type strings) will be  stored in upper case" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16575" tag="operation_16575" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This is a private method. It is a simple method to populate the&amp;#010;outputFileTypeMap attribute - this will usually be called by the&amp;#010;constructor(s). All keys (file type strings) will be  stored in upper case" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16576" tag="operation_16576" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Little utility method to convert from int to string" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16578" tag="hblock_tag_0" canDelete="false" classfield_id="16578" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@return the value of outputFilePath" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16578" tag="hblock_tag_1" canDelete="false" classfield_id="16578" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@param value the value of outputFilePath" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16579" tag="hblock_tag_2" canDelete="false" classfield_id="16579" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@return the value of inputFileType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16579" tag="hblock_tag_3" canDelete="false" classfield_id="16579" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@param value the value of inputFileType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16580" tag="hblock_tag_4" canDelete="false" classfield_id="16580" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@return the value of outputFileType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16580" tag="hblock_tag_5" canDelete="false" classfield_id="16580" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@param value the value of outputFileType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16582" tag="hblock_tag_6" canDelete="false" classfield_id="16582" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of inputFileTypeMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16582" tag="hblock_tag_7" canDelete="false" classfield_id="16582" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of inputFileTypeMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16584" tag="hblock_tag_8" canDelete="false" classfield_id="16584" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of outputFileTypeMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16584" tag="hblock_tag_9" canDelete="false" classfield_id="16584" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of outputFileTypeMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16585" tag="hblock_tag_10" canDelete="false" classfield_id="16585" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@return the value of availableCalculationsMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16585" tag="hblock_tag_11" canDelete="false" classfield_id="16585" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@param value the value of availableCalculationsMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16586" tag="hblock_tag_12" canDelete="false" classfield_id="16586" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@return the value of meanTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16586" tag="hblock_tag_13" canDelete="false" classfield_id="16586" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@param value the value of meanTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16587" tag="hblock_tag_14" canDelete="false" classfield_id="16587" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16587" tag="hblock_tag_15" canDelete="false" classfield_id="16587" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16588" tag="hblock_tag_16" canDelete="false" classfield_id="16588" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@return the value of minTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16588" tag="hblock_tag_17" canDelete="false" classfield_id="16588" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@param value the value of minTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16589" tag="hblock_tag_18" canDelete="false" classfield_id="16589" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of minTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16589" tag="hblock_tag_19" canDelete="false" classfield_id="16589" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of minTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16590" tag="hblock_tag_20" canDelete="false" classfield_id="16590" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@return the value of maxTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16590" tag="hblock_tag_21" canDelete="false" classfield_id="16590" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@param value the value of maxTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16591" tag="hblock_tag_22" canDelete="false" classfield_id="16591" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of maxTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16591" tag="hblock_tag_23" canDelete="false" classfield_id="16591" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of maxTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16592" tag="hblock_tag_24" canDelete="false" classfield_id="16592" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@return the value of diurnalTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16592" tag="hblock_tag_25" canDelete="false" classfield_id="16592" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@param value the value of diurnalTempFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16593" tag="hblock_tag_26" canDelete="false" classfield_id="16593" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of diurnalTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16593" tag="hblock_tag_27" canDelete="false" classfield_id="16593" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of diurnalTempFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16594" tag="hblock_tag_28" canDelete="false" classfield_id="16594" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@return the value of meanPrecipFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16594" tag="hblock_tag_29" canDelete="false" classfield_id="16594" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@param value the value of meanPrecipFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16595" tag="hblock_tag_30" canDelete="false" classfield_id="16595" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanPrecipFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16595" tag="hblock_tag_31" canDelete="false" classfield_id="16595" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanPrecipFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16596" tag="hblock_tag_32" canDelete="false" classfield_id="16596" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@return the value of frostDaysFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16596" tag="hblock_tag_33" canDelete="false" classfield_id="16596" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@param value the value of frostDaysFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16597" tag="hblock_tag_34" canDelete="false" classfield_id="16597" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of frostDaysFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16597" tag="hblock_tag_35" canDelete="false" classfield_id="16597" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of frostDaysFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16598" tag="hblock_tag_36" canDelete="false" classfield_id="16598" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@return the value of totalSolarRadFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16598" tag="hblock_tag_37" canDelete="false" classfield_id="16598" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@param value the value of totalSolarRadFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16599" tag="hblock_tag_38" canDelete="false" classfield_id="16599" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of totalSolarRadFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16599" tag="hblock_tag_39" canDelete="false" classfield_id="16599" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of totalSolarRadFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16600" tag="hblock_tag_40" canDelete="false" classfield_id="16600" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@return the value of windSpeedFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16600" tag="hblock_tag_41" canDelete="false" classfield_id="16600" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@param value the value of windSpeedFileGroup" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16601" tag="hblock_tag_42" canDelete="false" classfield_id="16601" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of windSpeedFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16601" tag="hblock_tag_43" canDelete="false" classfield_id="16601" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of windSpeedFileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16602" tag="hblock_tag_44" canDelete="false" classfield_id="16602" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@return the value of filesInSeriesFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16602" tag="hblock_tag_45" canDelete="false" classfield_id="16602" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@param value the value of filesInSeriesFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16603" tag="hblock_tag_46" canDelete="false" classfield_id="16603" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@return the value of outputHeader" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16603" tag="hblock_tag_47" canDelete="false" classfield_id="16603" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@param value the value of outputHeader" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatedataprocessorcontroller.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16578" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="// Private attributes/** The directory where the processed results will be stored." />
       </header>
       <ccfdeclarationcodeblock parent_id="16578" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16578" tag="hblock_tag_0" canDelete="false" classfield_id="16578" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@return the value of outputFilePath" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16578" tag="hblock_tag_1" canDelete="false" classfield_id="16578" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@param value the value of outputFilePath" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16579" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The type of input files to be processed by the climate date processor." />
       </header>
       <ccfdeclarationcodeblock parent_id="16579" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16579" tag="hblock_tag_2" canDelete="false" classfield_id="16579" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@return the value of inputFileType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16579" tag="hblock_tag_3" canDelete="false" classfield_id="16579" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@param value the value of inputFileType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16580" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The type of output files to be produced by the climate date processor." />
       </header>
       <ccfdeclarationcodeblock parent_id="16580" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16580" tag="hblock_tag_4" canDelete="false" classfield_id="16580" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@return the value of outputFileType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16580" tag="hblock_tag_5" canDelete="false" classfield_id="16580" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@param value the value of outputFileType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16582" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
       </header>
       <ccfdeclarationcodeblock parent_id="16582" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16582" tag="hblock_tag_6" canDelete="false" classfield_id="16582" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of inputFileTypeMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16582" tag="hblock_tag_7" canDelete="false" classfield_id="16582" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of inputFileTypeMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16584" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
       </header>
       <ccfdeclarationcodeblock parent_id="16584" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16584" tag="hblock_tag_8" canDelete="false" classfield_id="16584" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of outputFileTypeMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16584" tag="hblock_tag_9" canDelete="false" classfield_id="16584" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of outputFileTypeMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16585" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation" />
       </header>
       <ccfdeclarationcodeblock parent_id="16585" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16585" tag="hblock_tag_10" canDelete="false" classfield_id="16585" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@return the value of availableCalculationsMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16585" tag="hblock_tag_11" canDelete="false" classfield_id="16585" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@param value the value of availableCalculationsMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16586" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with mean temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16586" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16586" tag="hblock_tag_12" canDelete="false" classfield_id="16586" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@return the value of meanTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16586" tag="hblock_tag_13" canDelete="false" classfield_id="16586" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@param value the value of meanTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16587" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16587" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16587" tag="hblock_tag_14" canDelete="false" classfield_id="16587" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16587" tag="hblock_tag_15" canDelete="false" classfield_id="16587" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16588" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with minimum temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16588" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16588" tag="hblock_tag_16" canDelete="false" classfield_id="16588" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@return the value of minTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16588" tag="hblock_tag_17" canDelete="false" classfield_id="16588" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@param value the value of minTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16589" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16589" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16589" tag="hblock_tag_18" canDelete="false" classfield_id="16589" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of minTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16589" tag="hblock_tag_19" canDelete="false" classfield_id="16589" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of minTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16590" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with maximum temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16590" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16590" tag="hblock_tag_20" canDelete="false" classfield_id="16590" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@return the value of maxTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16590" tag="hblock_tag_21" canDelete="false" classfield_id="16590" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@param value the value of maxTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16591" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16591" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16591" tag="hblock_tag_22" canDelete="false" classfield_id="16591" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of maxTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16591" tag="hblock_tag_23" canDelete="false" classfield_id="16591" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of maxTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16592" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with diurnal temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16592" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16592" tag="hblock_tag_24" canDelete="false" classfield_id="16592" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@return the value of diurnalTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16592" tag="hblock_tag_25" canDelete="false" classfield_id="16592" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@param value the value of diurnalTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16593" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16593" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16593" tag="hblock_tag_26" canDelete="false" classfield_id="16593" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of diurnalTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16593" tag="hblock_tag_27" canDelete="false" classfield_id="16593" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of diurnalTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16594" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with mean precipitation data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16594" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16594" tag="hblock_tag_28" canDelete="false" classfield_id="16594" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@return the value of meanPrecipFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16594" tag="hblock_tag_29" canDelete="false" classfield_id="16594" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@param value the value of meanPrecipFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16595" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16595" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16595" tag="hblock_tag_30" canDelete="false" classfield_id="16595" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanPrecipFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16595" tag="hblock_tag_31" canDelete="false" classfield_id="16595" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanPrecipFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16596" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with number of frost days data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16596" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16596" tag="hblock_tag_32" canDelete="false" classfield_id="16596" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@return the value of frostDaysFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16596" tag="hblock_tag_33" canDelete="false" classfield_id="16596" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@param value the value of frostDaysFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16597" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16597" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16597" tag="hblock_tag_34" canDelete="false" classfield_id="16597" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of frostDaysFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16597" tag="hblock_tag_35" canDelete="false" classfield_id="16597" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of frostDaysFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16598" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with solar radiation data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16598" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16598" tag="hblock_tag_36" canDelete="false" classfield_id="16598" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@return the value of totalSolarRadFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16598" tag="hblock_tag_37" canDelete="false" classfield_id="16598" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@param value the value of totalSolarRadFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16599" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16599" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16599" tag="hblock_tag_38" canDelete="false" classfield_id="16599" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of totalSolarRadFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16599" tag="hblock_tag_39" canDelete="false" classfield_id="16599" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of totalSolarRadFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16600" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with wind speed data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16600" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16600" tag="hblock_tag_40" canDelete="false" classfield_id="16600" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@return the value of windSpeedFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16600" tag="hblock_tag_41" canDelete="false" classfield_id="16600" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@param value the value of windSpeedFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16601" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16601" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16601" tag="hblock_tag_42" canDelete="false" classfield_id="16601" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of windSpeedFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16601" tag="hblock_tag_43" canDelete="false" classfield_id="16601" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of windSpeedFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16602" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file." />
       </header>
       <ccfdeclarationcodeblock parent_id="16602" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16602" tag="hblock_tag_44" canDelete="false" classfield_id="16602" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@return the value of filesInSeriesFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16602" tag="hblock_tag_45" canDelete="false" classfield_id="16602" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@param value the value of filesInSeriesFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16603" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a standard header (e.g. arc/info header) that will be appended to any output grids." />
       </header>
       <ccfdeclarationcodeblock parent_id="16603" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16603" tag="hblock_tag_46" canDelete="false" classfield_id="16603" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@return the value of outputHeader" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16603" tag="hblock_tag_47" canDelete="false" classfield_id="16603" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@param value the value of outputHeader" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16544" parent_class="16544" fileExt=".cpp" fileName="qmap" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qmap.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16604" parent_class="16604" fileExt=".cpp" fileName="omgclimateimporter" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgclimateimporter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16608" tag="operation_16608" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16609" tag="operation_16609" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16610" tag="operation_16610" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Import a Climate file &amp;#010;Output files will have the same name suffix as input file, with a numerical&amp;#010;suffix for each monthly block.&amp;#010;@note if an errror occurs, an empty QStringList or partially filled QStringList &amp;#010;will be returned (and an error will be emitted)&amp;#010;@param theInputFile A valid hadley climate data file&amp;#010;@param theOutputDir The directory where the output files will be generated.&amp;#010;@param theFileType The type of climate file to process&amp;#010;@return a QStringList containing the list of output file names." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16614" tag="operation_16614" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16616" tag="operation_16616" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16618" tag="operation_16618" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emit a progress signal.&amp;#010;@NOTE should only ever be called using the showProgress method so we can properly &amp;#010;support gdal style callbacks&amp;#010;@see showProgress" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16621" tag="operation_16621" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Pass an error received on up to any listening qobjects" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16623" tag="operation_16623" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Pass an error received on up to any listening qobjects" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimateimporter.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16625" parent_class="16625" fileExt=".cpp" fileName="omglayer" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omglayer.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16629" tag="operation_16629" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor ." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16630" tag="operation_16630" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Desctructor ." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16631" tag="operation_16631" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="copy constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16634" tag="operation_16634" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Assignement operator" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16641" tag="operation_16641" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Accessors///** The name of this layer - usually a full pathname and file name though this&amp;#010;may vary depending on the OmgModellerAdapter implementations" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16642" tag="operation_16642" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Whether this layer represents categorical data in discrete cless or&amp;#010;a continuous surface" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16643" tag="operation_16643" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The type of this layer. &amp;#010;Note that type 'FORMAT' is used when specifying the output cellsize &amp;#010;and extents for a model. " />
         </header>
        </codeoperation>
        <codeoperation parent_id="16644" tag="operation_16644" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Mutators///** Set the layerName&amp;#010;@see name()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16646" tag="operation_16646" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the categorical flag&amp;#010;@see isCategorical()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16648" tag="operation_16648" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the layer type&amp;#010;@see layerType()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16650" tag="operation_16650" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return an xml representation of this layer&amp;#010;@NOTE this class is not fully serialiseable (yet??)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16651" tag="operation_16651" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16653" tag="hblock_tag_0" canDelete="false" classfield_id="16653" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@return the value of mCategoricalFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16653" tag="hblock_tag_1" canDelete="false" classfield_id="16653" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@param value the value of mCategoricalFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16654" tag="hblock_tag_2" canDelete="false" classfield_id="16654" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@return the value of mName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16654" tag="hblock_tag_3" canDelete="false" classfield_id="16654" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@param value the value of mName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16655" tag="hblock_tag_4" canDelete="false" classfield_id="16655" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@return the value of mType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16655" tag="hblock_tag_5" canDelete="false" classfield_id="16655" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@param value the value of mType" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglayer.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16653" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag to store whehter this layer contains categorical or continuous data" />
       </header>
       <ccfdeclarationcodeblock parent_id="16653" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16653" tag="hblock_tag_0" canDelete="false" classfield_id="16653" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@return the value of mCategoricalFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16653" tag="hblock_tag_1" canDelete="false" classfield_id="16653" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@param value the value of mCategoricalFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16654" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name for this layer - usually a full path and filename" />
       </header>
       <ccfdeclarationcodeblock parent_id="16654" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16654" tag="hblock_tag_2" canDelete="false" classfield_id="16654" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@return the value of mName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16654" tag="hblock_tag_3" canDelete="false" classfield_id="16654" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@param value the value of mName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16655" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The type / role of this layer - mask / map / output format specifier" />
       </header>
       <ccfdeclarationcodeblock parent_id="16655" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16655" tag="hblock_tag_4" canDelete="false" classfield_id="16655" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@return the value of mType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16655" tag="hblock_tag_5" canDelete="false" classfield_id="16655" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@param value the value of mType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16656" parent_class="16656" fileExt=".cpp" fileName="omglayerset" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omglayerset.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16660" tag="operation_16660" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor ." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16661" tag="operation_16661" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Desctructor ." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16662" tag="operation_16662" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add a layer to the layerset&amp;#010;@see OmgLayer " />
         </header>
        </codeoperation>
        <codeoperation parent_id="16664" tag="operation_16664" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remove a layer from the layerset&amp;#010;@see OmgLayer" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16666" tag="operation_16666" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded method to remove a layer from &amp;#010;the layerset given only its layername." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16668" tag="operation_16668" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Accessors///** The name of this layer - usually a full pathname and file name though this&amp;#010;may vary depending on the OmgModellerAdapter implementations" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16669" tag="operation_16669" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16670" tag="operation_16670" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16671" tag="operation_16671" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Helper method to return a name list of all the &amp;#010;non mask layer names." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16672" tag="operation_16672" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Mutators///** Set the layerSet Name&amp;#010;@see name()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16674" tag="operation_16674" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set a description for the layerset&amp;#010;@see description()" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16676" tag="operation_16676" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the mask layer for this layerset.&amp;#010;A mask is defined by the non null cells in a gdal dataset." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16678" tag="operation_16678" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Ancilliary helper methods///**&amp;#010;Return the name of the mask layer" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16679" tag="operation_16679" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Retrun the count of layers in the layerset - excluding the mask" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16680" tag="operation_16680" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a string representation of this LayerSet" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16681" tag="operation_16681" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return an xml representation of this LayerSet&amp;#010;@see OmgSerialisable" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16682" tag="operation_16682" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialise this layerset from an xml representation of this LayerSet&amp;#010;@see OmgSerialisable" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16684" tag="operation_16684" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return an html representation of this LayerSet&amp;#010;e.g.&amp;#010;&lt;ul>&amp;#010; &lt;li for each layer >&amp;#010;&lt;/ul>" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16685" tag="hblock_tag_0" canDelete="false" classfield_id="16685" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16685" tag="hblock_tag_1" canDelete="false" classfield_id="16685" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16686" tag="hblock_tag_2" canDelete="false" classfield_id="16686" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16686" tag="hblock_tag_3" canDelete="false" classfield_id="16686" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16687" tag="hblock_tag_4" canDelete="false" classfield_id="16687" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16687" tag="hblock_tag_5" canDelete="false" classfield_id="16687" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16689" tag="hblock_tag_6" canDelete="false" classfield_id="16689" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16689" tag="hblock_tag_7" canDelete="false" classfield_id="16689" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglayerset.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16685" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16685" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16685" tag="hblock_tag_0" canDelete="false" classfield_id="16685" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16685" tag="hblock_tag_1" canDelete="false" classfield_id="16685" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16686" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16686" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16686" tag="hblock_tag_2" canDelete="false" classfield_id="16686" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16686" tag="hblock_tag_3" canDelete="false" classfield_id="16686" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16687" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16687" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16687" tag="hblock_tag_4" canDelete="false" classfield_id="16687" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16687" tag="hblock_tag_5" canDelete="false" classfield_id="16687" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16689" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16689" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16689" tag="hblock_tag_6" canDelete="false" classfield_id="16689" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16689" tag="hblock_tag_7" canDelete="false" classfield_id="16689" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16691" parent_class="16691" fileExt=".cpp" fileName="omglocality" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omglocality.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16692" tag="operation_16692" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16693" tag="operation_16693" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16694" tag="operation_16694" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// accessors///** GSet the label / description of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16695" tag="operation_16695" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the latitude of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16696" tag="operation_16696" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the longitude of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16697" tag="operation_16697" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the samples of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16698" tag="operation_16698" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//// Mutators///** Set the label / description of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16700" tag="operation_16700" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the latitude of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16702" tag="operation_16702" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the longitude of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16704" tag="operation_16704" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the samples of this locality" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16706" tag="operation_16706" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//helper functions" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16707" tag="operation_16707" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16708" tag="operation_16708" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="16709" tag="hblock_tag_0" canDelete="false" classfield_id="16709" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mLabel&amp;#010;A label for the locality.&amp;#010;@return the value of mLabel" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16709" tag="hblock_tag_1" canDelete="false" classfield_id="16709" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mLabel&amp;#010;A label for the locality.&amp;#010;@param value the value of mLabel" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16710" tag="hblock_tag_2" canDelete="false" classfield_id="16710" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mLatitude&amp;#010;The Latitud&amp;#010;@return the value of mLatitude" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16710" tag="hblock_tag_3" canDelete="false" classfield_id="16710" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mLatitude&amp;#010;The Latitud&amp;#010;@param value the value of mLatitude" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16711" tag="hblock_tag_4" canDelete="false" classfield_id="16711" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mLongitude&amp;#010;The Longitude&amp;#010;@return the value of mLongitude" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16711" tag="hblock_tag_5" canDelete="false" classfield_id="16711" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mLongitude&amp;#010;The Longitude&amp;#010;@param value the value of mLongitude" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16712" tag="hblock_tag_6" canDelete="false" classfield_id="16712" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@return the value of mSamples" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16712" tag="hblock_tag_7" canDelete="false" classfield_id="16712" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@param value the value of mSamples" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglocality.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16709" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A label for the locality." />
       </header>
       <ccfdeclarationcodeblock parent_id="16709" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16709" tag="hblock_tag_0" canDelete="false" classfield_id="16709" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mLabel&amp;#010;A label for the locality.&amp;#010;@return the value of mLabel" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16709" tag="hblock_tag_1" canDelete="false" classfield_id="16709" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mLabel&amp;#010;A label for the locality.&amp;#010;@param value the value of mLabel" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16710" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Latitud" />
       </header>
       <ccfdeclarationcodeblock parent_id="16710" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16710" tag="hblock_tag_2" canDelete="false" classfield_id="16710" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mLatitude&amp;#010;The Latitud&amp;#010;@return the value of mLatitude" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16710" tag="hblock_tag_3" canDelete="false" classfield_id="16710" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mLatitude&amp;#010;The Latitud&amp;#010;@param value the value of mLatitude" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16711" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Longitude" />
       </header>
       <ccfdeclarationcodeblock parent_id="16711" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16711" tag="hblock_tag_4" canDelete="false" classfield_id="16711" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mLongitude&amp;#010;The Longitude&amp;#010;@return the value of mLongitude" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16711" tag="hblock_tag_5" canDelete="false" classfield_id="16711" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mLongitude&amp;#010;The Longitude&amp;#010;@param value the value of mLongitude" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16712" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model." />
       </header>
       <ccfdeclarationcodeblock parent_id="16712" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16712" tag="hblock_tag_6" canDelete="false" classfield_id="16712" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@return the value of mSamples" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16712" tag="hblock_tag_7" canDelete="false" classfield_id="16712" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@param value the value of mSamples" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16713" parent_class="16713" fileExt=".cpp" fileName="omglocalities" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omglocalities.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglocalities.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16750" parent_class="16750" fileExt=".cpp" fileName="qdatetime" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qdatetime.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qdatetime.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16872" parent_class="16872" fileExt=".cpp" fileName="omgmodellerplugininterface" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmodellerplugininterface.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16881" tag="operation_16881" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16882" tag="operation_16882" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16885" tag="operation_16885" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16886" tag="operation_16886" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16889" tag="operation_16889" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16891" tag="operation_16891" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16892" tag="operation_16892" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a collection of algorithm objects in the form of an AgorithmSet.&amp;#010;The collection represents every algorithm that is available from the&amp;#010;plugin implementing this interface&amp;#010;@return OmgAlgorithmSet - a set of algorithms" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16894" tag="operation_16894" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16896" tag="operation_16896" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16898" tag="operation_16898" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the name of this plugin instance - useful for displaying the plugin name in guis etc &amp;#010;@return QString with a user friendly name e.g. 'Local Modeller Plugin'" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16899" tag="operation_16899" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16901" tag="operation_16901" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16904" tag="operation_16904" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners that the currently running model is finished &amp;#010;@param theFilename of the completed model. If the model was &amp;#010;executed on a remote server the plugin will ensure that it is copied &amp;#010;to the local file system first.&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16907" tag="operation_16907" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners how far the current model CREATION has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress &amp;#010;@see setCreationProgress(int theProgress)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16910" tag="operation_16910" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners how far the current model PROJECTION has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress &amp;#010;@see setProjectionProgress(int theProgress)" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerplugininterface.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16977" parent_class="16977" fileExt=".cpp" fileName="omgmeridianswitcher" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmeridianswitcher.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="16981" tag="operation_16981" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16982" tag="operation_16982" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="16983" tag="operation_16983" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Dis waar die kak aangejaag word...." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16986" tag="operation_16986" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16988" tag="operation_16988" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmeridianswitcher.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="16990" parent_class="16990" fileExt=".cpp" fileName="omgomlogcallback" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgomlogcallback.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="17053" tag="operation_17053" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17054" tag="operation_17054" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17056" tag="operation_17056" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17057" tag="operation_17057" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor for log call back required to fit the om callback pattern.&amp;#010;@note Although the call back needs a text stream in the ctor, &amp;#010;all we want is to get the msg.c_str() &amp;#010;from the logger, so having the textstream is just so that we fit the &amp;#010;g_log callback model, but its not actually used anywhere&amp;#010;@param QTextStream a text stream - not actually used anywhere!" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17060" tag="operation_17060" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloading the () operator is required because om uses this approach&amp;#010;to push out log messages. We will simplyg capture the passed in message&amp;#010;and emit it as a QString that any connected classes can then use.&amp;#010;@note the log level parameter passed in by om is ignored at this time.&amp;#010;@param Log::Level the log level (ie urgency) of the message&amp;#010;@param string the message passed to us from om&amp;#010;@return void " />
         </header>
        </codeoperation>
        <codeoperation parent_id="17066" tag="operation_17066" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Signal passed on from here to other qt derived classes with the log message from om" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgomlogcallback.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17048" parent_class="17048" fileExt=".cpp" fileName="log" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;log.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        log.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17068" parent_class="17068" fileExt=".cpp" fileName="omgscrapergbif" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgscrapergbif.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="17072" tag="operation_17072" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17074" tag="operation_17074" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17075" tag="operation_17075" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17078" tag="operation_17078" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17079" tag="operation_17079" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17080" tag="operation_17080" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17085" tag="operation_17085" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17087" tag="operation_17087" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17089" tag="operation_17089" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17091" tag="operation_17091" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17093" tag="operation_17093" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//! Let user be aware of a change in status" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17095" tag="operation_17095" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="first part of the request is to find out the id of the species as used in gbif &amp;#010;@return A url of where the page containing data can be acquired" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17097" tag="operation_17097" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//!a parser to pull localities out of a web page //" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="17099" tag="hblock_tag_0" canDelete="false" classfield_id="17099" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17099" tag="hblock_tag_1" canDelete="false" classfield_id="17099" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17100" tag="hblock_tag_2" canDelete="false" classfield_id="17100" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17100" tag="hblock_tag_3" canDelete="false" classfield_id="17100" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17101" tag="hblock_tag_4" canDelete="false" classfield_id="17101" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17101" tag="hblock_tag_5" canDelete="false" classfield_id="17101" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="17102" tag="operation_17102" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//private methods" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17104" tag="operation_17104" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create an output text file.&amp;#010;@note Takes a shapefile name, strips the .shp off and saves a text file .txt" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgscrapergbif.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17099" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17099" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17099" tag="hblock_tag_0" canDelete="false" classfield_id="17099" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17099" tag="hblock_tag_1" canDelete="false" classfield_id="17099" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17100" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17100" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17100" tag="hblock_tag_2" canDelete="false" classfield_id="17100" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17100" tag="hblock_tag_3" canDelete="false" classfield_id="17100" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17101" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17101" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17101" tag="hblock_tag_4" canDelete="false" classfield_id="17101" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17101" tag="hblock_tag_5" canDelete="false" classfield_id="17101" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17109" parent_class="17109" fileExt=".cpp" fileName="qurl" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qurl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qurl.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17110" parent_class="17110" fileExt=".cpp" fileName="qhttp" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qhttp.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qhttp.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17111" parent_class="17111" fileExt=".cpp" fileName="omgwebpagefetcher" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgwebpagefetcher.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="17115" tag="operation_17115" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17117" tag="operation_17117" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17118" tag="operation_17118" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17119" tag="operation_17119" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17121" tag="operation_17121" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17123" tag="operation_17123" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17127" tag="operation_17127" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17130" tag="operation_17130" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17131" tag="operation_17131" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17133" tag="operation_17133" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="17135" tag="hblock_tag_0" canDelete="false" classfield_id="17135" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17135" tag="hblock_tag_1" canDelete="false" classfield_id="17135" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17136" tag="hblock_tag_2" canDelete="false" classfield_id="17136" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17136" tag="hblock_tag_3" canDelete="false" classfield_id="17136" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17137" tag="hblock_tag_4" canDelete="false" classfield_id="17137" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17137" tag="hblock_tag_5" canDelete="false" classfield_id="17137" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17138" tag="hblock_tag_6" canDelete="false" classfield_id="17138" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17138" tag="hblock_tag_7" canDelete="false" classfield_id="17138" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17139" tag="hblock_tag_8" canDelete="false" classfield_id="17139" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17139" tag="hblock_tag_9" canDelete="false" classfield_id="17139" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17140" tag="hblock_tag_10" canDelete="false" classfield_id="17140" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17140" tag="hblock_tag_11" canDelete="false" classfield_id="17140" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17141" tag="hblock_tag_12" canDelete="false" classfield_id="17141" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17141" tag="hblock_tag_13" canDelete="false" classfield_id="17141" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17142" tag="hblock_tag_14" canDelete="false" classfield_id="17142" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17142" tag="hblock_tag_15" canDelete="false" classfield_id="17142" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17143" tag="hblock_tag_16" canDelete="false" classfield_id="17143" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17143" tag="hblock_tag_17" canDelete="false" classfield_id="17143" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17144" tag="hblock_tag_18" canDelete="false" classfield_id="17144" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17144" tag="hblock_tag_19" canDelete="false" classfield_id="17144" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17145" tag="hblock_tag_20" canDelete="false" classfield_id="17145" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17145" tag="hblock_tag_21" canDelete="false" classfield_id="17145" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="17146" tag="operation_17146" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="//private methods" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17148" tag="operation_17148" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgwebpagefetcher.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17135" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17135" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17135" tag="hblock_tag_0" canDelete="false" classfield_id="17135" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17135" tag="hblock_tag_1" canDelete="false" classfield_id="17135" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17136" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17136" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17136" tag="hblock_tag_2" canDelete="false" classfield_id="17136" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17136" tag="hblock_tag_3" canDelete="false" classfield_id="17136" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17137" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17137" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17137" tag="hblock_tag_4" canDelete="false" classfield_id="17137" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17137" tag="hblock_tag_5" canDelete="false" classfield_id="17137" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17138" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17138" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17138" tag="hblock_tag_6" canDelete="false" classfield_id="17138" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17138" tag="hblock_tag_7" canDelete="false" classfield_id="17138" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17139" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17139" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17139" tag="hblock_tag_8" canDelete="false" classfield_id="17139" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17139" tag="hblock_tag_9" canDelete="false" classfield_id="17139" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17140" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17140" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17140" tag="hblock_tag_10" canDelete="false" classfield_id="17140" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17140" tag="hblock_tag_11" canDelete="false" classfield_id="17140" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17141" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17141" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17141" tag="hblock_tag_12" canDelete="false" classfield_id="17141" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17141" tag="hblock_tag_13" canDelete="false" classfield_id="17141" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17142" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17142" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17142" tag="hblock_tag_14" canDelete="false" classfield_id="17142" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17142" tag="hblock_tag_15" canDelete="false" classfield_id="17142" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17143" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17143" tag="hblock_tag_16" canDelete="false" classfield_id="17143" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17143" tag="hblock_tag_17" canDelete="false" classfield_id="17143" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17144" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17144" tag="hblock_tag_18" canDelete="false" classfield_id="17144" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17144" tag="hblock_tag_19" canDelete="false" classfield_id="17144" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17145" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17145" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17145" tag="hblock_tag_20" canDelete="false" classfield_id="17145" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17145" tag="hblock_tag_21" canDelete="false" classfield_id="17145" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17124" parent_class="17124" fileExt=".cpp" fileName="qhttpresponseheader" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qhttpresponseheader.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qhttpresponseheader.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17149" parent_class="17149" fileExt=".cpp" fileName="shpinfo" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;shpinfo.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shpinfo.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17151" parent_class="17151" fileExt=".cpp" fileName="shpobject" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;shpobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shpobject.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17152" parent_class="17152" fileExt=".cpp" fileName="shptreenode" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;shptreenode.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shptreenode.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17153" parent_class="17153" fileExt=".cpp" fileName="shptree" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;shptree.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shptree.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17154" parent_class="17154" fileExt=".cpp" fileName="dbfinfo" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;dbfinfo.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        dbfinfo.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17156" parent_class="17156" fileExt=".cpp" fileName="dbffieldtype" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;dbffieldtype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        dbffieldtype.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17157" parent_class="17157" fileExt=".cpp" fileName="shapefilemaker" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;shapefilemaker.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="17158" tag="operation_17158" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17160" tag="operation_17160" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17164" tag="operation_17164" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17165" tag="operation_17165" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17167" tag="operation_17167" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17169" tag="operation_17169" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17173" tag="operation_17173" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17178" tag="operation_17178" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17182" tag="operation_17182" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17189" tag="operation_17189" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17194" tag="operation_17194" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="17198" tag="hblock_tag_0" canDelete="false" classfield_id="17198" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@return the value of mDbfHandle" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17198" tag="hblock_tag_1" canDelete="false" classfield_id="17198" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@param value the value of mDbfHandle" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17199" tag="hblock_tag_2" canDelete="false" classfield_id="17199" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@return the value of mShapeHandle" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17199" tag="hblock_tag_3" canDelete="false" classfield_id="17199" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@param value the value of mShapeHandle" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17200" tag="hblock_tag_4" canDelete="false" classfield_id="17200" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@return the value of mCurrentRecInt" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17200" tag="hblock_tag_5" canDelete="false" classfield_id="17200" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@param value the value of mCurrentRecInt" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shapefilemaker.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17198" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="handle for dBase file" />
       </header>
       <ccfdeclarationcodeblock parent_id="17198" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17198" tag="hblock_tag_0" canDelete="false" classfield_id="17198" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@return the value of mDbfHandle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17198" tag="hblock_tag_1" canDelete="false" classfield_id="17198" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@param value the value of mDbfHandle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17199" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="handle for shape files .shx and .shp" />
       </header>
       <ccfdeclarationcodeblock parent_id="17199" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17199" tag="hblock_tag_2" canDelete="false" classfield_id="17199" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@return the value of mShapeHandle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17199" tag="hblock_tag_3" canDelete="false" classfield_id="17199" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@param value the value of mShapeHandle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17200" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="current record number" />
       </header>
       <ccfdeclarationcodeblock parent_id="17200" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17200" tag="hblock_tag_4" canDelete="false" classfield_id="17200" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@return the value of mCurrentRecInt" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17200" tag="hblock_tag_5" canDelete="false" classfield_id="17200" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@param value the value of mCurrentRecInt" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="17018" parent_class="17018" fileExt=".cpp" fileName="wktmap" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wktmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wktmap.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29450" parent_class="29450" fileExt=".cpp" fileName="omgmodellerdummyplugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmodellerdummyplugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="29454" tag="operation_29454" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29456" tag="operation_29456" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The default constructor is private so that no one can use it!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29457" tag="operation_29457" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29459" tag="operation_29459" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="29460" tag="operation_29460" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29462" tag="operation_29462" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29464" tag="operation_29464" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29465" tag="operation_29465" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29466" tag="operation_29466" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29468" tag="operation_29468" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29470" tag="operation_29470" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29471" tag="operation_29471" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29473" tag="operation_29473" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29475" tag="operation_29475" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners that the currently running model is finished &amp;#010;@param theFilename of the completed model. If the model was &amp;#010;executed on a remote server the plugin will ensure that it is copied &amp;#010;to the local file system first.&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29477" tag="operation_29477" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners how far the current model has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress " />
         </header>
        </codeoperation>
        <codeoperation parent_id="29479" tag="operation_29479" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Private method called by any ctor on initial start up. &amp;#010;It will go and find the algorithm list etc." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="29480" tag="hblock_tag_0" canDelete="false" classfield_id="29480" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29480" tag="hblock_tag_1" canDelete="false" classfield_id="29480" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29481" tag="hblock_tag_2" canDelete="false" classfield_id="29481" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29481" tag="hblock_tag_3" canDelete="false" classfield_id="29481" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerdummyplugin.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29480" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29480" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29480" tag="hblock_tag_0" canDelete="false" classfield_id="29480" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29480" tag="hblock_tag_1" canDelete="false" classfield_id="29480" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29481" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29481" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29481" tag="hblock_tag_2" canDelete="false" classfield_id="29481" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29481" tag="hblock_tag_3" canDelete="false" classfield_id="29481" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29482" parent_class="29482" fileExt=".cpp" fileName="openmodeller" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;openmodeller.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        openmodeller.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29483" parent_class="29483" fileExt=".cpp" fileName="omgmodellerlocalplugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmodellerlocalplugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="29487" tag="operation_29487" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29489" tag="operation_29489" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The default constructor is private so that no one can use it!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29490" tag="operation_29490" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29492" tag="operation_29492" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="29493" tag="operation_29493" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29495" tag="operation_29495" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29497" tag="operation_29497" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29498" tag="operation_29498" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a collection of algorithm objects in the form of an AgorithmSet.&amp;#010;The collection represents every algorithm that is available from the&amp;#010;plugin implementing this interface&amp;#010;@return OmgAlgorithmSet - a set of algorithms" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29499" tag="operation_29499" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29501" tag="operation_29501" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29503" tag="operation_29503" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for creation progress variable&amp;#010;Mainly intended to be used by callbacks.&amp;#010;Will emit a modelCreationProgressUpdate signal if the&amp;#010;new value differs from the old one.&amp;#010;@param int theProgress" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29505" tag="operation_29505" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Mutator for projection progress variable&amp;#010;Mainly intended to be used by callbacks.&amp;#010;Will emit a modelCreationProgressUpdate signal if the&amp;#010;new value differs from the old one.&amp;#010;@param int theProgress" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29507" tag="operation_29507" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29508" tag="operation_29508" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29510" tag="operation_29510" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29512" tag="operation_29512" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Private method called by any ctor on initial start up. &amp;#010;It will go and find the algorithm list etc." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="29514" tag="hblock_tag_0" canDelete="false" classfield_id="29514" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29514" tag="hblock_tag_1" canDelete="false" classfield_id="29514" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29515" tag="hblock_tag_2" canDelete="false" classfield_id="29515" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29515" tag="hblock_tag_3" canDelete="false" classfield_id="29515" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29516" tag="hblock_tag_4" canDelete="false" classfield_id="29516" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mModelProgress&amp;#010;//as %&amp;#010;@return the value of mModelProgress" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29516" tag="hblock_tag_5" canDelete="false" classfield_id="29516" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mModelProgress&amp;#010;//as %&amp;#010;@param value the value of mModelProgress" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29517" tag="hblock_tag_6" canDelete="false" classfield_id="29517" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mMapProgress&amp;#010;// as %&amp;#010;@return the value of mMapProgress" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29517" tag="hblock_tag_7" canDelete="false" classfield_id="29517" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mMapProgress&amp;#010;// as %&amp;#010;@param value the value of mMapProgress" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29518" tag="hblock_tag_8" canDelete="false" classfield_id="29518" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@return the value of mModelId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29518" tag="hblock_tag_9" canDelete="false" classfield_id="29518" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@param value the value of mModelId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29519" tag="hblock_tag_10" canDelete="false" classfield_id="29519" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@return the value of mAlgFactoryStartedFlag" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29519" tag="hblock_tag_11" canDelete="false" classfield_id="29519" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@param value the value of mAlgFactoryStartedFlag" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="29520" tag="operation_29520" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This is used by the om callbacks to let us know of model creation progress changes&amp;#010;@param theProgress how far the task has progressed." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29522" tag="operation_29522" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This is used by the om callbacks to let us know of map projection progress changes&amp;#010;@param theProgress how far the task has progressed." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29524" tag="operation_29524" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A private helper method to write xml to a file" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerlocalplugin.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29514" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29514" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29514" tag="hblock_tag_0" canDelete="false" classfield_id="29514" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29514" tag="hblock_tag_1" canDelete="false" classfield_id="29514" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29515" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29515" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29515" tag="hblock_tag_2" canDelete="false" classfield_id="29515" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29515" tag="hblock_tag_3" canDelete="false" classfield_id="29515" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29516" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="//as %" />
       </header>
       <ccfdeclarationcodeblock parent_id="29516" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29516" tag="hblock_tag_4" canDelete="false" classfield_id="29516" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mModelProgress&amp;#010;//as %&amp;#010;@return the value of mModelProgress" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29516" tag="hblock_tag_5" canDelete="false" classfield_id="29516" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mModelProgress&amp;#010;//as %&amp;#010;@param value the value of mModelProgress" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29517" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="// as %" />
       </header>
       <ccfdeclarationcodeblock parent_id="29517" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29517" tag="hblock_tag_6" canDelete="false" classfield_id="29517" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mMapProgress&amp;#010;// as %&amp;#010;@return the value of mMapProgress" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29517" tag="hblock_tag_7" canDelete="false" classfield_id="29517" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mMapProgress&amp;#010;// as %&amp;#010;@param value the value of mMapProgress" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29518" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Id of the model currently being executed" />
       </header>
       <ccfdeclarationcodeblock parent_id="29518" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29518" tag="hblock_tag_8" canDelete="false" classfield_id="29518" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@return the value of mModelId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29518" tag="hblock_tag_9" canDelete="false" classfield_id="29518" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@param value the value of mModelId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29519" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file)." />
       </header>
       <ccfdeclarationcodeblock parent_id="29519" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29519" tag="hblock_tag_10" canDelete="false" classfield_id="29519" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@return the value of mAlgFactoryStartedFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29519" tag="hblock_tag_11" canDelete="false" classfield_id="29519" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@param value the value of mAlgFactoryStartedFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29527" parent_class="29527" fileExt=".cpp" fileName="omgmodellerwebservicesplugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;omgmodellerwebservicesplugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="29531" tag="operation_29531" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29533" tag="operation_29533" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The default constructor is private so that no one can use it!" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29534" tag="operation_29534" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29536" tag="operation_29536" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="29537" tag="operation_29537" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29539" tag="operation_29539" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29541" tag="operation_29541" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29542" tag="operation_29542" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get a collection of algorithm objects in the form of an AgorithmSet.&amp;#010;The collection represents every algorithm that is available from the&amp;#010;plugin implementing this interface&amp;#010;@return OmgAlgorithmSet - a set of algorithms" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29543" tag="operation_29543" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29545" tag="operation_29545" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29547" tag="operation_29547" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29548" tag="operation_29548" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29550" tag="operation_29550" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29552" tag="operation_29552" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners that the currently running model is finished &amp;#010;@param theFilename of the completed model. If the model was &amp;#010;executed on a remote server the plugin will ensure that it is copied &amp;#010;to the local file system first.&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29554" tag="operation_29554" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notifies any listeners how far the current model has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress " />
         </header>
        </codeoperation>
        <codeoperation parent_id="29556" tag="operation_29556" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Private method called by any ctor on initial start up. &amp;#010;It will go and find the algorithm list etc." />
         </header>
        </codeoperation>
        <codeoperation parent_id="29558" tag="operation_29558" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="29560" tag="hblock_tag_0" canDelete="false" classfield_id="29560" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29560" tag="hblock_tag_1" canDelete="false" classfield_id="29560" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29561" tag="hblock_tag_2" canDelete="false" classfield_id="29561" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29561" tag="hblock_tag_3" canDelete="false" classfield_id="29561" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerwebservicesplugin.cpp - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29560" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29560" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29560" tag="hblock_tag_0" canDelete="false" classfield_id="29560" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29560" tag="hblock_tag_1" canDelete="false" classfield_id="29560" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29561" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29561" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29561" tag="hblock_tag_2" canDelete="false" classfield_id="29561" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29561" tag="hblock_tag_3" canDelete="false" classfield_id="29561" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17" parent_class="17" fileExt=".h" fileName="omgmodel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMODEL_H&amp;#010;#define OMGMODEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qstringlist.h&quot;&amp;#010;#include &quot;omgalgorithm.h&quot;&amp;#010;#include &quot;qdatetime.h&quot;&amp;#010;#include &quot;omglayer.h&quot;&amp;#010;#include &quot;omglayerset.h&quot;&amp;#010;#include &quot;omglocalities.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgModel&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgModel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16717" tag="operation_16717" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16718" tag="operation_16718" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="161" tag="operation_161" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="198" tag="operation_198" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a string representation of the model. Currently only intended for debuggin purposes.&amp;#010;" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="202" tag="operation_202" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theCoordinateSystem " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="210" tag="operation_210" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="218" tag="operation_218" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theSpeciesFile " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="226" tag="operation_226" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="234" tag="operation_234" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="242" tag="operation_242" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="253" tag="operation_253" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="261" tag="operation_261" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="293" tag="operation_293" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theNames " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="316" tag="operation_316" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theNames " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="324" tag="operation_324" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theAlgorithm " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="335" tag="operation_335" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFlag " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="346" tag="operation_346" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="431" tag="operation_431" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="437" tag="operation_437" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="444" tag="operation_444" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="452" tag="operation_452" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="461" tag="operation_461" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="471" tag="operation_471" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="482" tag="operation_482" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="494" tag="operation_494" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="507" tag="operation_507" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="521" tag="operation_521" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16721" tag="operation_16721" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16722" tag="operation_16722" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16723" tag="operation_16723" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//mutators" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16749" tag="operation_16749" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDateTimeStamp " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16752" tag="operation_16752" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDateTimeStamp " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16754" tag="operation_16754" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16756" tag="operation_16756" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="this is what is returned from om_create process. &amp;#010;at the moment we just store this in a string member, but in the future&amp;#010;we ill parse it out and store the individual constituents &amp;#010;as properties of the model object" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16758" tag="operation_16758" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//accessors" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16772" tag="operation_16772" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16774" tag="operation_16774" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16775" tag="operation_16775" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16776" tag="operation_16776" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16777" tag="operation_16777" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// General helper functions///** Once the taxon name and species file properties have&amp;#010;been set, you can call this method to populate the localities&amp;#010;collection." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16778" tag="operation_16778" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// implement the serialisable interface:///** Return an xml representation of this model as a simple qstring constant" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16779" tag="operation_16779" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theXml " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="536" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mCoordinateSystem;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="551" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mCoordinateSystemName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="566" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mSpeciesFile;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="581" tag="tblock_3" canDelete="false" indentLevel="1" text=" QString mTaxonName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="596" tag="tblock_4" canDelete="false" indentLevel="1" text=" QString mBuildMaskLayerName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="611" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mProjectionMaskLayerName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="626" tag="tblock_6" canDelete="false" indentLevel="1" text=" QString mOutputFormatLayerName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16781" tag="tblock_20" canDelete="false" indentLevel="1" text=" int mModelId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16782" tag="tblock_23" canDelete="false" indentLevel="1" text=" OmgLayer mOutputFormatLayer;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16783" tag="tblock_26" canDelete="false" indentLevel="1" text=" OmgLayerSet mProjectionLayers;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16784" tag="tblock_29" canDelete="false" indentLevel="1" text=" OmgLayerSet mCreationLayers;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16785" tag="tblock_32" canDelete="false" indentLevel="1" text=" OmgAlgorithm mAlgorithm;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16796" tag="tblock_35" canDelete="false" indentLevel="1" text=" bool mCompletedFlag;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16807" tag="tblock_38" canDelete="false" indentLevel="1" text=" OmgLocalities mLocalities;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="//this type is defined at the bottom of omglocality.h" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16828" tag="tblock_41" canDelete="false" indentLevel="1" text=" QDateTime mStartDateTimeStamp;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16839" tag="tblock_44" canDelete="false" indentLevel="1" text=" QDateTime mEndDateTimeStamp;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16850" tag="tblock_47" canDelete="false" indentLevel="1" text=" QString mThumbnailFileName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16861" tag="tblock_50" canDelete="false" indentLevel="1" text=" QString mModelDefinition;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="536" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="536" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="536" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="536" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="551" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="551" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="551" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="551" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="566" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="566" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="566" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="566" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="581" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="581" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="581" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="581" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="596" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="596" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="596" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="596" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="611" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="611" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="611" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="611" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="626" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="626" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="626" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="626" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16781" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16781" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16781" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16781" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16782" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16782" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16782" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16782" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16783" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="16783" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16783" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="16783" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16784" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="16784" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16784" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="16784" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16785" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="16785" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16785" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="16785" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16796" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="16796" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16796" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="16796" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16807" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="16807" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@return the value of mLocalities" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16807" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="16807" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@param value the value of mLocalities" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16828" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="16828" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16828" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="16828" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16839" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="16839" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16839" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="16839" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16850" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="16850" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16850" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="16850" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16861" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="16861" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16861" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="16861" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMODEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodel.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="536" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="536" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mCoordinateSystem;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="536" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="536" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="536" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="536" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="551" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="551" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mCoordinateSystemName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="551" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="551" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="551" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="551" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="566" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="566" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mSpeciesFile;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="566" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="566" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="566" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="566" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="581" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="581" tag="tblock_3" canDelete="false" indentLevel="1" text=" QString mTaxonName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="581" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="581" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="581" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="581" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="596" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="596" tag="tblock_4" canDelete="false" indentLevel="1" text=" QString mBuildMaskLayerName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="596" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="596" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="596" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="596" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="611" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="611" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mProjectionMaskLayerName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="611" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="611" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="611" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="611" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="626" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="626" tag="tblock_6" canDelete="false" indentLevel="1" text=" QString mOutputFormatLayerName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="626" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="626" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="626" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="626" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16781" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16781" tag="tblock_20" canDelete="false" indentLevel="1" text=" int mModelId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16781" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16781" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16781" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16781" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16782" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16782" tag="tblock_23" canDelete="false" indentLevel="1" text=" OmgLayer mOutputFormatLayer;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16782" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16782" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16782" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16782" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16783" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16783" tag="tblock_26" canDelete="false" indentLevel="1" text=" OmgLayerSet mProjectionLayers;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16783" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="16783" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16783" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="16783" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16784" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16784" tag="tblock_29" canDelete="false" indentLevel="1" text=" OmgLayerSet mCreationLayers;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16784" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="16784" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16784" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="16784" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16785" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16785" tag="tblock_32" canDelete="false" indentLevel="1" text=" OmgAlgorithm mAlgorithm;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16785" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="16785" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16785" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="16785" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16796" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16796" tag="tblock_35" canDelete="false" indentLevel="1" text=" bool mCompletedFlag;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16796" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="16796" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16796" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="16796" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="//this type is defined at the bottom of omglocality.h" />
       </header>
       <ccfdeclarationcodeblock parent_id="16807" tag="tblock_38" canDelete="false" indentLevel="1" text=" OmgLocalities mLocalities;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="//this type is defined at the bottom of omglocality.h" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16807" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="16807" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@return the value of mLocalities" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16807" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="16807" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLocalities&amp;#010;//this type is defined at the bottom of omglocality.h&amp;#010;@param value the value of mLocalities" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16828" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16828" tag="tblock_41" canDelete="false" indentLevel="1" text=" QDateTime mStartDateTimeStamp;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16828" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="16828" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16828" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="16828" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16839" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16839" tag="tblock_44" canDelete="false" indentLevel="1" text=" QDateTime mEndDateTimeStamp;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16839" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="16839" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16839" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="16839" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16850" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16850" tag="tblock_47" canDelete="false" indentLevel="1" text=" QString mThumbnailFileName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16850" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="16850" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16850" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="16850" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16861" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16861" tag="tblock_50" canDelete="false" indentLevel="1" text=" QString mModelDefinition;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16861" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="16861" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16861" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="16861" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="24" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="31" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="34" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="34" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="34" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="34" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="81" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="84" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="781" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgModel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader18" parent_class="18" fileExt=".h" fileName="omgalgorithm" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGALGORITHM_H&amp;#010;#define OMGALGORITHM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qvector.h&quot;&amp;#010;#include &quot;omgalgorithmparameter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="18" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgAlgorithm&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgAlgorithm ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16157" tag="operation_16157" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16158" tag="operation_16158" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16159" tag="operation_16159" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theId &amp;#010;@param theName &amp;#010;@param theAuthor &amp;#010;@param theCodeAuthor &amp;#010;@param theVersion &amp;#010;@param theDescription &amp;#010;@param theBibliography &amp;#010;@param theParameters " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="897" tag="operation_897" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theId " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="927" tag="operation_927" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="957" tag="operation_957" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theAuthor " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="987" tag="operation_987" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theCodeAuthor " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1017" tag="operation_1017" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theVersion " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1047" tag="operation_1047" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDescription " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1077" tag="operation_1077" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theBibliography " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1107" tag="operation_1107" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theParameters " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1137" tag="operation_1137" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theParameter " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1293" tag="operation_1293" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1309" tag="operation_1309" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1326" tag="operation_1326" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1344" tag="operation_1344" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1363" tag="operation_1363" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1383" tag="operation_1383" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1404" tag="operation_1404" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1426" tag="operation_1426" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16169" tag="operation_16169" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16170" tag="operation_16170" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16179" tag="operation_16179" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theContact " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16187" tag="operation_16187" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theParameters " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16194" tag="operation_16194" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="1493" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1516" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1539" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mAuthor;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1562" tag="tblock_3" canDelete="false" indentLevel="1" text=" QString mCodeAuthor;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1585" tag="tblock_4" canDelete="false" indentLevel="1" text=" QString mVersion;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1608" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mDescription;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1631" tag="tblock_6" canDelete="false" indentLevel="1" text=" QString mBibliography;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="1654" tag="tblock_7" canDelete="false" indentLevel="1" text=" QVector mParameters;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16200" tag="tblock_23" canDelete="false" indentLevel="1" text=" QString mContact;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="1493" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1493" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1493" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="1493" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1516" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="1516" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1516" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="1516" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1539" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="1539" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1539" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="1539" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1562" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="1562" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1562" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="1562" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1585" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="1585" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1585" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="1585" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1608" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="1608" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1608" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="1608" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1631" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="1631" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1631" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="1631" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="1654" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="1654" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="1654" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="1654" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16200" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16200" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16200" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16200" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGALGORITHM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithm.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="1493" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1493" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1493" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1493" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1493" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="1493" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1516" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1516" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1516" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="1516" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1516" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="1516" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1539" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1539" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mAuthor;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1539" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="1539" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1539" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="1539" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1562" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1562" tag="tblock_3" canDelete="false" indentLevel="1" text=" QString mCodeAuthor;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1562" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="1562" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1562" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="1562" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1585" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1585" tag="tblock_4" canDelete="false" indentLevel="1" text=" QString mVersion;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1585" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="1585" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1585" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="1585" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1608" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1608" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mDescription;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1608" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="1608" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1608" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="1608" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1631" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1631" tag="tblock_6" canDelete="false" indentLevel="1" text=" QString mBibliography;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1631" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="1631" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1631" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="1631" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="1654" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="1654" tag="tblock_7" canDelete="false" indentLevel="1" text=" QVector mParameters;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="1654" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="1654" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="1654" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="1654" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16200" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16200" tag="tblock_23" canDelete="false" indentLevel="1" text=" QString mContact;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16200" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16200" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16200" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16200" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="24" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgAlgorithm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgAlgorithm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="41" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgAlgorithm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="84" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgAlgorithm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="84" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="84" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="87" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgAlgorithm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader19" parent_class="19" fileExt=".h" fileName="omgalgorithmparameter" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGALGORITHMPARAMETER_H&amp;#010;#define OMGALGORITHMPARAMETER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="19" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgAlgorithmParameter&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgAlgorithmParameter ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16201" tag="operation_16201" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16202" tag="operation_16202" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16203" tag="operation_16203" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theId &amp;#010;@param theName &amp;#010;@param theDefault &amp;#010;@param theDescription &amp;#010;@param theMinimum &amp;#010;@param theMaximum &amp;#010;@param theValue " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="1743" tag="operation_1743" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theId " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1789" tag="operation_1789" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1835" tag="operation_1835" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theType " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1881" tag="operation_1881" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDefault " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1927" tag="operation_1927" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDescription " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="1973" tag="operation_1973" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMinimum " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2019" tag="operation_2019" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMaximum " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2065" tag="operation_2065" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2089" tag="operation_2089" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2114" tag="operation_2114" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2140" tag="operation_2140" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2167" tag="operation_2167" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2195" tag="operation_2195" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16225" tag="operation_16225" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The user defined value for this parameter" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16227" tag="operation_16227" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Provide a string representation of this param" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16234" tag="operation_16234" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="2224" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2253" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2282" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mType;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2311" tag="tblock_3" canDelete="false" indentLevel="1" text=" QString mDefault;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2368" tag="tblock_4" canDelete="false" indentLevel="1" text=" QString mDescription;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2397" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mMinimum;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2426" tag="tblock_6" canDelete="false" indentLevel="1" text=" QString mMaximum;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16235" tag="tblock_20" canDelete="false" indentLevel="1" text=" QString mValue;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="2224" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2224" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2224" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="2224" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2253" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="2253" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2253" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="2253" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2282" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="2282" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2282" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="2282" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2311" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="2311" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2311" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="2311" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2368" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="2368" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2368" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="2368" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2397" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="2397" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2397" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="2397" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2426" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="2426" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2426" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="2426" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16235" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16235" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16235" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16235" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGALGORITHMPARAMETER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithmparameter.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2224" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2224" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2224" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2224" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2224" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="2224" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2253" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2253" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2253" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="2253" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2253" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="2253" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2282" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2282" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mType;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2282" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="2282" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2282" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="2282" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2311" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2311" tag="tblock_3" canDelete="false" indentLevel="1" text=" QString mDefault;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2311" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="2311" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2311" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="2311" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2368" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2368" tag="tblock_4" canDelete="false" indentLevel="1" text=" QString mDescription;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2368" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="2368" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2368" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="2368" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2397" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2397" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mMinimum;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2397" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="2397" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2397" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="2397" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2426" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2426" tag="tblock_6" canDelete="false" indentLevel="1" text=" QString mMaximum;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2426" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="2426" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2426" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="2426" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16235" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16235" tag="tblock_20" canDelete="false" indentLevel="1" text=" QString mValue;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16235" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16235" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16235" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16235" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="41" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgAlgorithmParameter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="41" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="41" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="87" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" OmgAlgorithmParameter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="87" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="87" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader20" parent_class="20" fileExt=".h" fileName="omgexperiment" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGEXPERIMENT_H&amp;#010;#define OMGEXPERIMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omgmodel.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qvector.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="20" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgExperiment&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;///qt includes/**&amp;#010;An experiment represents a collection of models that need to be processed.&amp;#010;Rather than setting up models and running them individually, you can add them&amp;#010;to the experiment, which (where possible) will parelelise the process, keep &amp;#010;track of overall experiment progress and perform other house keeping jobs for you.&amp;#010;@author Tim Sutton, 2005" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgExperiment ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16916" tag="operation_16916" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16917" tag="operation_16917" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="104" tag="operation_104" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Add a new model to the experiment queue" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="107" tag="operation_107" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Start running the experiment " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="108" tag="operation_108" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Stop running anymore models" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="109" tag="operation_109" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The number of models to be run in the experiment" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="110" tag="operation_110" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Clear the model queue for the experiment" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="111" tag="operation_111" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remove all completed models from the queue" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="127" tag="operation_127" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a string representation of the whole experiment. Mainly intended for debugging purposes" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="130" tag="operation_130" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notify all observers how far the total experiment has progressed" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="134" tag="operation_134" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notify all listeners how far the creation of the current model has progressed" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="138" tag="operation_138" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notify all listeners how far the projection of the current model has progressed " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16920" tag="operation_16920" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a model from experiment given its number" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16927" tag="operation_16927" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Tell the experiment which modeller adapter instance to use" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16931" tag="operation_16931" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notify all observers of the experiment size" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16939" tag="operation_16939" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notify listeners of a new log message" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="144" tag="tblock_0" canDelete="false" indentLevel="1" text=" QVector mModelVector;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The container for all the models in the queue" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="146" tag="tblock_1" canDelete="false" indentLevel="1" text=" int mLastPos;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The position in the queue of the last model that was executed" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16941" tag="tblock_5" canDelete="false" indentLevel="1" text=" OmgModellerPluginInterface* mpModellerPlugin;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The adapter that will be used to run the models" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="144" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@return the value of mModelVector" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="144" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@param value the value of mModelVector" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="146" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@return the value of mLastPos" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="146" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@param value the value of mLastPos" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16941" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16941" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@return the value of mpModellerPlugin" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16941" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16941" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@param value the value of mpModellerPlugin" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGEXPERIMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgexperiment.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The container for all the models in the queue" />
       </header>
       <ccfdeclarationcodeblock parent_id="144" tag="tblock_0" canDelete="false" indentLevel="1" text=" QVector mModelVector;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The container for all the models in the queue" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="144" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@return the value of mModelVector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="144" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mModelVector&amp;#010;The container for all the models in the queue&amp;#010;@param value the value of mModelVector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position in the queue of the last model that was executed" />
       </header>
       <ccfdeclarationcodeblock parent_id="146" tag="tblock_1" canDelete="false" indentLevel="1" text=" int mLastPos;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The position in the queue of the last model that was executed" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="146" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@return the value of mLastPos" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="146" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLastPos&amp;#010;The position in the queue of the last model that was executed&amp;#010;@param value the value of mLastPos" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16941" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The adapter that will be used to run the models" />
       </header>
       <ccfdeclarationcodeblock parent_id="16941" tag="tblock_5" canDelete="false" indentLevel="1" text=" OmgModellerPluginInterface* mpModellerPlugin;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The adapter that will be used to run the models" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16941" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16941" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@return the value of mpModellerPlugin" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16941" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16941" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mpModellerPlugin&amp;#010;The adapter that will be used to run the models&amp;#010;@param value the value of mpModellerPlugin" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="31" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgExperiment ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="31" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="31" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="81" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgExperiment ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="81" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="81" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="781" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OmgExperiment ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="781" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="781" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader54" parent_class="54" fileExt=".h" fileName="omgmainwindow" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMAINWINDOW_H&amp;#010;#define OMGMAINWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qcloseevent.h&quot;&amp;#010;#include &quot;qlabel.h&quot;&amp;#010;#include &quot;qmenu.h&quot;&amp;#010;#include &quot;qtoolbar.h&quot;&amp;#010;#include &quot;qaction.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="54" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgMainWindow&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgMainWindow ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4799" tag="operation_4799" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4831" tag="operation_4831" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4895" tag="operation_4895" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Log emitted from wizard when model is done&amp;#010;" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5021" tag="operation_5021" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param *event " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="6453" tag="tblock_0" canDelete="false" indentLevel="1" text=" QLabel mPictureWidget;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7256" tag="tblock_1" canDelete="false" indentLevel="1" text=" QMenu *fileMenu;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7295" tag="tblock_2" canDelete="false" indentLevel="1" text=" QMenu *toolsMenu;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7334" tag="tblock_3" canDelete="false" indentLevel="1" text=" QMenu *settingsMenu;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7373" tag="tblock_4" canDelete="false" indentLevel="1" text=" QMenu *helpMenu;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7412" tag="tblock_5" canDelete="false" indentLevel="1" text=" QToolBar *fileToolBar;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7451" tag="tblock_6" canDelete="false" indentLevel="1" text=" QToolBar *toolsToolBar;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7490" tag="tblock_7" canDelete="false" indentLevel="1" text=" QAction *newAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7529" tag="tblock_8" canDelete="false" indentLevel="1" text=" QAction *fetchAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7568" tag="tblock_9" canDelete="false" indentLevel="1" text=" QAction *exitAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="7987" tag="tblock_10" canDelete="false" indentLevel="1" text=" QToolBar *optionsAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8026" tag="tblock_11" canDelete="false" indentLevel="1" text=" QAction *toolsConvertAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8065" tag="tblock_12" canDelete="false" indentLevel="1" text=" QAction *toolsClimateConvertAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8104" tag="tblock_13" canDelete="false" indentLevel="1" text=" QAction *toolsContourAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8143" tag="tblock_14" canDelete="false" indentLevel="1" text=" QAction *toolsRasterThresholdAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8182" tag="tblock_15" canDelete="false" indentLevel="1" text=" QAction *toolsWarpAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8221" tag="tblock_16" canDelete="false" indentLevel="1" text=" QAction *toolsFileSplitterAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8260" tag="tblock_17" canDelete="false" indentLevel="1" text=" QToolBar *aboutOmgAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8299" tag="tblock_18" canDelete="false" indentLevel="1" text=" QAction *licenseAct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="6453" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="6453" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="6453" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="6453" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7256" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="7256" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7256" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="7256" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7295" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="7295" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7295" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="7295" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7334" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="7334" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7334" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="7334" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7373" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="7373" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7373" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="7373" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7412" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="7412" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7412" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="7412" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7451" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="7451" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7451" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="7451" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7490" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="7490" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7490" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="7490" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7529" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="7529" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7529" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="7529" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7568" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="7568" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7568" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="7568" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="7987" tag="hblock_tag_38" canDelete="false" indentLevel="1" classfield_id="7987" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="7987" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="7987" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8026" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="8026" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8026" tag="hblock_tag_41" canDelete="false" indentLevel="1" classfield_id="8026" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8065" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="8065" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8065" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="8065" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8104" tag="hblock_tag_44" canDelete="false" indentLevel="1" classfield_id="8104" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8104" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="8104" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8143" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="8143" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8143" tag="hblock_tag_47" canDelete="false" indentLevel="1" classfield_id="8143" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8182" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="8182" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8182" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="8182" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8221" tag="hblock_tag_50" canDelete="false" indentLevel="1" classfield_id="8221" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8221" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="8221" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8260" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="8260" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8260" tag="hblock_tag_53" canDelete="false" indentLevel="1" classfield_id="8260" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8299" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="8299" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8299" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="8299" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5241" tag="operation_5241" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5273" tag="operation_5273" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5305" tag="operation_5305" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5337" tag="operation_5337" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5369" tag="operation_5369" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5401" tag="operation_5401" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5433" tag="operation_5433" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5466" tag="operation_5466" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5500" tag="operation_5500" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5535" tag="operation_5535" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5571" tag="operation_5571" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5608" tag="operation_5608" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5646" tag="operation_5646" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="6065" tag="operation_6065" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="6104" tag="operation_6104" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="6143" tag="operation_6143" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="6182" tag="operation_6182" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="6221" tag="operation_6221" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="6260" tag="operation_6260" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMAINWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmainwindow.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="6453" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="6453" tag="tblock_0" canDelete="false" indentLevel="1" text=" QLabel mPictureWidget;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="6453" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="6453" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="6453" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="6453" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7256" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7256" tag="tblock_1" canDelete="false" indentLevel="1" text=" QMenu *fileMenu;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7256" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="7256" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7256" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="7256" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7295" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7295" tag="tblock_2" canDelete="false" indentLevel="1" text=" QMenu *toolsMenu;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7295" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="7295" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7295" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="7295" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7334" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7334" tag="tblock_3" canDelete="false" indentLevel="1" text=" QMenu *settingsMenu;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7334" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="7334" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7334" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="7334" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7373" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7373" tag="tblock_4" canDelete="false" indentLevel="1" text=" QMenu *helpMenu;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7373" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="7373" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7373" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="7373" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7412" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7412" tag="tblock_5" canDelete="false" indentLevel="1" text=" QToolBar *fileToolBar;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7412" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="7412" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7412" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="7412" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7451" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7451" tag="tblock_6" canDelete="false" indentLevel="1" text=" QToolBar *toolsToolBar;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7451" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="7451" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7451" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="7451" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7490" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7490" tag="tblock_7" canDelete="false" indentLevel="1" text=" QAction *newAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7490" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="7490" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7490" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="7490" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7529" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7529" tag="tblock_8" canDelete="false" indentLevel="1" text=" QAction *fetchAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7529" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="7529" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7529" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="7529" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7568" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7568" tag="tblock_9" canDelete="false" indentLevel="1" text=" QAction *exitAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7568" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="7568" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7568" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="7568" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7987" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="7987" tag="tblock_10" canDelete="false" indentLevel="1" text=" QToolBar *optionsAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7987" tag="hblock_tag_38" canDelete="false" indentLevel="1" classfield_id="7987" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7987" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="7987" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8026" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8026" tag="tblock_11" canDelete="false" indentLevel="1" text=" QAction *toolsConvertAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8026" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="8026" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8026" tag="hblock_tag_41" canDelete="false" indentLevel="1" classfield_id="8026" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8065" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8065" tag="tblock_12" canDelete="false" indentLevel="1" text=" QAction *toolsClimateConvertAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8065" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="8065" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8065" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="8065" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8104" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8104" tag="tblock_13" canDelete="false" indentLevel="1" text=" QAction *toolsContourAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8104" tag="hblock_tag_44" canDelete="false" indentLevel="1" classfield_id="8104" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8104" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="8104" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8143" tag="tblock_14" canDelete="false" indentLevel="1" text=" QAction *toolsRasterThresholdAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8143" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="8143" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8143" tag="hblock_tag_47" canDelete="false" indentLevel="1" classfield_id="8143" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8182" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8182" tag="tblock_15" canDelete="false" indentLevel="1" text=" QAction *toolsWarpAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8182" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="8182" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8182" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="8182" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8221" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8221" tag="tblock_16" canDelete="false" indentLevel="1" text=" QAction *toolsFileSplitterAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8221" tag="hblock_tag_50" canDelete="false" indentLevel="1" classfield_id="8221" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8221" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="8221" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8260" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8260" tag="tblock_17" canDelete="false" indentLevel="1" text=" QToolBar *aboutOmgAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8260" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="8260" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8260" tag="hblock_tag_53" canDelete="false" indentLevel="1" classfield_id="8260" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8299" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8299" tag="tblock_18" canDelete="false" indentLevel="1" text=" QAction *licenseAct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8299" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="8299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8299" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="8299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader55" parent_class="55" fileExt=".h" fileName="omgmodeldesigner" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMODELDESIGNER_H&amp;#010;#define OMGMODELDESIGNER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;omgexperiment.h&quot;&amp;#010;#include &quot;wflags.h&quot;&amp;#010;#include &quot;qstringlist.h&quot;&amp;#010;#include &quot;omgexperimentprogress.h&quot;&amp;#010;#include &quot;omgalgorithm.h&quot;&amp;#010;#include &quot;wktmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using ::OmgModelDesigner;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="55" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgModelDesigner&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;///// QT includes///**&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgModelDesigner ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="14225" tag="operation_14225" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent &amp;#010;@param fl " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14232" tag="operation_14232" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="12379" tag="operation_12379" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12422" tag="operation_12422" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12465" tag="operation_12465" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12508" tag="operation_12508" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12551" tag="operation_12551" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12594" tag="operation_12594" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12637" tag="operation_12637" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12680" tag="operation_12680" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12723" tag="operation_12723" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12766" tag="operation_12766" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMessage " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12852" tag="operation_12852" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return an experiment object that represents all the emodels to be processed" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="13241" tag="tblock_0" canDelete="false" indentLevel="1" text=" LocalityVector mLocalityVector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="13286" tag="tblock_1" canDelete="false" indentLevel="1" text=" OmgExperimentProgress mOmgExperimentProgress;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="13330" tag="tblock_2" canDelete="false" indentLevel="1" text="  mOmgModellerLocalAdapter;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="13374" tag="tblock_3" canDelete="false" indentLevel="1" text=" OmgAlgorithm mAlgorithm;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="14246" tag="tblock_4" canDelete="false" indentLevel="1" text=" OmgSpatialReferenceSystem::WktMap mWktMap;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="13241" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="13241" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="13241" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="13241" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="13286" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="13286" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="13286" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="13286" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="13330" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="13330" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="13330" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="13330" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="13374" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="13374" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="13374" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="13374" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="14246" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="14246" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="14246" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="14246" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="14247" tag="operation_14247" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Checks to see if the input and output layers match.&amp;#010;@return bool True if layers are semantically equivalent." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14248" tag="operation_14248" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileNameQString " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14250" tag="operation_14250" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14251" tag="operation_14251" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14252" tag="operation_14252" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theListWidget " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMODELDESIGNER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodeldesigner.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="13241" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13241" tag="tblock_0" canDelete="false" indentLevel="1" text=" LocalityVector mLocalityVector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13241" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="13241" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13241" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="13241" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13286" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13286" tag="tblock_1" canDelete="false" indentLevel="1" text=" OmgExperimentProgress mOmgExperimentProgress;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13286" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="13286" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13286" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="13286" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13330" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13330" tag="tblock_2" canDelete="false" indentLevel="1" text="  mOmgModellerLocalAdapter;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13330" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="13330" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13330" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="13330" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13374" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13374" tag="tblock_3" canDelete="false" indentLevel="1" text=" OmgAlgorithm mAlgorithm;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13374" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="13374" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13374" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="13374" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14246" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14246" tag="tblock_4" canDelete="false" indentLevel="1" text=" OmgSpatialReferenceSystem::WktMap mWktMap;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14246" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="14246" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14246" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="14246" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader56" parent_class="56" fileExt=".h" fileName="omgalgorithmproperties" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGALGORITHMPROPERTIES_H&amp;#010;#define OMGALGORITHMPROPERTIES_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omgalgorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="56" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgAlgorithmProperties&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgAlgorithmProperties ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="8414" tag="operation_8414" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theAlgorithm " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="8606" tag="operation_8606" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="8646" tag="tblock_0" canDelete="false" indentLevel="1" text=" OmgAlgorithm mAlgorithm;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="9275" tag="tblock_1" canDelete="false" indentLevel="1" text=" QVBoxLayout mpLayout2;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="9315" tag="tblock_2" canDelete="false" indentLevel="1" text=" QScrollArea mpScrollArea3;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="9355" tag="tblock_3" canDelete="false" indentLevel="1" text=" QFrame mpQFrame4;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="9395" tag="tblock_4" canDelete="false" indentLevel="1" text=" QGridLayout mpLayout5;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="8646" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="8646" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8646" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="8646" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="9275" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="9275" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="9275" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="9275" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="9315" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="9315" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="9315" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="9315" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="9355" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="9355" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="9355" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="9355" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="9395" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="9395" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="9395" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="9395" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGALGORITHMPROPERTIES_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithmproperties.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="8646" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="8646" tag="tblock_0" canDelete="false" indentLevel="1" text=" OmgAlgorithm mAlgorithm;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8646" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="8646" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8646" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="8646" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9275" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9275" tag="tblock_1" canDelete="false" indentLevel="1" text=" QVBoxLayout mpLayout2;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9275" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="9275" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9275" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="9275" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9315" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9315" tag="tblock_2" canDelete="false" indentLevel="1" text=" QScrollArea mpScrollArea3;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9315" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="9315" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9315" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="9315" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9355" tag="tblock_3" canDelete="false" indentLevel="1" text=" QFrame mpQFrame4;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9355" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="9355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9355" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="9355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9395" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9395" tag="tblock_4" canDelete="false" indentLevel="1" text=" QGridLayout mpLayout5;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9395" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="9395" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9395" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="9395" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader57" parent_class="57" fileExt=".h" fileName="omgexperimentprogress" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGEXPERIMENTPROGRESS_H&amp;#010;#define OMGEXPERIMENTPROGRESS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="57" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgExperimentProgress&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgExperimentProgress ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="11909" tag="operation_11909" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theProgress " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="11995" tag="operation_11995" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theProgress " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12081" tag="operation_12081" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theProgress " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12167" tag="operation_12167" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMessage " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGEXPERIMENTPROGRESS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgexperimentprogress.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader58" parent_class="58" fileExt=".h" fileName="omglayerselector" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGLAYERSELECTOR_H&amp;#010;#define OMGLAYERSELECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstringlist.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;omggdal.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="58" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgLayerSelector&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgLayerSelector ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="9630" tag="operation_9630" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="9670" tag="operation_9670" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="9710" tag="operation_9710" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="9750" tag="operation_9750" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="9791" tag="operation_9791" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="9833" tag="operation_9833" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="11149" tag="tblock_0" canDelete="false" indentLevel="1" text=" QTreeWidgetItem mpListParent;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="11234" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mBaseDirString;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="11277" tag="tblock_2" canDelete="false" indentLevel="1" text=" QStringList mSelectedLayersList;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="11320" tag="tblock_3" canDelete="false" indentLevel="1" text=" OmgGdal mOmgGdal;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="11149" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="11149" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="11149" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="11149" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="11234" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="11234" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="11234" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="11234" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="11277" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="11277" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="11277" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="11277" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="11320" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="11320" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="11320" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="11320" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="10129" tag="operation_10129" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param *event " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="10215" tag="operation_10215" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param dirname &amp;#010;@param theListViewItem " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="10934" tag="operation_10934" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param thepParent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="11062" tag="operation_11062" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param thepItem " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGLAYERSELECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglayerselector.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="11149" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11149" tag="tblock_0" canDelete="false" indentLevel="1" text=" QTreeWidgetItem mpListParent;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11149" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="11149" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11149" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="11149" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11234" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11234" tag="tblock_1" canDelete="false" indentLevel="1" text=" QString mBaseDirString;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11234" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="11234" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11234" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="11234" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11277" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11277" tag="tblock_2" canDelete="false" indentLevel="1" text=" QStringList mSelectedLayersList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11277" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="11277" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11277" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="11277" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11320" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11320" tag="tblock_3" canDelete="false" indentLevel="1" text=" OmgGdal mOmgGdal;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11320" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="11320" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11320" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="11320" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader125" parent_class="125" fileExt=".h" fileName="qvector" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QVECTOR_H&amp;#010;#define QVECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="125" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QVector&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QVector ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QVECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qvector.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader126" parent_class="126" fileExt=".h" fileName="qstring" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QSTRING_H&amp;#010;#define QSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="126" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QString&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QString ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qstring.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader275" parent_class="275" fileExt=".h" fileName="qstringlist" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QSTRINGLIST_H&amp;#010;#define QSTRINGLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="275" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QStringList&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QStringList ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QSTRINGLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qstringlist.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5147" parent_class="5147" fileExt=".h" fileName="qcloseevent" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QCLOSEEVENT_H&amp;#010;#define QCLOSEEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5147" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QCloseEvent&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QCloseEvent ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QCLOSEEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qcloseevent.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader6376" parent_class="6376" fileExt=".h" fileName="qlabel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QLABEL_H&amp;#010;#define QLABEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="6376" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QLabel&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QLabel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QLABEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qlabel.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader6568" parent_class="6568" fileExt=".h" fileName="qmenu" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QMENU_H&amp;#010;#define QMENU_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="6568" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QMenu&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QMenu ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QMENU_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qmenu.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader6607" parent_class="6607" fileExt=".h" fileName="qtoolbar" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QTOOLBAR_H&amp;#010;#define QTOOLBAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="6607" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QToolBar&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QToolBar ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QTOOLBAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qtoolbar.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader6684" parent_class="6684" fileExt=".h" fileName="qaction" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QACTION_H&amp;#010;#define QACTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="6684" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QAction&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QAction ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QACTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qaction.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader10763" parent_class="10763" fileExt=".h" fileName="omggdal" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGGDAL_H&amp;#010;#define OMGGDAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="10763" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgGdal&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgGdal ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="14816" tag="operation_14816" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14817" tag="operation_14817" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="14818" tag="operation_14818" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14821" tag="operation_14821" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14823" tag="operation_14823" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A Qt style wrapper for gdal to convert from one file format to another.&amp;#010;@NOTE the output file name will be automatically determined by using the input file&amp;#010;name, and writing out a similarly named file with an appropriate extension.&amp;#010;@see FileType enum for the currently supported output file types&amp;#010;@param const QString theInputFile the name of the input file&amp;#010;@param const QString theOutputPath the name of the output folder&amp;#010;@param const FileType theFileType the type of the output file&amp;#010;@return const QString the name of the output file" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14828" tag="operation_14828" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A Qt style wrapper for gdal to resize a file.&amp;#010;@see FileType enum for the currently supported input file types&amp;#010;@param const QString theInputFile the name of the input file&amp;#010;@param const QString theOutputPath the name of the output folder&amp;#010;@param const int theWidth the width of output image&amp;#010;@param const int theHeight the height of output image&amp;#010;@return const QString the name of the output file&amp;#010;///  const QString gdalResize(const QString theFileName, const QString theOutputPath, const int theWidth, const int theHeight){};/** Get a list of supported GDAL datatype file filters.&amp;#010;  @NOTE THis method was copied over from QGIS QgsRasterLayer&amp;#010;  @param A reference to a string. This will be populated with the results.&amp;#010;  @return void" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14831" tag="operation_14831" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create contour lines from probability surface&amp;#010;Only the first raster band will be contoured.Contours are fixed at 10 unit increments.&amp;#010;@NOTE This method is based on the GDAL apps/gdal_contour.cpp sources&amp;#010;@param const QString theInputFile Gdal dataset to be contoured&amp;#010;@param const QString the name of the generated shapefile" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14833" tag="operation_14833" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Call the emitter a progress signal.&amp;#010;@NOTE We need this level of indirection to support gdal style call backs.&amp;#010;@see updateProgress" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14836" tag="operation_14836" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A simple test to see if a file is a valid gdal raster.&amp;#010;@param QString the name of the file to test&amp;#010;@return bool True if file is valid" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14838" tag="operation_14838" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A simple test to see if a gdal raster has a valid projection&amp;#010;@param QString the name of the file to test&amp;#010;@return bool True if file is valid" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="14840" tag="operation_14840" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theError " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14842" tag="operation_14842" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Emit a progress signal.&amp;#010;@NOTE should only ever be called using the showProgress method so we can properly &amp;#010;support gdal style callbacks&amp;#010;@see showProgress" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="14845" tag="operation_14845" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName &amp;#010;@param theOutputPath " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14848" tag="operation_14848" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName &amp;#010;@param theOutputPath " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGGDAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omggdal.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader13548" parent_class="13548" fileExt=".h" fileName="omgspatialreferencesystem" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGSPATIALREFERENCESYSTEM_H&amp;#010;#define OMGSPATIALREFERENCESYSTEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wktmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="13548" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgSpatialReferenceSystem&amp;#010;  Copyright (C) 2005 by Tim Sutton                                      *&amp;#010;  tim@linfiniti.com                                                     * &amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgSpatialReferenceSystem ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="13769" tag="operation_13769" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="13770" tag="operation_13770" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="13773" tag="operation_13773" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGSPATIALREFERENCESYSTEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgspatialreferencesystem.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader14216" parent_class="14216" fileExt=".h" fileName="qdialog" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QDIALOG_H&amp;#010;#define QDIALOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="14216" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QDialog&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QDialog ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QDIALOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qdialog.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader14220" parent_class="14220" fileExt=".h" fileName="ui" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UI_H&amp;#010;#define UI_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="14220" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Ui&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Ui ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UI_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ui.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader14226" parent_class="14226" fileExt=".h" fileName="qwidget" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QWIDGET_H&amp;#010;#define QWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="14226" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QWidget&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QWidget ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qwidget.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="qt" id="cppheader14230" parent_class="14230" fileExt=".h" fileName="wflags" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WFLAGS_H&amp;#010;#define WFLAGS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="14230" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class WFlags&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="WFlags ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WFLAGS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wflags.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is qt&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader14253" parent_class="14253" fileExt=".h" fileName="qlistwidget" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QLISTWIDGET_H&amp;#010;#define QLISTWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="14253" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QListWidget&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QListWidget ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QLISTWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qlistwidget.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader14808" parent_class="14808" fileExt=".h" fileName="qobject" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QOBJECT_H&amp;#010;#define QOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="14808" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QObject&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qobject.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16236" parent_class="16236" fileExt=".h" fileName="omgserialisable" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGSERIALISABLE_H&amp;#010;#define OMGSERIALISABLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16236" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgSerialisable&amp;#010;An abstract base class for any class that is serialiseable to xml&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgSerialisable ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16237" tag="operation_16237" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor ." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16238" tag="operation_16238" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Desctructor ." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16239" tag="operation_16239" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write this object to xml and return result as qstring (virtual) ." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16240" tag="operation_16240" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write this object to xml and return result as qstring (virtual).&amp;#010; We provide a basic default implementation where given a file name,&amp;#010; we will write the serialised xml to that file.&amp;#010;Internally it uses toXml() method above so that must be properly implemented." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16242" tag="operation_16242" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read this object from xml and return result as true for success, false for failure (virtual)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16244" tag="operation_16244" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read this object from xml in a file and return result as true for success, false for failure.&amp;#010;Internally it uses fromXml(QString) method above so that must be properly implemented." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGSERIALISABLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgserialisable.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16246" parent_class="16246" fileExt=".h" fileName="omgalgorithmset" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGALGORITHMSET_H&amp;#010;#define OMGALGORITHMSET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omgalgorithm.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qstringlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16246" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgAlgorithmSet&amp;#010;An abstract base class for any class that is serialiseable to xml&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgAlgorithmSet ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16250" tag="operation_16250" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor ." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16251" tag="operation_16251" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Desctructor ." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16252" tag="operation_16252" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Add a algorithm to the algorithmset&amp;#010;@see OmgAlgorithm " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16254" tag="operation_16254" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remove a algorithm from the algorithmset&amp;#010;@see OmgAlgorithm" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16256" tag="operation_16256" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded method to remove a algorithm from &amp;#010;the algorithmset given only its algorithmame." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16258" tag="operation_16258" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Accessors///** The name of this algorithmset - in plain english" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16259" tag="operation_16259" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A description for the layerset e.g. including details like &amp;#010;hostname etc for remote services" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16260" tag="operation_16260" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Helper method to return a list of all the algorithm names." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16261" tag="operation_16261" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Mutators///** Set the algorithmSet Name&amp;#010;@see name()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16263" tag="operation_16263" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set a description for the algorithmset&amp;#010;@see description()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16265" tag="operation_16265" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Ancilliary helper methods///**&amp;#010;Retrun the count of algorithms in the algorithmset - excluding the mask" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16266" tag="operation_16266" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a string representation of this AlgorithmSet" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16267" tag="operation_16267" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return an xml representation of this AlgorithmSet&amp;#010;@see OmgSerialisable" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16268" tag="operation_16268" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Initialise this algorithmset from an xml representation of this AlgorithmSet&amp;#010;@see OmgSerialisable" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16270" tag="operation_16270" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return an html representation of this AlgorithmSet&amp;#010;e.g.&amp;#010;&lt;ul>&amp;#010; &lt;li for each algorithm >&amp;#010;&lt;/ul>" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16271" tag="operation_16271" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Overloaded operators///** Overloaded [] operator so that OmgAlgorithmSet can be treated &amp;#010;like an array.&amp;#010;@param int thePosition - position of element to retrieve from the collection&amp;#010;@return OmgAlgorithm - the algorithm at this position" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16273" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mame;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16274" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mDescription;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16276" tag="tblock_5" canDelete="false" indentLevel="1" text=" AlgorithmsHash mAlgorithmsHash;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16273" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16273" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16273" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16273" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16274" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16274" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16274" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16274" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16276" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16276" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16276" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16276" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGALGORITHMSET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgalgorithmset.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16273" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16273" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mame;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16273" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16273" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16273" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16273" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16274" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16274" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mDescription;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16274" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16274" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16274" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16274" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16276" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16276" tag="tblock_5" canDelete="false" indentLevel="1" text=" AlgorithmsHash mAlgorithmsHash;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16276" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16276" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16276" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16276" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16277" parent_class="16277" fileExt=".h" fileName="omgclimatedataprocessor" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGCLIMATEDATAPROCESSOR_H&amp;#010;#define OMGCLIMATEDATAPROCESSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16277" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgClimateDataProcessor&amp;#010;dataprocessor.h  -  description&amp;#010;-------------------&amp;#010;begin                : Wed Jan 8 2003&amp;#010;copyright            : (C) 2003 by Tim Sutton&amp;#010;email                : t.sutton@reading.ac.uk&amp;#010;//***************************************************************************&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;//**This class contains various functions that can be used to post process raw climate data&amp;#010;sets such as obtained from the IPCC. Please use only ANSI C++ here (no QT) so that this&amp;#010;this class will be portable to different platforms.&amp;#010;&amp;#010;Methods that take ArrayLengths as parameters should be passed as the number of elements,&amp;#010;not the vector size. e.g. an vector of 12 months is int[11] but should be passed as 12.&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgClimateDataProcessor ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16278" tag="operation_16278" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Default constructor" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16280" tag="operation_16280" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Destructor" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16281" tag="operation_16281" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method calculates the mean value over the quarter with the lowest values&amp;#010;(i.e. the three consecutive months with the minimum combined total)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16284" tag="operation_16284" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method calculates the mean value over the quarter with the highest values&amp;#010;(i.e. the three consecutive months with the maximum combined total)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16286" tag="operation_16286" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method returns the month that starts the quarter with the highest&amp;#010;average values" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16288" tag="operation_16288" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method returns the month that starts the quarter with the lowest&amp;#010;average values. For example, if 12 months were :&amp;#010;1   2   3   4   5   6   7   8   9   10  11  12&amp;#010;-----------------------------------------------&amp;#010;21 18  19  15   12  5   6   8   12  15  16  20&amp;#010;Then the return from this method would be 6 because&amp;#010;5,6 and 8 combined form the lowest quarter." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16290" tag="operation_16290" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method will return the mean over three months in&amp;#010;theClimateVector, starting at theStartMonth." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16293" tag="operation_16293" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Given an vector, this method will return the value of the smallest&amp;#010;element in the vector." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16295" tag="operation_16295" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Given an vector, this function will return the value of the largest element&amp;#010;in the vector." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16297" tag="operation_16297" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Given two arrays (e.g. min temp and max temp) range will determine&amp;#010;the smallest and largest values that occur and return the difference.&amp;#010;The function is indescriminate as to whether the values are in the same&amp;#010;month or not.&amp;#010;@see greatestMonthlyRange" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16300" tag="operation_16300" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Given two arrays (e.g. min temp and max temp) range will determine&amp;#010;the smallest and largest values that occur and return the difference.&amp;#010;The value of the max-min difference for a given month that is the&amp;#010;greatest is returned.&amp;#010;@see greatestTotalRange" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16303" tag="operation_16303" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This function will return the standard deviation of the climate vector." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16305" tag="operation_16305" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A new vector the same length as original will be returned when each element&amp;#010;of the input vector that is greater or equal to threshold will be true. Values&amp;#010;below threshold will be assigned false.&amp;#010;@param &amp;QVector &lt;float> A vector of float values&amp;#010;@param float the desired threshold&amp;#010;@return bool True on success otherwise something went wrong." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16309" tag="operation_16309" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded version of the above function.&amp;#010;If the input value  is greater or equal to threshold will be true. Values&amp;#010;below threshold will be assigned false.&amp;#010;@param float A vector of float values&amp;#010;@param float the desired threshold&amp;#010;@return bool True on success otherwise something went wrong." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16312" tag="operation_16312" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Determine the sum of a vector of values&amp;#010;&amp;#010;@param QVector &lt;float> values to be summed&amp;#010;@return float sum of values provided in input." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16314" tag="operation_16314" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This function will return the sum of theClimateVector divided by the&amp;#010;number of elements in theClimateVector." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16316" tag="operation_16316" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This function will return the value of the element in theClimateVector&amp;#010;that corresponds to theMonth." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16319" tag="operation_16319" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This function will return an integer between 1 and 12 corresponding to&amp;#010;the month with the highest value." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16321" tag="operation_16321" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This function will return an integer between 1 and 12 corresponding to&amp;#010;the month with the lowest value." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16323" tag="operation_16323" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This function will return an integer in the range 0-12 representing&amp;#010;the number of months in theClimateVector where the value for that&amp;#010;month is above zero. Typically used to calculate how many months&amp;#010;in the year there are where the average temp is above freezing." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16325" tag="operation_16325" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This value will return the mean value of months in theClimateVector&amp;#010; where the corresponding months in theFrostArray have no frost free days." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16328" tag="tblock_0" canDelete="false" indentLevel="1" text=" float mNoData;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16328" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16328" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16328" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16328" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGCLIMATEDATAPROCESSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatedataprocessor.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16328" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16328" tag="tblock_0" canDelete="false" indentLevel="1" text=" float mNoData;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16328" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16328" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16328" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16328" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16329" parent_class="16329" fileExt=".h" fileName="omgclimatefilereader" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGCLIMATEFILEREADER_H&amp;#010;#define OMGCLIMATEFILEREADER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;filetype.h&quot;&amp;#010;#include &quot;gdaldatatype.h&quot;&amp;#010;#include &quot;unsigned int.h&quot;&amp;#010;#include &quot;ifstream.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16329" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgClimateFileReader&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;///other includes/** This class will handle opening a file containing a climate matrix and iterating through the file in a columnwise / rowwise manner." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgClimateFileReader ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16347" tag="operation_16347" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="////   Public methods///** Default constructor" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16348" tag="operation_16348" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor (default ctor is in private section to stop progrmmers using it!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16351" tag="operation_16351" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Destructor " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16352" tag="operation_16352" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Setup the file reader &amp;#010;@param theFileNameString the name of the file to be read&amp;#010;@param theFileType the file format to be read&amp;#010;@return bool true on success" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16355" tag="operation_16355" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get the next available element from the file matrix.&amp;#010;The cell index will be advanced by one.&amp;#010;@return float - the value at the element at the next cell." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16356" tag="operation_16356" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for long mCurrentElementNo.&amp;#010;Calculated as (currentRowLong * rows) + mCurrentColumn.&amp;#010;@return long - the current position in the current block." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16358" tag="operation_16358" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor property of long currentRowLong.&amp;#010;@return long - the current row position in the current block." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16359" tag="operation_16359" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor property of long mCurrentColumn.&amp;#010;@return long - the current row position in the current block." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16360" tag="operation_16360" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for the int mFileHeaderLines.&amp;#010;@return int - the number of header lines before each block" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16362" tag="operation_16362" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for int mActiveBlockNo.&amp;#010;It will move the file pointer too the start of the data block indicated&amp;#010;by the start month.&amp;#010;This is really only applicable for file formats that include&amp;#010;muliple months / years data in a single file such as Hadley SRES data.&amp;#010;@param theNewVal - an unsigned int representing the new start block.&amp;#010;@return bool - flag indicating success or failure" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16366" tag="operation_16366" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor of int mActiveBlockNo.&amp;#010;This is really only applicable for file formats that include&amp;#010;muliple months / years data in a single file such as Hadley SRES data.&amp;#010;@return bool - flag indicating success or failure" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16367" tag="operation_16367" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for bool endOfMatrixFlag.&amp;#010;@return bool - Current state of endOfMatrixFlag" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16369" tag="operation_16369" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for QString Filename.&amp;#010;@return QString - the current filename" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16370" tag="operation_16370" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of FileTypeEnum fileType.&amp;#010;@note The return type is OmgClimateFileReader::FileTypeEnum because the calling&amp;#010;class does not have the enum in its name space so we need to.&amp;#010;explicitly specifiy the namespace.&amp;#010;@return OmgClimateFileReader::FileTypeEnum - the file format of the current file." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16372" tag="operation_16372" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of long mYDim." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16373" tag="operation_16373" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of long mXDim." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16374" tag="operation_16374" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of int mBlockHeaderLines." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16375" tag="operation_16375" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return the various metadata stored for the open file." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16376" tag="operation_16376" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of blockStartPos." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16377" tag="operation_16377" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Move the internal file pointer to the start of the file header." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16378" tag="operation_16378" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The number of blocks available in this file" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16379" tag="operation_16379" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Find out how many blocks (useful in multiblock formats such as SRES) are in this file." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16380" tag="operation_16380" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A helper function to see if the block markers are correct.&amp;#010;The value of the first element in each block&amp;#010;will be printed to console on std out.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16381" tag="operation_16381" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A helper function to see if the block markers are correct.&amp;#010;The value of the last element in each block&amp;#010;will be printed to console on std out.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16382" tag="operation_16382" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A helper function to see if the block markers are correct.&amp;#010;The value of each block marker file seek position will be printed.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16383" tag="operation_16383" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A helper function to show a whole block.&amp;#010;@note This will likely be removed!" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16385" tag="operation_16385" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theError " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16387" tag="operation_16387" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMessage " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16400" tag="tblock_0" canDelete="false" indentLevel="1" text="static  const unsigned int mMaxLineLength;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="////   Private attributes///** This is a maximum length for lines that shall be skipped" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16401" tag="tblock_2" canDelete="false" indentLevel="1" text=" unsigned int mXDim;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is the xDim (columns) of a matrix for one month (files may contain more than one matrix)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16402" tag="tblock_5" canDelete="false" indentLevel="1" text=" unsigned int mYDim;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Number of rows in matrix for one month / year" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16403" tag="tblock_8" canDelete="false" indentLevel="1" text=" FileType mFileType;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Type of file we are reading." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16404" tag="tblock_11" canDelete="false" indentLevel="1" text=" QString mFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The name of the file, including full path if neccessary." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16405" tag="tblock_14" canDelete="false" indentLevel="1" text=" bool mEndOfMatrixFlag;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Whether the file pointer has reached the end of the matrix" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16406" tag="tblock_17" canDelete="false" indentLevel="1" text=" int mActiveBlockNo;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Block in file that matrix extraction should start at." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16407" tag="tblock_20" canDelete="false" indentLevel="1" text=" int mFileHeaderLines;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Number of header lines specifically at start of file." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16408" tag="tblock_23" canDelete="false" indentLevel="1" text=" unsigned int mCurrentColumn;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Current column in the matrix" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16409" tag="tblock_26" canDelete="false" indentLevel="1" text=" unsigned int mCurrentRow;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Current row in matrix" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16410" tag="tblock_29" canDelete="false" indentLevel="1" text=" unsigned int mCurrentElementNo;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Position in the matrix expressed as (current row * cols) + current col" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16413" tag="tblock_32" canDelete="false" indentLevel="1" text=" std::ifstream mTextStream;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The text stream that will be used to pull data from the file" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16414" tag="tblock_35" canDelete="false" indentLevel="1" text=" char mBuffer;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is a buffer for holding read in lines" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16417" tag="tblock_38" canDelete="false" indentLevel="1" text=" GDALDataset* mGdalDataset;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16418" tag="tblock_41" canDelete="false" indentLevel="1" text=" int mBlockHeaderLines;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Number of header lines per month data block (applicable to files containing multiple months in a single file only." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16419" tag="tblock_44" canDelete="false" indentLevel="1" text=" int mBlockStartPos;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16420" tag="tblock_47" canDelete="false" indentLevel="1" text=" QVector&lt; int > mBlockMarkersVector;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is a vector  that stores the filepos for each  datablock in the fil" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16400" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16400" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@return the value of mMaxLineLength" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16400" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16400" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@param value the value of mMaxLineLength" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16401" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16401" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@return the value of mXDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16401" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16401" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@param value the value of mXDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16402" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16402" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@return the value of mYDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16402" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16402" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@param value the value of mYDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16403" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16403" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@return the value of mFileType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16403" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16403" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@param value the value of mFileType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16404" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16404" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@return the value of mFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16404" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16404" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@param value the value of mFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16405" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="16405" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@return the value of mEndOfMatrixFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16405" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16405" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@param value the value of mEndOfMatrixFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16406" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16406" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@return the value of mActiveBlockNo" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16406" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16406" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@param value the value of mActiveBlockNo" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16407" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16407" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@return the value of mFileHeaderLines" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16407" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16407" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@param value the value of mFileHeaderLines" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16408" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16408" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@return the value of mCurrentColumn" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16408" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16408" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@param value the value of mCurrentColumn" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16409" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="16409" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@return the value of mCurrentRow" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16409" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="16409" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@param value the value of mCurrentRow" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16410" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="16410" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@return the value of mCurrentElementNo" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16410" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="16410" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@param value the value of mCurrentElementNo" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16413" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="16413" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@return the value of mTextStream" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16413" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="16413" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@param value the value of mTextStream" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16414" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="16414" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@return the value of mBuffer" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16414" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="16414" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@param value the value of mBuffer" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16417" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="16417" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@return the value of mGdalDataset" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16417" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="16417" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@param value the value of mGdalDataset" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16418" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="16418" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@return the value of mBlockHeaderLines" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16418" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="16418" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@param value the value of mBlockHeaderLines" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16419" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="16419" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@return the value of mBlockStartPos" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16419" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="16419" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@param value the value of mBlockStartPos" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16420" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="16420" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@return the value of mBlockMarkersVector" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16420" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="16420" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@param value the value of mBlockMarkersVector" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16389" tag="operation_16389" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator of FileTypeEnum fileType.&amp;#010;@note You should specify the file type BEFORE opening the file.&amp;#010;@param theNewVal - a FileTypeEnum specifying the input file type.&amp;#010;@return bool - flag indicating success or failure" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16391" tag="operation_16391" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Use the header info for a given file type to determine the&amp;#010;begining of the data block(s) and position the&amp;#010;blockStartPos there. This method will need to be called&amp;#010;explicitly by the client app so that when multiple&amp;#010;copies of the same file are being opened, we dont need to&amp;#010;do the same thing each time.&amp;#010;@param forceFlag - Force parsing file for block markers. By default this&amp;#010;is set to false and the file will only be parsed if an accompanying&amp;#010;.bmr file is found.&amp;#010;@return QVector &lt;int> - a qvalue vector contining a series of&amp;#010;file offsets (ulongs) which mark the start of each data block." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16394" tag="operation_16394" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A helper method for gdal reading to get a value into the correct type.&amp;#010;@param theData a scanline of data from gdal.&amp;#010;@param theType the gdal datatype of data in this scanline&amp;#010;@param theIndex Postion inthe scanline to read from.&amp;#010;@return float containing the value we read in" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGCLIMATEFILEREADER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatefilereader.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16400" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="////   Private attributes///** This is a maximum length for lines that shall be skipped" />
       </header>
       <ccfdeclarationcodeblock parent_id="16400" tag="tblock_0" canDelete="false" indentLevel="1" text="static  const unsigned int mMaxLineLength;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="////   Private attributes///** This is a maximum length for lines that shall be skipped" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16400" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16400" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@return the value of mMaxLineLength" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16400" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16400" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mMaxLineLength&amp;#010;////   Private attributes///** This is a maximum length for lines that shall be skipped&amp;#010;@param value the value of mMaxLineLength" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16401" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is the xDim (columns) of a matrix for one month (files may contain more than one matrix)." />
       </header>
       <ccfdeclarationcodeblock parent_id="16401" tag="tblock_2" canDelete="false" indentLevel="1" text=" unsigned int mXDim;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is the xDim (columns) of a matrix for one month (files may contain more than one matrix)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16401" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16401" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@return the value of mXDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16401" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16401" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mXDim&amp;#010;This is the xDim (columns) of a matrix for one month (files may contain more than one matrix).&amp;#010;@param value the value of mXDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16402" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of rows in matrix for one month / year" />
       </header>
       <ccfdeclarationcodeblock parent_id="16402" tag="tblock_5" canDelete="false" indentLevel="1" text=" unsigned int mYDim;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Number of rows in matrix for one month / year" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16402" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16402" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@return the value of mYDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16402" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16402" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mYDim&amp;#010;Number of rows in matrix for one month / year&amp;#010;@param value the value of mYDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16403" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Type of file we are reading." />
       </header>
       <ccfdeclarationcodeblock parent_id="16403" tag="tblock_8" canDelete="false" indentLevel="1" text=" FileType mFileType;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Type of file we are reading." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16403" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16403" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@return the value of mFileType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16403" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16403" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFileType&amp;#010;Type of file we are reading.&amp;#010;@param value the value of mFileType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16404" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the file, including full path if neccessary." />
       </header>
       <ccfdeclarationcodeblock parent_id="16404" tag="tblock_11" canDelete="false" indentLevel="1" text=" QString mFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The name of the file, including full path if neccessary." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16404" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16404" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@return the value of mFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16404" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16404" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFileName&amp;#010;The name of the file, including full path if neccessary.&amp;#010;@param value the value of mFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Whether the file pointer has reached the end of the matrix" />
       </header>
       <ccfdeclarationcodeblock parent_id="16405" tag="tblock_14" canDelete="false" indentLevel="1" text=" bool mEndOfMatrixFlag;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Whether the file pointer has reached the end of the matrix" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16405" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="16405" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@return the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16405" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16405" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mEndOfMatrixFlag&amp;#010;Whether the file pointer has reached the end of the matrix&amp;#010;@param value the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16406" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Block in file that matrix extraction should start at." />
       </header>
       <ccfdeclarationcodeblock parent_id="16406" tag="tblock_17" canDelete="false" indentLevel="1" text=" int mActiveBlockNo;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Block in file that matrix extraction should start at." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16406" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16406" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@return the value of mActiveBlockNo" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16406" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16406" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mActiveBlockNo&amp;#010;Block in file that matrix extraction should start at.&amp;#010;@param value the value of mActiveBlockNo" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16407" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of header lines specifically at start of file." />
       </header>
       <ccfdeclarationcodeblock parent_id="16407" tag="tblock_20" canDelete="false" indentLevel="1" text=" int mFileHeaderLines;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Number of header lines specifically at start of file." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16407" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16407" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@return the value of mFileHeaderLines" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16407" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16407" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFileHeaderLines&amp;#010;Number of header lines specifically at start of file.&amp;#010;@param value the value of mFileHeaderLines" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16408" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Current column in the matrix" />
       </header>
       <ccfdeclarationcodeblock parent_id="16408" tag="tblock_23" canDelete="false" indentLevel="1" text=" unsigned int mCurrentColumn;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Current column in the matrix" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16408" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16408" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@return the value of mCurrentColumn" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16408" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16408" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentColumn&amp;#010;Current column in the matrix&amp;#010;@param value the value of mCurrentColumn" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16409" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Current row in matrix" />
       </header>
       <ccfdeclarationcodeblock parent_id="16409" tag="tblock_26" canDelete="false" indentLevel="1" text=" unsigned int mCurrentRow;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Current row in matrix" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16409" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="16409" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@return the value of mCurrentRow" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16409" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="16409" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentRow&amp;#010;Current row in matrix&amp;#010;@param value the value of mCurrentRow" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16410" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Position in the matrix expressed as (current row * cols) + current col" />
       </header>
       <ccfdeclarationcodeblock parent_id="16410" tag="tblock_29" canDelete="false" indentLevel="1" text=" unsigned int mCurrentElementNo;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Position in the matrix expressed as (current row * cols) + current col" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16410" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="16410" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@return the value of mCurrentElementNo" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16410" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="16410" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentElementNo&amp;#010;Position in the matrix expressed as (current row * cols) + current col&amp;#010;@param value the value of mCurrentElementNo" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16413" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The text stream that will be used to pull data from the file" />
       </header>
       <ccfdeclarationcodeblock parent_id="16413" tag="tblock_32" canDelete="false" indentLevel="1" text=" std::ifstream mTextStream;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The text stream that will be used to pull data from the file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16413" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="16413" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@return the value of mTextStream" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16413" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="16413" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mTextStream&amp;#010;The text stream that will be used to pull data from the file&amp;#010;@param value the value of mTextStream" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16414" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a buffer for holding read in lines" />
       </header>
       <ccfdeclarationcodeblock parent_id="16414" tag="tblock_35" canDelete="false" indentLevel="1" text=" char mBuffer;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is a buffer for holding read in lines" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16414" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="16414" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@return the value of mBuffer" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16414" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="16414" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBuffer&amp;#010;This is a buffer for holding read in lines&amp;#010;@param value the value of mBuffer" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16417" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream" />
       </header>
       <ccfdeclarationcodeblock parent_id="16417" tag="tblock_38" canDelete="false" indentLevel="1" text=" GDALDataset* mGdalDataset;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16417" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="16417" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@return the value of mGdalDataset" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16417" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="16417" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mGdalDataset&amp;#010;if the file type is a gdal dataset we will store the handle to the dataset here rather than in the text stream&amp;#010;@param value the value of mGdalDataset" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16418" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of header lines per month data block (applicable to files containing multiple months in a single file only." />
       </header>
       <ccfdeclarationcodeblock parent_id="16418" tag="tblock_41" canDelete="false" indentLevel="1" text=" int mBlockHeaderLines;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Number of header lines per month data block (applicable to files containing multiple months in a single file only." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16418" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="16418" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@return the value of mBlockHeaderLines" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16418" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="16418" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBlockHeaderLines&amp;#010;Number of header lines per month data block (applicable to files containing multiple months in a single file only.&amp;#010;@param value the value of mBlockHeaderLines" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16419" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset." />
       </header>
       <ccfdeclarationcodeblock parent_id="16419" tag="tblock_44" canDelete="false" indentLevel="1" text=" int mBlockStartPos;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16419" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="16419" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@return the value of mBlockStartPos" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16419" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="16419" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBlockStartPos&amp;#010;The offset of the start of the header. This may not be after the header in instances where files contain more the one dataset.&amp;#010;@param value the value of mBlockStartPos" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16420" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a vector  that stores the filepos for each  datablock in the fil" />
       </header>
       <ccfdeclarationcodeblock parent_id="16420" tag="tblock_47" canDelete="false" indentLevel="1" text=" QVector&lt; int > mBlockMarkersVector;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is a vector  that stores the filepos for each  datablock in the fil" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16420" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="16420" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@return the value of mBlockMarkersVector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16420" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="16420" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mBlockMarkersVector&amp;#010;This is a vector  that stores the filepos for each  datablock in the fil&amp;#010;@param value the value of mBlockMarkersVector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16363" parent_class="16363" fileExt=".h" fileName="unsigned int" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_INT_H&amp;#010;#define UNSIGNED_INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16363" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class unsigned int&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="unsigned int ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned int.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16397" parent_class="16397" fileExt=".h" fileName="gdaldatatype" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GDALDATATYPE_H&amp;#010;#define GDALDATATYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16397" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class GDALDataType&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="GDALDataType ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GDALDATATYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        gdaldatatype.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader16412" parent_class="16412" fileExt=".h" fileName="ifstream" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef IFSTREAM_H&amp;#010;#define IFSTREAM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16412" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ifstream&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ifstream ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //IFSTREAM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ifstream.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader17063" parent_class="17063" fileExt=".h" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17063" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        string.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16415" parent_class="16415" fileExt=".h" fileName="gdaldataset" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GDALDATASET_H&amp;#010;#define GDALDATASET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16415" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class GDALDataset&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="GDALDataset ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GDALDATASET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        gdaldataset.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16421" parent_class="16421" fileExt=".h" fileName="omgclimatefilegroup" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGCLIMATEFILEGROUP_H&amp;#010;#define OMGCLIMATEFILEGROUP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16421" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgClimateFileGroup&amp;#010;filegroup.h  -  description&amp;#010;-------------------&amp;#010;begin                : Sat May 10 2003&amp;#010;copyright            : (C) 2003 by Tim Sutton&amp;#010;email                : t.sutton@reading.ac.uk&amp;#010;//***************************************************************************&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;//**A file group manages a collection of OmgClimateFileReader objects and is used&amp;#010;to step through several filereaders simultaneously.&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgClimateFileGroup ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16425" tag="operation_16425" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor for filegroup. Initialises the filereader vector." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16426" tag="operation_16426" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Desctructor - closes each file in the filereader vector and then destroys the vector." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16427" tag="operation_16427" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Close all files in the file group" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16428" tag="operation_16428" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Add a new file reader object to the filegroup and position the fpos_t at the start of the data block " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16431" tag="operation_16431" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get the next element from each fileReader and return the result as a vector." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16432" tag="operation_16432" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Used to find out how meny files are in the file group &amp;#010;@return unsingned int representing the number of files int eh group." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16433" tag="operation_16433" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for the mElementCount property. This property tells us&amp;#010;how many cells in any one data block in a filereader exist.&amp;#010;@return int - The number of cells in a block of the first filereader." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16434" tag="operation_16434" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16435" tag="operation_16435" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16436" tag="operation_16436" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of bool mEndOfMatrixFlag." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16437" tag="operation_16437" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Move to the start of the active data block" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16438" tag="operation_16438" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16440" tag="operation_16440" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16444" tag="tblock_0" canDelete="false" indentLevel="1" text=" OmgClimateFileReaderVector mReaderVector;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is the container for all the file readers in this group." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16445" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mElementCount;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16446" tag="tblock_5" canDelete="false" indentLevel="1" text=" int mXDim;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16447" tag="tblock_8" canDelete="false" indentLevel="1" text=" int mYDim;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16448" tag="tblock_11" canDelete="false" indentLevel="1" text=" bool mEndOfMatrixFlag;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16444" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16444" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@return the value of mReaderVector" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16444" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16444" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@param value the value of mReaderVector" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16445" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16445" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mElementCount" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16445" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16445" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mElementCount" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16446" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16446" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mXDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16446" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16446" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mXDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16447" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16447" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mYDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16447" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16447" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mYDim" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16448" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16448" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@return the value of mEndOfMatrixFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16448" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16448" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@param value the value of mEndOfMatrixFlag" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGCLIMATEFILEGROUP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatefilegroup.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16444" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is the container for all the file readers in this group." />
       </header>
       <ccfdeclarationcodeblock parent_id="16444" tag="tblock_0" canDelete="false" indentLevel="1" text=" OmgClimateFileReaderVector mReaderVector;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is the container for all the file readers in this group." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16444" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16444" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@return the value of mReaderVector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16444" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16444" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mReaderVector&amp;#010;This is the container for all the file readers in this group.&amp;#010;@param value the value of mReaderVector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16445" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="16445" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mElementCount;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16445" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16445" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mElementCount" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16445" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16445" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mElementCount&amp;#010;The number of cells (xdim * ydim) in the block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mElementCount" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16446" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="16446" tag="tblock_5" canDelete="false" indentLevel="1" text=" int mXDim;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16446" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16446" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mXDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16446" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16446" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mXDim&amp;#010;The number of cells in the x dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mXDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16447" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="16447" tag="tblock_8" canDelete="false" indentLevel="1" text=" int mYDim;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16447" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16447" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@return the value of mYDim" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16447" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16447" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mYDim&amp;#010;The number of cells in the y dimension in a block in the first file in the&amp;#010;file group. It is assumed that all files in the group have the same block&amp;#010;dimensions.&amp;#010;@param value the value of mYDim" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16448" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this." />
       </header>
       <ccfdeclarationcodeblock parent_id="16448" tag="tblock_11" canDelete="false" indentLevel="1" text=" bool mEndOfMatrixFlag;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16448" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16448" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@return the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16448" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16448" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mEndOfMatrixFlag&amp;#010;A flag to show whether the end of the matrix has been reached.&amp;#010;@note the first fileReader in the fileGroup is used to determine this.&amp;#010;@param value the value of mEndOfMatrixFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16449" parent_class="16449" fileExt=".h" fileName="omgfilewriter" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGFILEWRITER_H&amp;#010;#define OMGFILEWRITER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;filetype.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qfile.h&quot;&amp;#010;#include &quot;qtextstream.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16449" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgFileWriter&amp;#010;filewriter.h  -  description&amp;#010;-------------------&amp;#010;begin                : Tue May 13 2003&amp;#010;copyright            : (C) 2003 by Tim Sutton&amp;#010;email                : t.sutton@reading.ac.uk&amp;#010;//***************************************************************************&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;//**A OmgFileWriter is used to store the results of the climate data processor in a persistant manner.&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgFileWriter ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16454" tag="operation_16454" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16455" tag="operation_16455" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor&amp;#010;@param theFileName - a QString containing the name of the output file.&amp;#010;@param theFileFormat - the output format as defined in FileType.&amp;#010;@see FileType" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16458" tag="operation_16458" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Destructor" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16459" tag="operation_16459" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write a float element to the output file.&amp;#010;@param theElementFloat - the variable that is to be written off to file.&amp;#010;@return bool - indicating success or failure of the write operation." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16461" tag="operation_16461" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write a ouput nodata element to the output file.&amp;#010;@return bool - indicating success or failure of the write operation." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16462" tag="operation_16462" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write a header to the output file.&amp;#010;@param theString - the variable that is to be written off to file.&amp;#010;@return bool - indicating successor failure of the write operation." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16464" tag="operation_16464" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of QString fileNameString.&amp;#010;@return QString - containing the name of the file." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16465" tag="operation_16465" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Close the currently open file.&amp;#010;@return bool - indicating successor failure of the close operation." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16466" tag="operation_16466" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method sends a line break to the output file.&amp;#010;@return bool - indicating successor failure of the write operation." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16467" tag="operation_16467" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16468" tag="operation_16468" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16469" tag="operation_16469" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theQString " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16471" tag="operation_16471" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for input no data value" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16473" tag="operation_16473" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for output no data value" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16476" tag="tblock_0" canDelete="false" indentLevel="1" text=" QFile mFile;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file handle containing our output data matrix." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16478" tag="tblock_2" canDelete="false" indentLevel="1" text=" QTextStream mTextStream;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A text stream associated with the output file that&amp;#010;will be used when writing data to the file." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16479" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString seperatorString;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The separater that will be used between each&amp;#010; value as its written to file" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16480" tag="tblock_8" canDelete="false" indentLevel="1" text=" QString fileNameString;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The filename that is being written to" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16481" tag="tblock_11" canDelete="false" indentLevel="1" text=" bool isWriteableFlag;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16482" tag="tblock_14" canDelete="false" indentLevel="1" text=" float mInputNoData;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The no data value that may be passed in to write element" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16483" tag="tblock_17" canDelete="false" indentLevel="1" text=" float mOutputNoData;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The no data value that should be written out by write element" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16476" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16476" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@return the value of mFile" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16476" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16476" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@param value the value of mFile" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16478" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16478" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@return the value of mTextStream" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16478" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16478" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@param value the value of mTextStream" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16479" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16479" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@return the value of seperatorString" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16479" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16479" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@param value the value of seperatorString" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16480" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16480" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@return the value of fileNameString" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16480" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16480" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@param value the value of fileNameString" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16481" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16481" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@return the value of isWriteableFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16481" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16481" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@param value the value of isWriteableFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16482" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="16482" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@return the value of mInputNoData" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16482" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16482" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@param value the value of mInputNoData" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16483" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16483" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@return the value of mOutputNoData" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16483" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16483" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@param value the value of mOutputNoData" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGFILEWRITER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgfilewriter.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16476" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file handle containing our output data matrix." />
       </header>
       <ccfdeclarationcodeblock parent_id="16476" tag="tblock_0" canDelete="false" indentLevel="1" text=" QFile mFile;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file handle containing our output data matrix." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16476" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16476" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@return the value of mFile" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16476" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16476" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFile&amp;#010;The file handle containing our output data matrix.&amp;#010;@param value the value of mFile" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16478" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A text stream associated with the output file that&amp;#010;will be used when writing data to the file." />
       </header>
       <ccfdeclarationcodeblock parent_id="16478" tag="tblock_2" canDelete="false" indentLevel="1" text=" QTextStream mTextStream;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A text stream associated with the output file that&amp;#010;will be used when writing data to the file." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16478" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16478" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@return the value of mTextStream" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16478" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16478" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mTextStream&amp;#010;A text stream associated with the output file that&amp;#010;will be used when writing data to the file.&amp;#010;@param value the value of mTextStream" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16479" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The separater that will be used between each&amp;#010; value as its written to file" />
       </header>
       <ccfdeclarationcodeblock parent_id="16479" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString seperatorString;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The separater that will be used between each&amp;#010; value as its written to file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16479" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16479" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@return the value of seperatorString" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16479" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16479" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of seperatorString&amp;#010;The separater that will be used between each&amp;#010; value as its written to file&amp;#010;@param value the value of seperatorString" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16480" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The filename that is being written to" />
       </header>
       <ccfdeclarationcodeblock parent_id="16480" tag="tblock_8" canDelete="false" indentLevel="1" text=" QString fileNameString;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The filename that is being written to" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16480" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16480" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@return the value of fileNameString" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16480" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16480" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileNameString&amp;#010;The filename that is being written to&amp;#010;@param value the value of fileNameString" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16481" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false." />
       </header>
       <ccfdeclarationcodeblock parent_id="16481" tag="tblock_11" canDelete="false" indentLevel="1" text=" bool isWriteableFlag;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16481" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16481" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@return the value of isWriteableFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16481" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16481" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isWriteableFlag&amp;#010;State of the filewriter - file open etc errors will&amp;#010;mke the writeable state false.&amp;#010;@param value the value of isWriteableFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16482" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The no data value that may be passed in to write element" />
       </header>
       <ccfdeclarationcodeblock parent_id="16482" tag="tblock_14" canDelete="false" indentLevel="1" text=" float mInputNoData;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The no data value that may be passed in to write element" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16482" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="16482" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@return the value of mInputNoData" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16482" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16482" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mInputNoData&amp;#010;The no data value that may be passed in to write element&amp;#010;@param value the value of mInputNoData" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16483" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The no data value that should be written out by write element" />
       </header>
       <ccfdeclarationcodeblock parent_id="16483" tag="tblock_17" canDelete="false" indentLevel="1" text=" float mOutputNoData;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The no data value that should be written out by write element" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16483" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16483" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@return the value of mOutputNoData" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16483" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16483" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mOutputNoData&amp;#010;The no data value that should be written out by write element&amp;#010;@param value the value of mOutputNoData" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16475" parent_class="16475" fileExt=".h" fileName="qfile" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QFILE_H&amp;#010;#define QFILE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16475" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QFile&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QFile ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QFILE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qfile.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16477" parent_class="16477" fileExt=".h" fileName="qtextstream" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QTEXTSTREAM_H&amp;#010;#define QTEXTSTREAM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16477" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QTextStream&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QTextStream ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QTEXTSTREAM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qtextstream.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16484" parent_class="16484" fileExt=".h" fileName="omgfilewriterstruct" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGFILEWRITERSTRUCT_H&amp;#010;#define OMGFILEWRITERSTRUCT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16484" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgFileWriterStruct&amp;#010;climatedataprocessor.h  -  description&amp;#010;-------------------&amp;#010;begin                : Thu May 15 2003&amp;#010;copyright            : (C) 2003 by Tim Sutton&amp;#010;email                : t.sutton@reading.ac.uk&amp;#010;//***************************************************************************&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;//**&amp;#010;This struct is simple container used in the 'run' method.&amp;#010;@todo Remove this if possible" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16486" tag="tblock_0" canDelete="false" indentLevel="1" text=" OmgFileWriter* fileWriter;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filewriter pointer" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16487" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString fullFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The fill path and file name of the file refenced" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgFileWriterStruct ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16486" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16486" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@return the value of fileWriter" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16486" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16486" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@param value the value of fileWriter" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16487" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16487" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@return the value of fullFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16487" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16487" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@param value the value of fullFileName" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGFILEWRITERSTRUCT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgfilewriterstruct.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16486" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filewriter pointer" />
       </header>
       <ccfdeclarationcodeblock parent_id="16486" tag="tblock_0" canDelete="false" indentLevel="1" text=" OmgFileWriter* fileWriter;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filewriter pointer" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16486" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16486" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@return the value of fileWriter" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16486" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16486" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileWriter&amp;#010;A filewriter pointer&amp;#010;@param value the value of fileWriter" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16487" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The fill path and file name of the file refenced" />
       </header>
       <ccfdeclarationcodeblock parent_id="16487" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString fullFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The fill path and file name of the file refenced" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16487" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16487" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@return the value of fullFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16487" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16487" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fullFileName&amp;#010;The fill path and file name of the file refenced&amp;#010;@param value the value of fullFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16488" parent_class="16488" fileExt=".h" fileName="omgclimatedataprocessorcontroller" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGCLIMATEDATAPROCESSORCONTROLLER_H&amp;#010;#define OMGCLIMATEDATAPROCESSORCONTROLLER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;filetype.h&quot;&amp;#010;#include &quot;filetype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16488" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgClimateDataProcessorController&amp;#010;The OmgClimateDataProcessorController calculates specific climate variables using&amp;#010;DataProcessor functions.&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgClimateDataProcessorController ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16492" tag="operation_16492" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Default constructor" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16493" tag="operation_16493" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="OmgClimateDataProcessorController(&amp;#010;int theFileStartYear,&amp;#010;int theJobStartYear,&amp;#010;int theJobEndYear,&amp;#010;QString theInputFileTypeString,&amp;#010;QString theOutputFileTypeString&amp;#010;);&amp;#010;" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16494" tag="operation_16494" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="// Getters and setters/** Mutator for filename of the meanTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16496" tag="operation_16496" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the meanTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16497" tag="operation_16497" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the minTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16499" tag="operation_16499" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the minTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16500" tag="operation_16500" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the maxTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16502" tag="operation_16502" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the maxTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16503" tag="operation_16503" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the diurnalTemp calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16505" tag="operation_16505" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the diurnalTemp calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16506" tag="operation_16506" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the mean precipitation calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16508" tag="operation_16508" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the mean precipitation calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16509" tag="operation_16509" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the frost days calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16511" tag="operation_16511" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the frost days calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16512" tag="operation_16512" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the solar radiation calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16514" tag="operation_16514" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the solar radiation calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16515" tag="operation_16515" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for filename of the wind speed calculation inputs.&amp;#010;If the files are in series, the name should be of the first file in the series.&amp;#010;@param theFileName - The new filename for the calculation inputs.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16517" tag="operation_16517" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for filename of the wind speed calculation inputs.&amp;#010;@return a QString containing the filename (which will be the first file&amp;#010;in the series if the files are in series)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16518" tag="operation_16518" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for directory name for the calculation output files.&amp;#010;@param theFilePathString - The name of an existing directory where the&amp;#010;output files will be stored.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16520" tag="operation_16520" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for the file output path.&amp;#010;@return a QString containing the directory name." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16521" tag="operation_16521" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for int fileStartYear.&amp;#010;@param theYear - The year of the first 12 blocks of data&amp;#010;in the file (or the 12 files if the files are in series).&amp;#010;@return void - No return.&amp;#010;@note If the files are in series, jobStartYear should be the same as&amp;#010;fileStartYear and jobEndYear!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16523" tag="operation_16523" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for int fileStartYear." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16524" tag="operation_16524" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for int setJobStartYear.&amp;#010;@param theYear - The first year in the input file(s) to be read.&amp;#010;@return void - No return.&amp;#010;@note If the files are in series, jobStartYear should be the same as&amp;#010;fileStartYear and jobEndYear!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16526" tag="operation_16526" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for int jobStartYear.&amp;#010;@return int - the current value of the first year in the input&amp;#010;files to be read." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16527" tag="operation_16527" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for int jobEndYear.&amp;#010;@param theYear - The last year in the input file(s) to be read.&amp;#010;@return void - No return&amp;#010;@note If the files are in series, jobStartYear should be the same as&amp;#010;fileStartYear and jobEndYear!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16529" tag="operation_16529" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for int jobEndYear.&amp;#010;@return int - the current value of the last year in the input&amp;#010;files to be read." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16530" tag="operation_16530" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator forOmgClimateFileReader::FileType inputFileType.&amp;#010;@param theInputFileType - The input filetype as specified inOmgClimateFileReader::FileType&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16532" tag="operation_16532" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator forOmgClimateFileReader::FileType inputFileType.&amp;#010;This is an overloaded version of above that takes a string and looks up the enum.&amp;#010;@param theInputFileTypeString - The input filetype as a string. Valid options being:&amp;#010;CRES African climate data&amp;#010;ESRI &amp; ASCII raster&amp;#010;Hadley Centre HadCM3 SRES Scenario&amp;#010;Hadley Centre HadCM3 IS92a Scenario&amp;#010;IPCC Observed Climatology&amp;#010;University of Reading Palaeoclimate data&amp;#010;Max Planck Institute fur Meteorologie (MPIfM) ECHAM4 data&amp;#010;CSIRO-Mk2 Model data&amp;#010;National Center for Atmospheric Research (NCAR) NCAR-CSM and NCAR-PCM data&amp;#010;Geophysical Fluid Dynamics Laboratory (GFDL) R30 Model data&amp;#010;Canadian Center for Climate Modelling and Analysis (CCCma) CGCM2 Model data&amp;#010;CCSR/NIES AGCM model data and CCSR OGCM model data&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16534" tag="operation_16534" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor forOmgClimateFileReader::FileType inputFileType.&amp;#010;@return aOmgClimateFileReader::FileType indicating the current input file type." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16535" tag="operation_16535" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for OmgFileWriter::FileType outputFileType.&amp;#010;This will determine how outputs from calculations will be written to disk.&amp;#010;@param theOutputFileType - a  OmgFileWriter::FileType value&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16538" tag="operation_16538" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for OmgFileWriter::FileType outputFileType.&amp;#010;Overloaded version of above that takes a string and looks up the enum.&amp;#010;@param theOutputFileTypeString - a QString containing the desired output file type.&amp;#010;Valid options include:&amp;#010;CSM for Matlab&amp;#010;CSM for Octave&amp;#010;Desktop GARP&amp;#010;ESRI ASCII Grid&amp;#010;Plain matrix with no header&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16540" tag="operation_16540" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for OmgFileWriter::FileType outputFileType.&amp;#010;@return OmgFileWriter::FileType - the current output file type" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16541" tag="operation_16541" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set up the filegroups for each filename that has been registered&amp;#010;@return bool - A boolean indicating success or failure of the operation" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16542" tag="operation_16542" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Build a list of which calculations can be performed given the input files&amp;#010;   that have been registered. The boolean field indicates whether the user actually&amp;#010;   want to perform this calculation&amp;#010;   @see addUserCalculation" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16543" tag="operation_16543" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for the list of available calculations.&amp;#010;@return QMap&lt;QString, bool>  - wherethe string is the name of the calculation and&amp;#010;bool indicates true if the user has asked for the calculation to be carried out,&amp;#010;false if he hasnt." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16546" tag="operation_16546" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Add a calculation to the list of those requested to be carried out by the user.&amp;#010;The available availableCalculationsMap will be searched for a string match, and&amp;#010;if a match is found that map entry will be tagged as true - 'please calculate'&amp;#010;if it is currently false.&amp;#010;@param theCalculationName - the name of the calculation to be enabled.&amp;#010;@return bool - Returns false if no matching calculation name is found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16548" tag="operation_16548" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Start the data analysis process.&amp;#010;When everything else is set up, this is the method to call!&amp;#010;@todo If there ever was a good place to optimise performance,&amp;#010;this is it!For starters this method can be refactored so that the&amp;#010;vector from each active filegroup is retrieved first, and then&amp;#010;passed to any calculation that needs it, looping through all the filegroups&amp;#010;simultaneously. This will prevent multiple reads of the same file for&amp;#010;different calculations. RTFS for more info.&amp;#010;@return bool - A boolean indicating success or failure of the operation." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16549" tag="operation_16549" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This is a helper method that will return a Description of the OmgClimateDataProcessorController vars.&amp;#010;This will indicate things like whether the files are in series or not, what calculations&amp;#010;are available in the available calculations map, and whether they are tagged true for&amp;#010;execution or not.&amp;#010;@return QString - containing the summary description for this climatedataprocessor." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16550" tag="operation_16550" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for bool filesInSeriesFlag.&amp;#010;When files are in series, it means that the file format only contains one months&amp;#010;data block per file and that there should be 12 such files to provide monthly&amp;#010;data for an entire year. The files should be suffixed with the month numer they&amp;#010;represent e.g.&amp;#010;meanTemp01.asc&amp;#010;meanTemp02.asc&amp;#010;meanTemp03.asc&amp;#010;meanTemp04.asc&amp;#010;meanTemp05.asc&amp;#010;meanTemp06.asc&amp;#010;meanTemp07.asc&amp;#010;meanTemp08.asc&amp;#010;meanTemp09.asc&amp;#010;meanTemp10.asc&amp;#010;meanTemp11.asc&amp;#010;meanTemp12.asc&amp;#010;@param theFlag - a flag indicating true if files are in series, otherwise false.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16552" tag="operation_16552" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for bool filesInSeriesFlag.&amp;#010;@see setFilesInSeriesFlag&amp;#010;@return bool - true if files are in series." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16553" tag="operation_16553" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="If the output format requires a header (e.g. Arc/Info ASCII grid, you can&amp;#010;define one using this method.&amp;#010;@param theOutputHeader - a QString containing the new header.&amp;#010;@return void - No return." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16556" tag="operation_16556" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Accessor for QString outputHeader.&amp;#010;@return QString - the currently set file header." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16557" tag="operation_16557" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A signal emitted to notify listeners how many variables&amp;#010;are going to be calculated for each years data.&amp;#010;@param theNumber - The total number of variables&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16559" tag="operation_16559" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A signal emitted to notify listeners how many cells&amp;#010;will be passed through in each block.&amp;#010;@param theNumber - The total number of cells in any block&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16561" tag="operation_16561" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A signal emitted to notify listeners that we are about to&amp;#010;start calculating a variable for one years data.&amp;#010;@param theName - A String containing the variable name e.g.&amp;#010;                       'Precipitation over coolest month'&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16563" tag="operation_16563" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A signal emitted to notify listeners that we&amp;#010;completed calculating the given variable.&amp;#010;@param theFileName - the filename that the variable was outputted to&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16565" tag="operation_16565" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A signal emitted to notify listeners that we&amp;#010;have completed calculating a given cell.&amp;#010;@param theResult - The calculated value for a cell&amp;#010;@return void - No return" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16578" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString outputFilePath;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="// Private attributes/** The directory where the processed results will be stored." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16579" tag="tblock_2" canDelete="false" indentLevel="1" text=" OmgClimateFileReader::FileType inputFileType;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The type of input files to be processed by the climate date processor." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16580" tag="tblock_5" canDelete="false" indentLevel="1" text=" OmgFileWriter::FileType outputFileType;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The type of output files to be produced by the climate date processor." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16582" tag="tblock_8" canDelete="false" indentLevel="1" text=" QMap&lt; QString, OmgClimateFileReader :: FileType > inputFileTypeMap;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16584" tag="tblock_11" canDelete="false" indentLevel="1" text=" QMap&lt; QString, OmgFileWriter :: FileType > outputFileTypeMap;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16585" tag="tblock_14" canDelete="false" indentLevel="1" text=" QMap&lt; QString, bool > availableCalculationsMap;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16586" tag="tblock_17" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* meanTempFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with mean temperature data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16587" tag="tblock_20" canDelete="false" indentLevel="1" text=" QString meanTempFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16588" tag="tblock_23" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* minTempFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with minimum temperature data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16589" tag="tblock_26" canDelete="false" indentLevel="1" text=" QString minTempFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16590" tag="tblock_29" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* maxTempFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with maximum temperature data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16591" tag="tblock_32" canDelete="false" indentLevel="1" text=" QString maxTempFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16592" tag="tblock_35" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* diurnalTempFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with diurnal temperature data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16593" tag="tblock_38" canDelete="false" indentLevel="1" text=" QString diurnalTempFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16594" tag="tblock_41" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* meanPrecipFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with mean precipitation data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16595" tag="tblock_44" canDelete="false" indentLevel="1" text=" QString meanPrecipFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16596" tag="tblock_47" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* frostDaysFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with number of frost days data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16597" tag="tblock_50" canDelete="false" indentLevel="1" text=" QString frostDaysFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16598" tag="tblock_53" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* totalSolarRadFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with solar radiation data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16599" tag="tblock_56" canDelete="false" indentLevel="1" text=" QString totalSolarRadFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16600" tag="tblock_59" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* windSpeedFileGroup;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with wind speed data." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16601" tag="tblock_62" canDelete="false" indentLevel="1" text=" QString windSpeedFileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16602" tag="tblock_65" canDelete="false" indentLevel="1" text=" bool filesInSeriesFlag;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16603" tag="tblock_68" canDelete="false" indentLevel="1" text=" QString outputHeader;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This is a standard header (e.g. arc/info header) that will be appended to any output grids." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16578" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16578" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@return the value of outputFilePath" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16578" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16578" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@param value the value of outputFilePath" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16579" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16579" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@return the value of inputFileType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16579" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16579" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@param value the value of inputFileType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16580" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16580" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@return the value of outputFileType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16580" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16580" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@param value the value of outputFileType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16582" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16582" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of inputFileTypeMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16582" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16582" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of inputFileTypeMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16584" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16584" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of outputFileTypeMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16584" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16584" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of outputFileTypeMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16585" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="16585" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@return the value of availableCalculationsMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16585" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16585" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@param value the value of availableCalculationsMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16586" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16586" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@return the value of meanTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16586" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16586" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@param value the value of meanTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16587" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16587" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16587" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16587" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16588" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16588" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@return the value of minTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16588" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16588" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@param value the value of minTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16589" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="16589" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of minTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16589" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="16589" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of minTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16590" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="16590" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@return the value of maxTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16590" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="16590" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@param value the value of maxTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16591" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="16591" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of maxTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16591" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="16591" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of maxTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16592" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="16592" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@return the value of diurnalTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16592" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="16592" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@param value the value of diurnalTempFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16593" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="16593" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of diurnalTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16593" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="16593" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of diurnalTempFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16594" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="16594" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@return the value of meanPrecipFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16594" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="16594" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@param value the value of meanPrecipFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16595" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="16595" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanPrecipFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16595" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="16595" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanPrecipFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16596" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="16596" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@return the value of frostDaysFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16596" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="16596" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@param value the value of frostDaysFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16597" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="16597" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of frostDaysFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16597" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="16597" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of frostDaysFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16598" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="16598" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@return the value of totalSolarRadFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16598" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="16598" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@param value the value of totalSolarRadFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16599" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="16599" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of totalSolarRadFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16599" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="16599" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of totalSolarRadFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16600" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="16600" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@return the value of windSpeedFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16600" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="16600" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@param value the value of windSpeedFileGroup" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16601" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="16601" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of windSpeedFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16601" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="16601" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of windSpeedFileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16602" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="16602" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@return the value of filesInSeriesFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16602" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="16602" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@param value the value of filesInSeriesFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16603" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="16603" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@return the value of outputHeader" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16603" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="16603" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@param value the value of outputHeader" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16567" tag="operation_16567" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="// Private methods/** This method is intended for debugging purposes only" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16570" tag="operation_16570" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set up an individual file group (called by makefileGroups for&amp;#010;  each filegroup that needs to be initialised)" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16574" tag="operation_16574" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This is a private method. It is a simple method to populate the&amp;#010;inputFileTypeMap attribute - this will usually be called by the&amp;#010;constructor(s). All keys (file type strings) will be  stored in upper case" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16575" tag="operation_16575" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This is a private method. It is a simple method to populate the&amp;#010;outputFileTypeMap attribute - this will usually be called by the&amp;#010;constructor(s). All keys (file type strings) will be  stored in upper case" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16576" tag="operation_16576" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Little utility method to convert from int to string" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGCLIMATEDATAPROCESSORCONTROLLER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimatedataprocessorcontroller.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16578" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="// Private attributes/** The directory where the processed results will be stored." />
       </header>
       <ccfdeclarationcodeblock parent_id="16578" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString outputFilePath;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="// Private attributes/** The directory where the processed results will be stored." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16578" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16578" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@return the value of outputFilePath" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16578" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16578" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputFilePath&amp;#010;// Private attributes/** The directory where the processed results will be stored.&amp;#010;@param value the value of outputFilePath" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16579" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The type of input files to be processed by the climate date processor." />
       </header>
       <ccfdeclarationcodeblock parent_id="16579" tag="tblock_2" canDelete="false" indentLevel="1" text=" OmgClimateFileReader::FileType inputFileType;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The type of input files to be processed by the climate date processor." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16579" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16579" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@return the value of inputFileType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16579" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16579" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputFileType&amp;#010;The type of input files to be processed by the climate date processor.&amp;#010;@param value the value of inputFileType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16580" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The type of output files to be produced by the climate date processor." />
       </header>
       <ccfdeclarationcodeblock parent_id="16580" tag="tblock_5" canDelete="false" indentLevel="1" text=" OmgFileWriter::FileType outputFileType;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The type of output files to be produced by the climate date processor." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16580" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16580" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@return the value of outputFileType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16580" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16580" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputFileType&amp;#010;The type of output files to be produced by the climate date processor.&amp;#010;@param value the value of outputFileType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16582" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
       </header>
       <ccfdeclarationcodeblock parent_id="16582" tag="tblock_8" canDelete="false" indentLevel="1" text=" QMap&lt; QString, OmgClimateFileReader :: FileType > inputFileTypeMap;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16582" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16582" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of inputFileTypeMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16582" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16582" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the INPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is theOmgClimateFileReader::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of inputFileTypeMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16584" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
       </header>
       <ccfdeclarationcodeblock parent_id="16584" tag="tblock_11" canDelete="false" indentLevel="1" text=" QMap&lt; QString, OmgFileWriter :: FileType > outputFileTypeMap;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16584" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="16584" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@return the value of outputFileTypeMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16584" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="16584" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputFileTypeMap&amp;#010;This is a map (associative array) that stores the key/value pairs&amp;#010;for the OUTPUT filetype. The key is the verbose name for the file type&amp;#010;(as will typically appear in the user interface, and the value&amp;#010;is the OmgFileWriter::FileType equivalent.&amp;#010;@see makeInputFileTypeMap()&amp;#010;@see makeOutputFileTypeMap()&amp;#010;@param value the value of outputFileTypeMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16585" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation" />
       </header>
       <ccfdeclarationcodeblock parent_id="16585" tag="tblock_14" canDelete="false" indentLevel="1" text=" QMap&lt; QString, bool > availableCalculationsMap;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16585" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="16585" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@return the value of availableCalculationsMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16585" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16585" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of availableCalculationsMap&amp;#010;This is a map (associative array) that stores which calculations can be performed&amp;#010;  given the input files that have been registered with this climatedataprocessor.&amp;#010;  The boolean flag will be used to indicate whether the user actually wants to&amp;#010;  perform the calculation on the input dataset(s).&amp;#010;  @see makeAvailableCalculationsMap&amp;#010;  @see addUserCalculation&amp;#010;@param value the value of availableCalculationsMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16586" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with mean temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16586" tag="tblock_17" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* meanTempFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with mean temperature data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16586" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16586" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@return the value of meanTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16586" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16586" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanTempFileGroup&amp;#010;A filegroup containing files with mean temperature data.&amp;#010;@param value the value of meanTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16587" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16587" tag="tblock_20" canDelete="false" indentLevel="1" text=" QString meanTempFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16587" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="16587" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16587" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="16587" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanTempFileName&amp;#010;The file name that contains mean temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16588" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with minimum temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16588" tag="tblock_23" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* minTempFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with minimum temperature data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16588" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="16588" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@return the value of minTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16588" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="16588" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of minTempFileGroup&amp;#010;A filegroup containing files with minimum temperature data.&amp;#010;@param value the value of minTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16589" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16589" tag="tblock_26" canDelete="false" indentLevel="1" text=" QString minTempFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16589" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="16589" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of minTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16589" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="16589" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of minTempFileName&amp;#010;The file name that contains min temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of minTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16590" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with maximum temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16590" tag="tblock_29" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* maxTempFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with maximum temperature data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16590" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="16590" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@return the value of maxTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16590" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="16590" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of maxTempFileGroup&amp;#010;A filegroup containing files with maximum temperature data.&amp;#010;@param value the value of maxTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16591" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16591" tag="tblock_32" canDelete="false" indentLevel="1" text=" QString maxTempFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16591" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="16591" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of maxTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16591" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="16591" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of maxTempFileName&amp;#010;The file name that contains max temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of maxTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16592" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with diurnal temperature data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16592" tag="tblock_35" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* diurnalTempFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with diurnal temperature data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16592" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="16592" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@return the value of diurnalTempFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16592" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="16592" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of diurnalTempFileGroup&amp;#010;A filegroup containing files with diurnal temperature data.&amp;#010;@param value the value of diurnalTempFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16593" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16593" tag="tblock_38" canDelete="false" indentLevel="1" text=" QString diurnalTempFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16593" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="16593" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of diurnalTempFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16593" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="16593" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of diurnalTempFileName&amp;#010;The file name that contains diurnal temp data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of diurnalTempFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16594" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with mean precipitation data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16594" tag="tblock_41" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* meanPrecipFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with mean precipitation data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16594" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="16594" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@return the value of meanPrecipFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16594" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="16594" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanPrecipFileGroup&amp;#010;A filegroup containing files with mean precipitation data.&amp;#010;@param value the value of meanPrecipFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16595" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16595" tag="tblock_44" canDelete="false" indentLevel="1" text=" QString meanPrecipFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16595" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="16595" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of meanPrecipFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16595" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="16595" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meanPrecipFileName&amp;#010;The file name that contains mean precipitation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of meanPrecipFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16596" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with number of frost days data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16596" tag="tblock_47" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* frostDaysFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with number of frost days data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16596" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="16596" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@return the value of frostDaysFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16596" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="16596" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of frostDaysFileGroup&amp;#010;A filegroup containing files with number of frost days data.&amp;#010;@param value the value of frostDaysFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16597" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16597" tag="tblock_50" canDelete="false" indentLevel="1" text=" QString frostDaysFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16597" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="16597" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of frostDaysFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16597" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="16597" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of frostDaysFileName&amp;#010;The file name that contains mean frost data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of frostDaysFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16598" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with solar radiation data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16598" tag="tblock_53" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* totalSolarRadFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with solar radiation data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16598" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="16598" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@return the value of totalSolarRadFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16598" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="16598" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of totalSolarRadFileGroup&amp;#010;A filegroup containing files with solar radiation data.&amp;#010;@param value the value of totalSolarRadFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16599" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16599" tag="tblock_56" canDelete="false" indentLevel="1" text=" QString totalSolarRadFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16599" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="16599" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of totalSolarRadFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16599" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="16599" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of totalSolarRadFileName&amp;#010;The file name that contains mean solar radiation data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of totalSolarRadFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16600" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A filegroup containing files with wind speed data." />
       </header>
       <ccfdeclarationcodeblock parent_id="16600" tag="tblock_59" canDelete="false" indentLevel="1" text=" OmgClimateFileGroup* windSpeedFileGroup;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A filegroup containing files with wind speed data." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16600" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="16600" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@return the value of windSpeedFileGroup" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16600" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="16600" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of windSpeedFileGroup&amp;#010;A filegroup containing files with wind speed data.&amp;#010;@param value the value of windSpeedFileGroup" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16601" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
       </header>
       <ccfdeclarationcodeblock parent_id="16601" tag="tblock_62" canDelete="false" indentLevel="1" text=" QString windSpeedFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16601" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="16601" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@return the value of windSpeedFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16601" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="16601" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of windSpeedFileName&amp;#010;The file name that contains wind speed data. If the file type is&amp;#010;one where the data is stored in series (a single file per month),&amp;#010;this member will store the name of the first file in the series.&amp;#010;@param value the value of windSpeedFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16602" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file." />
       </header>
       <ccfdeclarationcodeblock parent_id="16602" tag="tblock_65" canDelete="false" indentLevel="1" text=" bool filesInSeriesFlag;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16602" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="16602" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@return the value of filesInSeriesFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16602" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="16602" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of filesInSeriesFlag&amp;#010;For certain input types (notably cres, arcinfo and Reading paleoclimate),&amp;#010;each months data is stored in a discrete file. Files should be numbered&amp;#010;e.g. meantemp01.asc, meantemp2.asc...meantemp12.asc for each month.&amp;#010;This flag lets us know whether data is in a series of seperate files for each month&amp;#010;or can all be found in the same file.&amp;#010;@param value the value of filesInSeriesFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16603" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="This is a standard header (e.g. arc/info header) that will be appended to any output grids." />
       </header>
       <ccfdeclarationcodeblock parent_id="16603" tag="tblock_68" canDelete="false" indentLevel="1" text=" QString outputHeader;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This is a standard header (e.g. arc/info header) that will be appended to any output grids." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16603" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="16603" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@return the value of outputHeader" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16603" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="16603" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outputHeader&amp;#010;This is a standard header (e.g. arc/info header) that will be appended to any output grids.&amp;#010;@param value the value of outputHeader" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16544" parent_class="16544" fileExt=".h" fileName="qmap" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QMAP_H&amp;#010;#define QMAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16544" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QMap&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QMap ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QMAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qmap.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16604" parent_class="16604" fileExt=".h" fileName="omgclimateimporter" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGCLIMATEIMPORTER_H&amp;#010;#define OMGCLIMATEIMPORTER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstringlist.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16604" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgClimateImporter&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgClimateImporter ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16608" tag="operation_16608" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16609" tag="operation_16609" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16610" tag="operation_16610" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Import a Climate file &amp;#010;Output files will have the same name suffix as input file, with a numerical&amp;#010;suffix for each monthly block.&amp;#010;@note if an errror occurs, an empty QStringList or partially filled QStringList &amp;#010;will be returned (and an error will be emitted)&amp;#010;@param theInputFile A valid hadley climate data file&amp;#010;@param theOutputDir The directory where the output files will be generated.&amp;#010;@param theFileType The type of climate file to process&amp;#010;@return a QStringList containing the list of output file names." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16621" tag="operation_16621" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Pass an error received on up to any listening qobjects" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16623" tag="operation_16623" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Pass an error received on up to any listening qobjects" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16614" tag="operation_16614" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theError " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16616" tag="operation_16616" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMessage " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16618" tag="operation_16618" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Emit a progress signal.&amp;#010;@NOTE should only ever be called using the showProgress method so we can properly &amp;#010;support gdal style callbacks&amp;#010;@see showProgress" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGCLIMATEIMPORTER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgclimateimporter.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16625" parent_class="16625" fileExt=".h" fileName="omglayer" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGLAYER_H&amp;#010;#define OMGLAYER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;layertype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16625" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgLayer&amp;#010;An abstract base class for any class that is serialiseable to xml&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgLayer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16629" tag="operation_16629" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor ." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16630" tag="operation_16630" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Desctructor ." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16631" tag="operation_16631" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="copy constructor" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16634" tag="operation_16634" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Assignement operator" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16641" tag="operation_16641" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Accessors///** The name of this layer - usually a full pathname and file name though this&amp;#010;may vary depending on the OmgModellerAdapter implementations" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16642" tag="operation_16642" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Whether this layer represents categorical data in discrete cless or&amp;#010;a continuous surface" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16643" tag="operation_16643" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The type of this layer. &amp;#010;Note that type 'FORMAT' is used when specifying the output cellsize &amp;#010;and extents for a model. " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16644" tag="operation_16644" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Mutators///** Set the layerName&amp;#010;@see name()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16646" tag="operation_16646" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the categorical flag&amp;#010;@see isCategorical()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16648" tag="operation_16648" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the layer type&amp;#010;@see layerType()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16650" tag="operation_16650" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return an xml representation of this layer&amp;#010;@NOTE this class is not fully serialiseable (yet??)" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16651" tag="operation_16651" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theXml " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16653" tag="tblock_0" canDelete="false" indentLevel="1" text=" bool mCategoricalFlag;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A flag to store whehter this layer contains categorical or continuous data" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16654" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The name for this layer - usually a full path and filename" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16655" tag="tblock_5" canDelete="false" indentLevel="1" text=" LayerType mType;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The type / role of this layer - mask / map / output format specifier" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16653" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16653" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@return the value of mCategoricalFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16653" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16653" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@param value the value of mCategoricalFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16654" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16654" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@return the value of mName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16654" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16654" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@param value the value of mName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16655" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16655" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@return the value of mType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16655" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16655" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@param value the value of mType" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGLAYER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglayer.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16653" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag to store whehter this layer contains categorical or continuous data" />
       </header>
       <ccfdeclarationcodeblock parent_id="16653" tag="tblock_0" canDelete="false" indentLevel="1" text=" bool mCategoricalFlag;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A flag to store whehter this layer contains categorical or continuous data" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16653" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16653" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@return the value of mCategoricalFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16653" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16653" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCategoricalFlag&amp;#010;A flag to store whehter this layer contains categorical or continuous data&amp;#010;@param value the value of mCategoricalFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16654" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name for this layer - usually a full path and filename" />
       </header>
       <ccfdeclarationcodeblock parent_id="16654" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The name for this layer - usually a full path and filename" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16654" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16654" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@return the value of mName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16654" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16654" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mName&amp;#010;The name for this layer - usually a full path and filename&amp;#010;@param value the value of mName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16655" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The type / role of this layer - mask / map / output format specifier" />
       </header>
       <ccfdeclarationcodeblock parent_id="16655" tag="tblock_5" canDelete="false" indentLevel="1" text=" LayerType mType;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The type / role of this layer - mask / map / output format specifier" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16655" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16655" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@return the value of mType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16655" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16655" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mType&amp;#010;The type / role of this layer - mask / map / output format specifier&amp;#010;@param value the value of mType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16656" parent_class="16656" fileExt=".h" fileName="omglayerset" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGLAYERSET_H&amp;#010;#define OMGLAYERSET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omglayer.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qstringlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16656" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgLayerSet&amp;#010;An abstract base class for any class that is serialiseable to xml&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgLayerSet ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16660" tag="operation_16660" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor ." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16661" tag="operation_16661" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Desctructor ." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16662" tag="operation_16662" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Add a layer to the layerset&amp;#010;@see OmgLayer " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16664" tag="operation_16664" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remove a layer from the layerset&amp;#010;@see OmgLayer" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16666" tag="operation_16666" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded method to remove a layer from &amp;#010;the layerset given only its layername." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16668" tag="operation_16668" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Accessors///** The name of this layer - usually a full pathname and file name though this&amp;#010;may vary depending on the OmgModellerAdapter implementations" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16669" tag="operation_16669" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16670" tag="operation_16670" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16671" tag="operation_16671" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Helper method to return a name list of all the &amp;#010;non mask layer names." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16672" tag="operation_16672" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Mutators///** Set the layerSet Name&amp;#010;@see name()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16674" tag="operation_16674" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set a description for the layerset&amp;#010;@see description()" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16676" tag="operation_16676" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the mask layer for this layerset.&amp;#010;A mask is defined by the non null cells in a gdal dataset." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16678" tag="operation_16678" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Ancilliary helper methods///**&amp;#010;Return the name of the mask layer" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16679" tag="operation_16679" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Retrun the count of layers in the layerset - excluding the mask" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16680" tag="operation_16680" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a string representation of this LayerSet" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16681" tag="operation_16681" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return an xml representation of this LayerSet&amp;#010;@see OmgSerialisable" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16682" tag="operation_16682" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Initialise this layerset from an xml representation of this LayerSet&amp;#010;@see OmgSerialisable" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16684" tag="operation_16684" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return an html representation of this LayerSet&amp;#010;e.g.&amp;#010;&lt;ul>&amp;#010; &lt;li for each layer >&amp;#010;&lt;/ul>" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16685" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16686" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mDescription;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16687" tag="tblock_5" canDelete="false" indentLevel="1" text=" OmgLayer mMask;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16689" tag="tblock_8" canDelete="false" indentLevel="1" text=" LayersHash mLayersHash;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16685" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16685" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16685" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16685" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16686" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16686" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16686" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16686" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16687" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16687" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16687" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16687" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16689" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16689" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16689" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16689" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGLAYERSET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglayerset.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16685" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16685" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16685" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16685" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16685" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16685" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16686" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16686" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mDescription;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16686" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16686" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16686" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16686" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16687" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16687" tag="tblock_5" canDelete="false" indentLevel="1" text=" OmgLayer mMask;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16687" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16687" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16687" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16687" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16689" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16689" tag="tblock_8" canDelete="false" indentLevel="1" text=" LayersHash mLayersHash;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16689" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16689" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16689" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16689" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16691" parent_class="16691" fileExt=".h" fileName="omglocality" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGLOCALITY_H&amp;#010;#define OMGLOCALITY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16691" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgLocality&amp;#010;brief The Locality class stores data for one location" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgLocality ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16692" tag="operation_16692" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16693" tag="operation_16693" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16694" tag="operation_16694" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// accessors///** GSet the label / description of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16695" tag="operation_16695" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get the latitude of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16696" tag="operation_16696" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get the longitude of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16697" tag="operation_16697" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get the samples of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16698" tag="operation_16698" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//// Mutators///** Set the label / description of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16700" tag="operation_16700" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the latitude of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16702" tag="operation_16702" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the longitude of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16704" tag="operation_16704" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the samples of this locality" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16706" tag="operation_16706" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//helper functions" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16707" tag="operation_16707" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16708" tag="operation_16708" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16709" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mLabel;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A label for the locality." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16710" tag="tblock_2" canDelete="false" indentLevel="1" text=" float mLatitude;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Latitud" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16711" tag="tblock_5" canDelete="false" indentLevel="1" text=" float mLongitude;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Longitude" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16712" tag="tblock_8" canDelete="false" indentLevel="1" text=" OmgSampleVector mSamples;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16709" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16709" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLabel&amp;#010;A label for the locality.&amp;#010;@return the value of mLabel" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16709" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16709" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLabel&amp;#010;A label for the locality.&amp;#010;@param value the value of mLabel" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16710" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16710" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLatitude&amp;#010;The Latitud&amp;#010;@return the value of mLatitude" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16710" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16710" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLatitude&amp;#010;The Latitud&amp;#010;@param value the value of mLatitude" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16711" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16711" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLongitude&amp;#010;The Longitude&amp;#010;@return the value of mLongitude" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16711" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16711" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLongitude&amp;#010;The Longitude&amp;#010;@param value the value of mLongitude" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16712" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16712" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@return the value of mSamples" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16712" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16712" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@param value the value of mSamples" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGLOCALITY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglocality.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16709" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A label for the locality." />
       </header>
       <ccfdeclarationcodeblock parent_id="16709" tag="tblock_0" canDelete="false" indentLevel="1" text=" QString mLabel;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A label for the locality." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16709" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16709" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLabel&amp;#010;A label for the locality.&amp;#010;@return the value of mLabel" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16709" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16709" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLabel&amp;#010;A label for the locality.&amp;#010;@param value the value of mLabel" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16710" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Latitud" />
       </header>
       <ccfdeclarationcodeblock parent_id="16710" tag="tblock_2" canDelete="false" indentLevel="1" text=" float mLatitude;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Latitud" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16710" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16710" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLatitude&amp;#010;The Latitud&amp;#010;@return the value of mLatitude" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16710" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16710" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLatitude&amp;#010;The Latitud&amp;#010;@param value the value of mLatitude" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16711" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Longitude" />
       </header>
       <ccfdeclarationcodeblock parent_id="16711" tag="tblock_5" canDelete="false" indentLevel="1" text=" float mLongitude;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Longitude" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16711" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="16711" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mLongitude&amp;#010;The Longitude&amp;#010;@return the value of mLongitude" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16711" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="16711" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mLongitude&amp;#010;The Longitude&amp;#010;@param value the value of mLongitude" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16712" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model." />
       </header>
       <ccfdeclarationcodeblock parent_id="16712" tag="tblock_8" canDelete="false" indentLevel="1" text=" OmgSampleVector mSamples;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16712" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16712" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@return the value of mSamples" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16712" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16712" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mSamples&amp;#010;The collection of sampled environment values associated with this&amp;#010;locality. Populating this member is not required for when you want to &amp;#010;create a model, but should be populated when projecting a model.&amp;#010;@param value the value of mSamples" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16713" parent_class="16713" fileExt=".h" fileName="omglocalities" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGLOCALITIES_H&amp;#010;#define OMGLOCALITIES_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16713" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgLocalities&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgLocalities ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGLOCALITIES_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omglocalities.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16750" parent_class="16750" fileExt=".h" fileName="qdatetime" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QDATETIME_H&amp;#010;#define QDATETIME_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16750" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QDateTime&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QDateTime ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QDATETIME_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qdatetime.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16872" parent_class="16872" fileExt=".h" fileName="omgmodellerplugininterface" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMODELLERPLUGININTERFACE_H&amp;#010;#define OMGMODELLERPLUGININTERFACE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16872" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgModellerPluginInterface&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgModellerPluginInterface ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16881" tag="operation_16881" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16882" tag="operation_16882" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16885" tag="operation_16885" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16886" tag="operation_16886" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16889" tag="operation_16889" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16891" tag="operation_16891" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16892" tag="operation_16892" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a collection of algorithm objects in the form of an AgorithmSet.&amp;#010;The collection represents every algorithm that is available from the&amp;#010;plugin implementing this interface&amp;#010;@return OmgAlgorithmSet - a set of algorithms" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16894" tag="operation_16894" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16896" tag="operation_16896" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16898" tag="operation_16898" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get the name of this plugin instance - useful for displaying the plugin name in guis etc &amp;#010;@return QString with a user friendly name e.g. 'Local Modeller Plugin'" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16899" tag="operation_16899" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16901" tag="operation_16901" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16904" tag="operation_16904" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners that the currently running model is finished &amp;#010;@param theFilename of the completed model. If the model was &amp;#010;executed on a remote server the plugin will ensure that it is copied &amp;#010;to the local file system first.&amp;#010;" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16907" tag="operation_16907" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners how far the current model CREATION has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress &amp;#010;@see setCreationProgress(int theProgress)" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16910" tag="operation_16910" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners how far the current model PROJECTION has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress &amp;#010;@see setProjectionProgress(int theProgress)" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMODELLERPLUGININTERFACE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerplugininterface.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16977" parent_class="16977" fileExt=".h" fileName="omgmeridianswitcher" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMERIDIANSWITCHER_H&amp;#010;#define OMGMERIDIANSWITCHER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16977" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgMeridianSwitcher&amp;#010;This class will shift the meridian (where greenwich meridian is found in the leftmost column)&amp;#010;of aarcinfo grid file.....later maybe any gdal file that supports creation." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgMeridianSwitcher ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="16981" tag="operation_16981" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Default constructor" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16982" tag="operation_16982" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Destructor " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16983" tag="operation_16983" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Dis waar die kak aangejaag word...." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16986" tag="operation_16986" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theError " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16988" tag="operation_16988" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theMessage " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMERIDIANSWITCHER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmeridianswitcher.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16990" parent_class="16990" fileExt=".h" fileName="omgomlogcallback" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGOMLOGCALLBACK_H&amp;#010;#define OMGOMLOGCALLBACK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;level.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using ::OmgOmLogCallback;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16990" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgOmLogCallback&amp;#010;OmgLogCallback is  a special purpose class to proved a Qt signal&amp;#010;style interface to the openModeller Log callback mechanism.&amp;#010;&amp;#010;@author Tim Sutton 2005" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgOmLogCallback ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="17053" tag="operation_17053" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17054" tag="operation_17054" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17056" tag="operation_17056" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17057" tag="operation_17057" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor for log call back required to fit the om callback pattern.&amp;#010;@note Although the call back needs a text stream in the ctor, &amp;#010;all we want is to get the msg.c_str() &amp;#010;from the logger, so having the textstream is just so that we fit the &amp;#010;g_log callback model, but its not actually used anywhere&amp;#010;@param QTextStream a text stream - not actually used anywhere!" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17060" tag="operation_17060" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloading the () operator is required because om uses this approach&amp;#010;to push out log messages. We will simplyg capture the passed in message&amp;#010;and emit it as a QString that any connected classes can then use.&amp;#010;@note the log level parameter passed in by om is ignored at this time.&amp;#010;@param Log::Level the log level (ie urgency) of the message&amp;#010;@param string the message passed to us from om&amp;#010;@return void " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17066" tag="operation_17066" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Signal passed on from here to other qt derived classes with the log message from om" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGOMLOGCALLBACK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgomlogcallback.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17048" parent_class="17048" fileExt=".h" fileName="log" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LOG_H&amp;#010;#define LOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17048" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Log&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Log ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        log.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17068" parent_class="17068" fileExt=".h" fileName="omgscrapergbif" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGSCRAPERGBIF_H&amp;#010;#define OMGSCRAPERGBIF_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17068" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgScraperGbif&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgScraperGbif ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="17072" tag="operation_17072" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17074" tag="operation_17074" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17075" tag="operation_17075" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theTaxonName &amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17093" tag="operation_17093" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//! Let user be aware of a change in status" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17078" tag="operation_17078" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17079" tag="operation_17079" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17080" tag="operation_17080" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theShapeFile &amp;#010;@param theTextFile &amp;#010;@param theTaxonName &amp;#010;@param theCount " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17085" tag="operation_17085" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theTaxonName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17087" tag="operation_17087" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17089" tag="operation_17089" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17091" tag="operation_17091" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="17099" tag="tblock_0" canDelete="false" indentLevel="1" text=" LocalityVector mLocalityVector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17100" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mTaxonName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17101" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mFileName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="17099" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17099" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17099" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17099" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17100" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17100" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17100" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17100" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17101" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17101" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17101" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17101" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17095" tag="operation_17095" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="first part of the request is to find out the id of the species as used in gbif &amp;#010;@return A url of where the page containing data can be acquired" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17097" tag="operation_17097" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//!a parser to pull localities out of a web page //" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17102" tag="operation_17102" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//private methods" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17104" tag="operation_17104" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create an output text file.&amp;#010;@note Takes a shapefile name, strips the .shp off and saves a text file .txt" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGSCRAPERGBIF_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgscrapergbif.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17099" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17099" tag="tblock_0" canDelete="false" indentLevel="1" text=" LocalityVector mLocalityVector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17099" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17099" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17099" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17099" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17100" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17100" tag="tblock_2" canDelete="false" indentLevel="1" text=" QString mTaxonName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17100" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17100" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17100" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17100" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17101" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17101" tag="tblock_5" canDelete="false" indentLevel="1" text=" QString mFileName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17101" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17101" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17101" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17101" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17109" parent_class="17109" fileExt=".h" fileName="qurl" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QURL_H&amp;#010;#define QURL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17109" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QUrl&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QUrl ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QURL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qurl.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17110" parent_class="17110" fileExt=".h" fileName="qhttp" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QHTTP_H&amp;#010;#define QHTTP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17110" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QHttp&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QHttp ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QHTTP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qhttp.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17111" parent_class="17111" fileExt=".h" fileName="omgwebpagefetcher" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGWEBPAGEFETCHER_H&amp;#010;#define OMGWEBPAGEFETCHER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qurl.h&quot;&amp;#010;#include &quot;qhttp.h&quot;&amp;#010;#include &quot;qhttpresponseheader.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17111" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgWebPageFetcher&amp;#010;This class encapsulates everything needed to fetch the web page ata a given url. It will emit a signal with a string containing the result when done.&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgWebPageFetcher ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="17115" tag="operation_17115" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17117" tag="operation_17117" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17118" tag="operation_17118" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17119" tag="operation_17119" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theUrl " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17121" tag="operation_17121" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param state " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17123" tag="operation_17123" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param resp " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17127" tag="operation_17127" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param id &amp;#010;@param error " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17130" tag="operation_17130" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17131" tag="operation_17131" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17133" tag="operation_17133" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="17135" tag="tblock_0" canDelete="false" indentLevel="1" text=" QUrl mQUrl;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17136" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mTimeOut;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17137" tag="tblock_5" canDelete="false" indentLevel="1" text=" QHttp mQHttp;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17138" tag="tblock_8" canDelete="false" indentLevel="1" text=" int mProxyId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17139" tag="tblock_11" canDelete="false" indentLevel="1" text=" int mHostId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17140" tag="tblock_14" canDelete="false" indentLevel="1" text=" int mHeaderId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17141" tag="tblock_17" canDelete="false" indentLevel="1" text=" int mGetId;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17142" tag="tblock_20" canDelete="false" indentLevel="1" text=" QString mRequestQString;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17143" tag="tblock_23" canDelete="false" indentLevel="1" text=" QString mPageContent;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17144" tag="tblock_26" canDelete="false" indentLevel="1" text=" QHttpResponseHeader mQHttpResponseHeader;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17145" tag="tblock_29" canDelete="false" indentLevel="1" text=" bool mBusyFlag;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="17135" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17135" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17135" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17135" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17136" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17136" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17136" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17136" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17137" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17137" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17137" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17137" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17138" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="17138" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17138" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="17138" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17139" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="17139" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17139" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="17139" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17140" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="17140" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17140" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="17140" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17141" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="17141" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17141" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="17141" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17142" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="17142" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17142" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="17142" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17143" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="17143" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17143" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="17143" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17144" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="17144" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17144" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="17144" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17145" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="17145" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17145" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="17145" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17146" tag="operation_17146" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="//private methods" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17148" tag="operation_17148" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGWEBPAGEFETCHER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgwebpagefetcher.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17135" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17135" tag="tblock_0" canDelete="false" indentLevel="1" text=" QUrl mQUrl;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17135" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17135" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17135" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17135" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17136" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17136" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mTimeOut;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17136" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17136" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17136" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17136" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17137" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17137" tag="tblock_5" canDelete="false" indentLevel="1" text=" QHttp mQHttp;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17137" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17137" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17137" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17137" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17138" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17138" tag="tblock_8" canDelete="false" indentLevel="1" text=" int mProxyId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17138" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="17138" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17138" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="17138" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17139" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17139" tag="tblock_11" canDelete="false" indentLevel="1" text=" int mHostId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17139" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="17139" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17139" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="17139" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17140" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17140" tag="tblock_14" canDelete="false" indentLevel="1" text=" int mHeaderId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17140" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="17140" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17140" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="17140" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17141" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17141" tag="tblock_17" canDelete="false" indentLevel="1" text=" int mGetId;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17141" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="17141" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17141" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="17141" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17142" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17142" tag="tblock_20" canDelete="false" indentLevel="1" text=" QString mRequestQString;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17142" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="17142" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17142" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="17142" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17143" tag="tblock_23" canDelete="false" indentLevel="1" text=" QString mPageContent;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17143" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="17143" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17143" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="17143" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17144" tag="tblock_26" canDelete="false" indentLevel="1" text=" QHttpResponseHeader mQHttpResponseHeader;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17144" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="17144" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17144" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="17144" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17145" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17145" tag="tblock_29" canDelete="false" indentLevel="1" text=" bool mBusyFlag;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17145" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="17145" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17145" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="17145" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17124" parent_class="17124" fileExt=".h" fileName="qhttpresponseheader" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QHTTPRESPONSEHEADER_H&amp;#010;#define QHTTPRESPONSEHEADER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17124" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class QHttpResponseHeader&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="QHttpResponseHeader ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QHTTPRESPONSEHEADER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        qhttpresponseheader.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17149" parent_class="17149" fileExt=".h" fileName="shpinfo" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHPINFO_H&amp;#010;#define SHPINFO_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17149" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SHPInfo&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SHPInfo ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHPINFO_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shpinfo.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17151" parent_class="17151" fileExt=".h" fileName="shpobject" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHPOBJECT_H&amp;#010;#define SHPOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17151" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SHPObject&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SHPObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHPOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shpobject.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17152" parent_class="17152" fileExt=".h" fileName="shptreenode" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHPTREENODE_H&amp;#010;#define SHPTREENODE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17152" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SHPTreeNode&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SHPTreeNode ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHPTREENODE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shptreenode.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17153" parent_class="17153" fileExt=".h" fileName="shptree" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHPTREE_H&amp;#010;#define SHPTREE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17153" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SHPTree&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SHPTree ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHPTREE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shptree.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17154" parent_class="17154" fileExt=".h" fileName="dbfinfo" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DBFINFO_H&amp;#010;#define DBFINFO_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17154" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class DBFInfo&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="DBFInfo ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DBFINFO_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        dbfinfo.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17156" parent_class="17156" fileExt=".h" fileName="dbffieldtype" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DBFFIELDTYPE_H&amp;#010;#define DBFFIELDTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17156" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class DBFFieldType&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="DBFFieldType ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DBFFIELDTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        dbffieldtype.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17157" parent_class="17157" fileExt=".h" fileName="shapefilemaker" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHAPEFILEMAKER_H&amp;#010;#define SHAPEFILEMAKER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17157" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ShapefileMaker&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ShapefileMaker ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="17158" tag="operation_17158" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theOutputFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17160" tag="operation_17160" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theOutputFileName &amp;#010;@param theXIntervalDouble &amp;#010;@param theYIntervalDouble " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17164" tag="operation_17164" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17165" tag="operation_17165" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDbfName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17167" tag="operation_17167" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theFileName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17169" tag="operation_17169" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDbfHandle &amp;#010;@param theRecordIdInt &amp;#010;@param theLabel " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17173" tag="operation_17173" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theShapeHandle &amp;#010;@param theRecordInt &amp;#010;@param theXDouble &amp;#010;@param y " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17178" tag="operation_17178" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theLabel &amp;#010;@param theXDouble &amp;#010;@param theYDouble " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17182" tag="operation_17182" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theShapeHandle &amp;#010;@param theRecordInt &amp;#010;@param theCoordinateCountInt &amp;#010;@param theXArrayDouble &amp;#010;@param theYArrayDouble " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17189" tag="operation_17189" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theDbfHandle &amp;#010;@param theShapeHandle &amp;#010;@param theXIntervalDouble &amp;#010;@param theYIntervalDouble " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17194" tag="operation_17194" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param theInputFileName &amp;#010;@param theDbfHandle &amp;#010;@param theShapeHandle " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="17198" tag="tblock_0" canDelete="false" indentLevel="1" text=" DBFHandle mDbfHandle;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="handle for dBase file" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17199" tag="tblock_2" canDelete="false" indentLevel="1" text=" SHPHandle mShapeHandle;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="handle for shape files .shx and .shp" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17200" tag="tblock_5" canDelete="false" indentLevel="1" text=" int mCurrentRecInt;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="current record number" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="17198" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17198" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@return the value of mDbfHandle" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17198" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17198" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@param value the value of mDbfHandle" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17199" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17199" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@return the value of mShapeHandle" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17199" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17199" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@param value the value of mShapeHandle" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17200" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17200" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@return the value of mCurrentRecInt" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17200" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17200" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@param value the value of mCurrentRecInt" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHAPEFILEMAKER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shapefilemaker.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17198" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="handle for dBase file" />
       </header>
       <ccfdeclarationcodeblock parent_id="17198" tag="tblock_0" canDelete="false" indentLevel="1" text=" DBFHandle mDbfHandle;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="handle for dBase file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17198" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17198" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@return the value of mDbfHandle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17198" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17198" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mDbfHandle&amp;#010;handle for dBase file&amp;#010;@param value the value of mDbfHandle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17199" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="handle for shape files .shx and .shp" />
       </header>
       <ccfdeclarationcodeblock parent_id="17199" tag="tblock_2" canDelete="false" indentLevel="1" text=" SHPHandle mShapeHandle;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="handle for shape files .shx and .shp" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17199" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17199" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@return the value of mShapeHandle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17199" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17199" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mShapeHandle&amp;#010;handle for shape files .shx and .shp&amp;#010;@param value the value of mShapeHandle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17200" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="current record number" />
       </header>
       <ccfdeclarationcodeblock parent_id="17200" tag="tblock_5" canDelete="false" indentLevel="1" text=" int mCurrentRecInt;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="current record number" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17200" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17200" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@return the value of mCurrentRecInt" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17200" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17200" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCurrentRecInt&amp;#010;current record number&amp;#010;@param value the value of mCurrentRecInt" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader17018" parent_class="17018" fileExt=".h" fileName="wktmap" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WKTMAP_H&amp;#010;#define WKTMAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17018" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class WktMap&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="WktMap ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WKTMAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wktmap.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader29450" parent_class="29450" fileExt=".h" fileName="omgmodellerdummyplugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMODELLERDUMMYPLUGIN_H&amp;#010;#define OMGMODELLERDUMMYPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omgmodellerplugininterface.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29450" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgModellerDummyPlugin&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;///qt includes//#include &quot;qlogcallback.h&quot;/**&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgModellerDummyPlugin ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="29456" tag="operation_29456" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The default constructor is private so that no one can use it!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29457" tag="operation_29457" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29459" tag="operation_29459" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29460" tag="operation_29460" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29462" tag="operation_29462" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29464" tag="operation_29464" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29465" tag="operation_29465" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29466" tag="operation_29466" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29468" tag="operation_29468" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29470" tag="operation_29470" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29471" tag="operation_29471" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29473" tag="operation_29473" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29475" tag="operation_29475" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners that the currently running model is finished &amp;#010;@param theFilename of the completed model. If the model was &amp;#010;executed on a remote server the plugin will ensure that it is copied &amp;#010;to the local file system first.&amp;#010;" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29477" tag="operation_29477" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners how far the current model has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="29480" tag="tblock_0" canDelete="false" indentLevel="1" text=" int mModelProgress;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29481" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mMapProgress;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation parent_id="29454" tag="operation_29454" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="29480" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29480" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29480" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="29480" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29481" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29481" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29481" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29481" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29479" tag="operation_29479" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Private method called by any ctor on initial start up. &amp;#010;It will go and find the algorithm list etc." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMODELLERDUMMYPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerdummyplugin.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29480" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29480" tag="tblock_0" canDelete="false" indentLevel="1" text=" int mModelProgress;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29480" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29480" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29480" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="29480" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29481" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29481" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mMapProgress;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29481" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29481" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29481" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29481" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader29482" parent_class="29482" fileExt=".h" fileName="openmodeller" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OPENMODELLER_H&amp;#010;#define OPENMODELLER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29482" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OpenModeller&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OpenModeller ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OPENMODELLER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        openmodeller.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader29483" parent_class="29483" fileExt=".h" fileName="omgmodellerlocalplugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMODELLERLOCALPLUGIN_H&amp;#010;#define OMGMODELLERLOCALPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omgmodellerplugininterface.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29483" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgModellerLocalPlugin&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgModellerLocalPlugin ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="29489" tag="operation_29489" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The default constructor is private so that no one can use it!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29490" tag="operation_29490" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29492" tag="operation_29492" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29493" tag="operation_29493" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29495" tag="operation_29495" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29497" tag="operation_29497" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29498" tag="operation_29498" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a collection of algorithm objects in the form of an AgorithmSet.&amp;#010;The collection represents every algorithm that is available from the&amp;#010;plugin implementing this interface&amp;#010;@return OmgAlgorithmSet - a set of algorithms" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29499" tag="operation_29499" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29501" tag="operation_29501" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29503" tag="operation_29503" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for creation progress variable&amp;#010;Mainly intended to be used by callbacks.&amp;#010;Will emit a modelCreationProgressUpdate signal if the&amp;#010;new value differs from the old one.&amp;#010;@param int theProgress" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29505" tag="operation_29505" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Mutator for projection progress variable&amp;#010;Mainly intended to be used by callbacks.&amp;#010;Will emit a modelCreationProgressUpdate signal if the&amp;#010;new value differs from the old one.&amp;#010;@param int theProgress" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29507" tag="operation_29507" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29508" tag="operation_29508" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29510" tag="operation_29510" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="29519" tag="tblock_14" canDelete="false" indentLevel="1" text="static  bool mAlgFactoryStartedFlag;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29514" tag="tblock_0" canDelete="false" indentLevel="1" text=" OpenModeller* mpOpenModeller;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29515" tag="tblock_2" canDelete="false" indentLevel="1" text=" OmgOmLogCallback* mpLogCallBack;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29516" tag="tblock_5" canDelete="false" indentLevel="1" text=" int mModelProgress;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="//as %" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29517" tag="tblock_8" canDelete="false" indentLevel="1" text=" int mMapProgress;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="// as %" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29518" tag="tblock_11" canDelete="false" indentLevel="1" text=" int mModelId;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Id of the model currently being executed" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation parent_id="29487" tag="operation_29487" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="29519" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="29519" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@return the value of mAlgFactoryStartedFlag" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29519" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="29519" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@param value the value of mAlgFactoryStartedFlag" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="29514" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29514" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29514" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="29514" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29515" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29515" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29515" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29515" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29516" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="29516" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mModelProgress&amp;#010;//as %&amp;#010;@return the value of mModelProgress" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29516" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="29516" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mModelProgress&amp;#010;//as %&amp;#010;@param value the value of mModelProgress" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29517" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="29517" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mMapProgress&amp;#010;// as %&amp;#010;@return the value of mMapProgress" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29517" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="29517" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mMapProgress&amp;#010;// as %&amp;#010;@param value the value of mMapProgress" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29518" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="29518" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@return the value of mModelId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29518" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="29518" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@param value the value of mModelId" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29512" tag="operation_29512" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Private method called by any ctor on initial start up. &amp;#010;It will go and find the algorithm list etc." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29520" tag="operation_29520" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This is used by the om callbacks to let us know of model creation progress changes&amp;#010;@param theProgress how far the task has progressed." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29522" tag="operation_29522" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This is used by the om callbacks to let us know of map projection progress changes&amp;#010;@param theProgress how far the task has progressed." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29524" tag="operation_29524" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="A private helper method to write xml to a file" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMODELLERLOCALPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerlocalplugin.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29514" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29514" tag="tblock_0" canDelete="false" indentLevel="1" text=" OpenModeller* mpOpenModeller;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29514" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29514" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29514" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="29514" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29515" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29515" tag="tblock_2" canDelete="false" indentLevel="1" text=" OmgOmLogCallback* mpLogCallBack;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29515" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29515" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29515" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29515" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29516" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="//as %" />
       </header>
       <ccfdeclarationcodeblock parent_id="29516" tag="tblock_5" canDelete="false" indentLevel="1" text=" int mModelProgress;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="//as %" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29516" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="29516" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mModelProgress&amp;#010;//as %&amp;#010;@return the value of mModelProgress" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29516" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="29516" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mModelProgress&amp;#010;//as %&amp;#010;@param value the value of mModelProgress" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29517" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="// as %" />
       </header>
       <ccfdeclarationcodeblock parent_id="29517" tag="tblock_8" canDelete="false" indentLevel="1" text=" int mMapProgress;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="// as %" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29517" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="29517" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mMapProgress&amp;#010;// as %&amp;#010;@return the value of mMapProgress" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29517" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="29517" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mMapProgress&amp;#010;// as %&amp;#010;@param value the value of mMapProgress" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29518" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Id of the model currently being executed" />
       </header>
       <ccfdeclarationcodeblock parent_id="29518" tag="tblock_11" canDelete="false" indentLevel="1" text=" int mModelId;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Id of the model currently being executed" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29518" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="29518" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@return the value of mModelId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29518" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="29518" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mModelId&amp;#010;Id of the model currently being executed&amp;#010;@param value the value of mModelId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29519" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file)." />
       </header>
       <ccfdeclarationcodeblock parent_id="29519" tag="tblock_14" canDelete="false" indentLevel="1" text="static  bool mAlgFactoryStartedFlag;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29519" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="29519" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@return the value of mAlgFactoryStartedFlag" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29519" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="29519" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mAlgFactoryStartedFlag&amp;#010;A flag to see whether the Om Aglorithm Factory has already been initialised.&amp;#010;The factory should only be initialised once in the entire lifetime of you application.&amp;#010;If you do it more than once you will get duplicate entries when you read the alg list.&amp;#010;Because of this we use teh flag below to determin if the Factory has previously been initialised.&amp;#010;@NOTE C++ does not guarantee the initialised state of a variable, so variable is initialised &amp;#010;outside the class (see top of accompanying .cpp file).&amp;#010;@param value the value of mAlgFactoryStartedFlag" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader29527" parent_class="29527" fileExt=".h" fileName="omgmodellerwebservicesplugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OMGMODELLERWEBSERVICESPLUGIN_H&amp;#010;#define OMGMODELLERWEBSERVICESPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;omgmodellerplugininterface.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29527" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OmgModellerWebServicesPlugin&amp;#010;  Copyright (C) 2005 by Tim Sutton   *&amp;#010;  tim@linfiniti.com   *&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  This program is distributed in the hope that it will be useful,       *&amp;#010;  but WITHOUT ANY WARRANTY; without even the implied warranty of        *&amp;#010;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *&amp;#010;  GNU General Public License for more details.                          *&amp;#010;                                                                        *&amp;#010;  You should have received a copy of the GNU General Public License     *&amp;#010;  along with this program; if not, write to the                         *&amp;#010;  Free Software Foundation, Inc.,                                       *&amp;#010;  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *&amp;#010;///qt includes//gsoap includes/**&amp;#010;@author Tim Sutton" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OmgModellerWebServicesPlugin ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation parent_id="29533" tag="operation_29533" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The default constructor is private so that no one can use it!" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29534" tag="operation_29534" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29536" tag="operation_29536" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29537" tag="operation_29537" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create an initial model definition&amp;#010; @param &amp;OmgModel Reference to the model object that will be used as a basis for the mode" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29539" tag="operation_29539" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Project a model into a climate dataset.&amp;#010;@NOTE the model passed in as a parameter must have a valid model definition&amp;#010;@param &amp;OmgModel Reference to the model object that will be used to project this model." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29541" tag="operation_29541" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a list of the algorithm names.&amp;#010;Use getAlgorithmId with one of the returned names to find out an algs id&amp;#010;@return QStringList A String List of the algorithm names" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29542" tag="operation_29542" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a collection of algorithm objects in the form of an AgorithmSet.&amp;#010;The collection represents every algorithm that is available from the&amp;#010;plugin implementing this interface&amp;#010;@return OmgAlgorithmSet - a set of algorithms" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29543" tag="operation_29543" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm id given its name.&amp;#010;@return QString An empty string will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29545" tag="operation_29545" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get an algorithm given its id.&amp;#010;@return OmgAlgorithm An empty algorithm will be returned if the algorithm id could not be found." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29547" tag="operation_29547" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29548" tag="operation_29548" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29550" tag="operation_29550" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners of an updated log message from openmodeller. &amp;#010;@param theMessage The message received by the log callback" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29552" tag="operation_29552" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners that the currently running model is finished &amp;#010;@param theFilename of the completed model. If the model was &amp;#010;executed on a remote server the plugin will ensure that it is copied &amp;#010;to the local file system first.&amp;#010;" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29554" tag="operation_29554" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Notifies any listeners how far the current model has progressed&amp;#010;(progress is expressed as a percentage) &amp;#010;@param theProgress " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="29560" tag="tblock_0" canDelete="false" indentLevel="1" text=" int mModelProgress;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29561" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mMapProgress;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation parent_id="29531" tag="operation_29531" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="29560" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29560" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29560" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="29560" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29561" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29561" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29561" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29561" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29556" tag="operation_29556" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Private method called by any ctor on initial start up. &amp;#010;It will go and find the algorithm list etc." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29558" tag="operation_29558" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OMGMODELLERWEBSERVICESPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        omgmodellerwebservicesplugin.h - Copyright timlinux&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Jun 8 2006 at 17:08:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29560" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29560" tag="tblock_0" canDelete="false" indentLevel="1" text=" int mModelProgress;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29560" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29560" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29560" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="29560" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29561" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29561" tag="tblock_2" canDelete="false" indentLevel="1" text=" int mMapProgress;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29561" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29561" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29561" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29561" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
